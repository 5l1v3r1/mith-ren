                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Jul  5 2014) (Linux)
                                      4 ; This file was generated Mon Sep 19 15:43:07 2016
                                      5 ;--------------------------------------------------------
                                      6 	.module radio
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _spi_transfer
                                     13 	.globl _memcpy
                                     14 	.globl _RFRDY
                                     15 	.globl _rfcsn
                                     16 	.globl _rfce
                                     17 	.globl _ien1
                                     18 	.globl _ien0
                                     19 	.globl _REGXC
                                     20 	.globl _REGXL
                                     21 	.globl _REGXH
                                     22 	.globl _TICKDV
                                     23 	.globl _RFDAT
                                     24 	.globl _P0DIR
                                     25 	.globl _P0
                                     26 	.globl _AESIA1
                                     27 	.globl _AESIV
                                     28 	.globl _usbcon
                                     29 	.globl _rfcon
                                     30 	.globl _rfctl
                                     31 	.globl _handle_radio_request_PARM_2
                                     32 	.globl _crc_update_PARM_3
                                     33 	.globl _crc_update_PARM_2
                                     34 	.globl _write_register_byte_PARM_2
                                     35 	.globl _spi_read_PARM_3
                                     36 	.globl _spi_read_PARM_2
                                     37 	.globl _spi_write_PARM_3
                                     38 	.globl _spi_write_PARM_2
                                     39 	.globl _configure_phy_PARM_3
                                     40 	.globl _configure_phy_PARM_2
                                     41 	.globl _configure_mac_PARM_3
                                     42 	.globl _configure_mac_PARM_2
                                     43 	.globl _configure_address_PARM_2
                                     44 	.globl _enter_promiscuous_mode_generic_PARM_4
                                     45 	.globl _enter_promiscuous_mode_generic_PARM_3
                                     46 	.globl _enter_promiscuous_mode_generic_PARM_2
                                     47 	.globl _enter_promiscuous_mode_PARM_2
                                     48 	.globl _setupbuf
                                     49 	.globl _out1buf
                                     50 	.globl _in1buf
                                     51 	.globl _in0buf
                                     52 	.globl _enter_promiscuous_mode
                                     53 	.globl _enter_promiscuous_mode_generic
                                     54 	.globl _configure_address
                                     55 	.globl _configure_mac
                                     56 	.globl _configure_phy
                                     57 	.globl _spi_write
                                     58 	.globl _spi_read
                                     59 	.globl _write_register_byte
                                     60 	.globl _read_register_byte
                                     61 	.globl _crc_update
                                     62 	.globl _handle_radio_request
                                     63 ;--------------------------------------------------------
                                     64 ; special function registers
                                     65 ;--------------------------------------------------------
                                     66 	.area RSEG    (ABS,DATA)
      000000                         67 	.org 0x0000
                           0000E6    68 _rfctl	=	0x00e6
                           000090    69 _rfcon	=	0x0090
                           0000A0    70 _usbcon	=	0x00a0
                           0000F2    71 _AESIV	=	0x00f2
                           0000F5    72 _AESIA1	=	0x00f5
                           000080    73 _P0	=	0x0080
                           000094    74 _P0DIR	=	0x0094
                           0000E5    75 _RFDAT	=	0x00e5
                           0000AB    76 _TICKDV	=	0x00ab
                           0000AB    77 _REGXH	=	0x00ab
                           0000AC    78 _REGXL	=	0x00ac
                           0000AD    79 _REGXC	=	0x00ad
                           0000A8    80 _ien0	=	0x00a8
                           0000B8    81 _ien1	=	0x00b8
                                     82 ;--------------------------------------------------------
                                     83 ; special function bits
                                     84 ;--------------------------------------------------------
                                     85 	.area RSEG    (ABS,DATA)
      000000                         86 	.org 0x0000
                           000090    87 _rfce	=	0x0090
                           000091    88 _rfcsn	=	0x0091
                           0000C0    89 _RFRDY	=	0x00c0
                                     90 ;--------------------------------------------------------
                                     91 ; overlayable register banks
                                     92 ;--------------------------------------------------------
                                     93 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         94 	.ds 8
                                     95 ;--------------------------------------------------------
                                     96 ; internal ram data
                                     97 ;--------------------------------------------------------
                                     98 	.area DSEG    (DATA)
      000000                         99 _enter_promiscuous_mode_sloc0_1_0:
      000000                        100 	.ds 2
      000002                        101 _enter_promiscuous_mode_generic_sloc0_1_0:
      000002                        102 	.ds 2
      000004                        103 _spi_read_sloc0_1_0:
      000004                        104 	.ds 3
      000007                        105 _handle_radio_request_sloc0_1_0:
      000007                        106 	.ds 1
      000008                        107 _handle_radio_request_sloc1_1_0:
      000008                        108 	.ds 3
      00000B                        109 _handle_radio_request_sloc2_1_0:
      00000B                        110 	.ds 2
                                    111 ;--------------------------------------------------------
                                    112 ; overlayable items in internal ram 
                                    113 ;--------------------------------------------------------
                                    114 ;--------------------------------------------------------
                                    115 ; indirectly addressable internal ram data
                                    116 ;--------------------------------------------------------
                                    117 	.area ISEG    (DATA)
                                    118 ;--------------------------------------------------------
                                    119 ; absolute internal ram data
                                    120 ;--------------------------------------------------------
                                    121 	.area IABS    (ABS,DATA)
                                    122 	.area IABS    (ABS,DATA)
                                    123 ;--------------------------------------------------------
                                    124 ; bit data
                                    125 ;--------------------------------------------------------
                                    126 	.area BSEG    (BIT)
      000000                        127 _configured:
      000000                        128 	.ds 1
                                    129 ;--------------------------------------------------------
                                    130 ; paged external ram data
                                    131 ;--------------------------------------------------------
                                    132 	.area PSEG    (PAG,XDATA)
                                    133 ;--------------------------------------------------------
                                    134 ; external ram data
                                    135 ;--------------------------------------------------------
                                    136 	.area XSEG    (XDATA)
                           00C700   137 _in0buf	=	0xc700
                           00C680   138 _in1buf	=	0xc680
                           00C640   139 _out1buf	=	0xc640
                           00C7E8   140 _setupbuf	=	0xc7e8
      000000                        141 _radio_mode:
      000000                        142 	.ds 1
      000001                        143 _pm_prefix_length:
      000001                        144 	.ds 2
      000003                        145 _pm_prefix:
      000003                        146 	.ds 5
      000008                        147 _pm_payload_length:
      000008                        148 	.ds 1
      000009                        149 _enter_promiscuous_mode_PARM_2:
      000009                        150 	.ds 1
      00000A                        151 _enter_promiscuous_mode_prefix_1_34:
      00000A                        152 	.ds 3
      00000D                        153 _enter_promiscuous_mode_address_2_36:
      00000D                        154 	.ds 2
      00000F                        155 _enter_promiscuous_mode_generic_PARM_2:
      00000F                        156 	.ds 1
      000010                        157 _enter_promiscuous_mode_generic_PARM_3:
      000010                        158 	.ds 1
      000011                        159 _enter_promiscuous_mode_generic_PARM_4:
      000011                        160 	.ds 1
      000012                        161 _enter_promiscuous_mode_generic_prefix_1_37:
      000012                        162 	.ds 3
      000015                        163 _enter_promiscuous_mode_generic_address_2_39:
      000015                        164 	.ds 2
      000017                        165 _configure_address_PARM_2:
      000017                        166 	.ds 1
      000018                        167 _configure_address_address_1_41:
      000018                        168 	.ds 3
      00001B                        169 _configure_mac_PARM_2:
      00001B                        170 	.ds 1
      00001C                        171 _configure_mac_PARM_3:
      00001C                        172 	.ds 1
      00001D                        173 _configure_mac_feature_1_43:
      00001D                        174 	.ds 1
      00001E                        175 _configure_phy_PARM_2:
      00001E                        176 	.ds 1
      00001F                        177 _configure_phy_PARM_3:
      00001F                        178 	.ds 1
      000020                        179 _configure_phy_config_1_45:
      000020                        180 	.ds 1
      000021                        181 _spi_transfer_byte_1_47:
      000021                        182 	.ds 1
      000022                        183 _spi_write_PARM_2:
      000022                        184 	.ds 3
      000025                        185 _spi_write_PARM_3:
      000025                        186 	.ds 1
      000026                        187 _spi_write_command_1_49:
      000026                        188 	.ds 1
      000027                        189 _spi_read_PARM_2:
      000027                        190 	.ds 3
      00002A                        191 _spi_read_PARM_3:
      00002A                        192 	.ds 1
      00002B                        193 _spi_read_command_1_51:
      00002B                        194 	.ds 1
      00002C                        195 _write_register_byte_PARM_2:
      00002C                        196 	.ds 1
      00002D                        197 _write_register_byte_reg_1_53:
      00002D                        198 	.ds 1
      00002E                        199 _read_register_byte_reg_1_55:
      00002E                        200 	.ds 1
      00002F                        201 _read_register_byte_value_1_56:
      00002F                        202 	.ds 1
      000030                        203 _crc_update_PARM_2:
      000030                        204 	.ds 1
      000031                        205 _crc_update_PARM_3:
      000031                        206 	.ds 1
      000032                        207 _crc_update_crc_1_57:
      000032                        208 	.ds 2
      000034                        209 _handle_radio_request_PARM_2:
      000034                        210 	.ds 3
      000037                        211 _handle_radio_request_request_1_59:
      000037                        212 	.ds 1
      000038                        213 _handle_radio_request_command_2_62:
      000038                        214 	.ds 9
      000041                        215 _handle_radio_request_value_2_70:
      000041                        216 	.ds 1
      000042                        217 _handle_radio_request_crc_4_75:
      000042                        218 	.ds 2
      000044                        219 _handle_radio_request_crc_given_4_75:
      000044                        220 	.ds 2
      000046                        221 _handle_radio_request_payload_4_75:
      000046                        222 	.ds 37
      00006B                        223 _handle_radio_request_payload_4_81:
      00006B                        224 	.ds 37
                                    225 ;--------------------------------------------------------
                                    226 ; absolute external ram data
                                    227 ;--------------------------------------------------------
                                    228 	.area XABS    (ABS,XDATA)
                                    229 ;--------------------------------------------------------
                                    230 ; external initialized ram data
                                    231 ;--------------------------------------------------------
                                    232 	.area XISEG   (XDATA)
      000000                        233 _nordic_bootloader:
      000000                        234 	.ds 2
      000002                        235 _logitech_bootloader:
      000002                        236 	.ds 2
      000004                        237 _promiscuous_address:
      000004                        238 	.ds 2
                                    239 	.area HOME    (CODE)
                                    240 	.area GSINIT0 (CODE)
                                    241 	.area GSINIT1 (CODE)
                                    242 	.area GSINIT2 (CODE)
                                    243 	.area GSINIT3 (CODE)
                                    244 	.area GSINIT4 (CODE)
                                    245 	.area GSINIT5 (CODE)
                                    246 	.area GSINIT  (CODE)
                                    247 	.area GSFINAL (CODE)
                                    248 	.area CSEG    (CODE)
                                    249 ;--------------------------------------------------------
                                    250 ; global & static initialisations
                                    251 ;--------------------------------------------------------
                                    252 	.area HOME    (CODE)
                                    253 	.area GSINIT  (CODE)
                                    254 	.area GSFINAL (CODE)
                                    255 	.area GSINIT  (CODE)
                                    256 ;--------------------------------------------------------
                                    257 ; Home
                                    258 ;--------------------------------------------------------
                                    259 	.area HOME    (CODE)
                                    260 	.area HOME    (CODE)
                                    261 ;--------------------------------------------------------
                                    262 ; code
                                    263 ;--------------------------------------------------------
                                    264 	.area CSEG    (CODE)
                                    265 ;------------------------------------------------------------
                                    266 ;Allocation info for local variables in function 'enter_promiscuous_mode'
                                    267 ;------------------------------------------------------------
                                    268 ;sloc0                     Allocated with name '_enter_promiscuous_mode_sloc0_1_0'
                                    269 ;prefix_length             Allocated with name '_enter_promiscuous_mode_PARM_2'
                                    270 ;prefix                    Allocated with name '_enter_promiscuous_mode_prefix_1_34'
                                    271 ;x                         Allocated with name '_enter_promiscuous_mode_x_1_35'
                                    272 ;address                   Allocated with name '_enter_promiscuous_mode_address_2_36'
                                    273 ;------------------------------------------------------------
                                    274 ;	src/radio.c:9: void enter_promiscuous_mode(uint8_t * prefix, uint8_t prefix_length)
                                    275 ;	-----------------------------------------
                                    276 ;	 function enter_promiscuous_mode
                                    277 ;	-----------------------------------------
      000000                        278 _enter_promiscuous_mode:
                           000007   279 	ar7 = 0x07
                           000006   280 	ar6 = 0x06
                           000005   281 	ar5 = 0x05
                           000004   282 	ar4 = 0x04
                           000003   283 	ar3 = 0x03
                           000002   284 	ar2 = 0x02
                           000001   285 	ar1 = 0x01
                           000000   286 	ar0 = 0x00
      000000 AF F0            [24]  287 	mov	r7,b
      000002 AE 83            [24]  288 	mov	r6,dph
      000004 E5 82            [12]  289 	mov	a,dpl
      000006 90r00r0A         [24]  290 	mov	dptr,#_enter_promiscuous_mode_prefix_1_34
      000009 F0               [24]  291 	movx	@dptr,a
      00000A EE               [12]  292 	mov	a,r6
      00000B A3               [24]  293 	inc	dptr
      00000C F0               [24]  294 	movx	@dptr,a
      00000D EF               [12]  295 	mov	a,r7
      00000E A3               [24]  296 	inc	dptr
      00000F F0               [24]  297 	movx	@dptr,a
                                    298 ;	src/radio.c:13: for(x = 0; x < prefix_length; x++) pm_prefix[prefix_length - 1 - x] = prefix[x];
      000010 90r00r0A         [24]  299 	mov	dptr,#_enter_promiscuous_mode_prefix_1_34
      000013 E0               [24]  300 	movx	a,@dptr
      000014 FD               [12]  301 	mov	r5,a
      000015 A3               [24]  302 	inc	dptr
      000016 E0               [24]  303 	movx	a,@dptr
      000017 FE               [12]  304 	mov	r6,a
      000018 A3               [24]  305 	inc	dptr
      000019 E0               [24]  306 	movx	a,@dptr
      00001A FF               [12]  307 	mov	r7,a
      00001B 90r00r09         [24]  308 	mov	dptr,#_enter_promiscuous_mode_PARM_2
      00001E E0               [24]  309 	movx	a,@dptr
      00001F FC               [12]  310 	mov	r4,a
      000020 7A 00            [12]  311 	mov	r2,#0x00
      000022 7B 00            [12]  312 	mov	r3,#0x00
      000024                        313 00109$:
      000024 8C 00            [24]  314 	mov	ar0,r4
      000026 79 00            [12]  315 	mov	r1,#0x00
      000028 C3               [12]  316 	clr	c
      000029 EA               [12]  317 	mov	a,r2
      00002A 98               [12]  318 	subb	a,r0
      00002B EB               [12]  319 	mov	a,r3
      00002C 64 80            [12]  320 	xrl	a,#0x80
      00002E 89 F0            [24]  321 	mov	b,r1
      000030 63 F0 80         [24]  322 	xrl	b,#0x80
      000033 95 F0            [12]  323 	subb	a,b
      000035 50 33            [24]  324 	jnc	00101$
      000037 EC               [12]  325 	mov	a,r4
      000038 14               [12]  326 	dec	a
      000039 8A 00            [24]  327 	mov	ar0,r2
      00003B C3               [12]  328 	clr	c
      00003C 98               [12]  329 	subb	a,r0
      00003D 24r03            [12]  330 	add	a,#_pm_prefix
      00003F F5*00            [12]  331 	mov	_enter_promiscuous_mode_sloc0_1_0,a
      000041 E4               [12]  332 	clr	a
      000042 34s00            [12]  333 	addc	a,#(_pm_prefix >> 8)
      000044 F5*01            [12]  334 	mov	(_enter_promiscuous_mode_sloc0_1_0 + 1),a
      000046 C0 04            [24]  335 	push	ar4
      000048 EA               [12]  336 	mov	a,r2
      000049 2D               [12]  337 	add	a,r5
      00004A F8               [12]  338 	mov	r0,a
      00004B EB               [12]  339 	mov	a,r3
      00004C 3E               [12]  340 	addc	a,r6
      00004D F9               [12]  341 	mov	r1,a
      00004E 8F 04            [24]  342 	mov	ar4,r7
      000050 88 82            [24]  343 	mov	dpl,r0
      000052 89 83            [24]  344 	mov	dph,r1
      000054 8C F0            [24]  345 	mov	b,r4
      000056 12r00r00         [24]  346 	lcall	__gptrget
      000059 F8               [12]  347 	mov	r0,a
      00005A 85*00 82         [24]  348 	mov	dpl,_enter_promiscuous_mode_sloc0_1_0
      00005D 85*01 83         [24]  349 	mov	dph,(_enter_promiscuous_mode_sloc0_1_0 + 1)
      000060 F0               [24]  350 	movx	@dptr,a
      000061 0A               [12]  351 	inc	r2
      000062 BA 00 01         [24]  352 	cjne	r2,#0x00,00137$
      000065 0B               [12]  353 	inc	r3
      000066                        354 00137$:
      000066 D0 04            [24]  355 	pop	ar4
      000068 80 BA            [24]  356 	sjmp	00109$
      00006A                        357 00101$:
                                    358 ;	src/radio.c:14: pm_prefix_length = prefix_length > 5 ? 5 : prefix_length;
      00006A EC               [12]  359 	mov	a,r4
      00006B 24 FA            [12]  360 	add	a,#0xff - 0x05
      00006D 50 04            [24]  361 	jnc	00113$
      00006F 7F 05            [12]  362 	mov	r7,#0x05
      000071 80 02            [24]  363 	sjmp	00114$
      000073                        364 00113$:
      000073 8C 07            [24]  365 	mov	ar7,r4
      000075                        366 00114$:
      000075 90r00r01         [24]  367 	mov	dptr,#_pm_prefix_length
      000078 EF               [12]  368 	mov	a,r7
      000079 F0               [24]  369 	movx	@dptr,a
      00007A E4               [12]  370 	clr	a
      00007B A3               [24]  371 	inc	dptr
      00007C F0               [24]  372 	movx	@dptr,a
                                    373 ;	src/radio.c:15: radio_mode = promiscuous;
      00007D 90r00r00         [24]  374 	mov	dptr,#_radio_mode
      000080 04               [12]  375 	inc	a
      000081 F0               [24]  376 	movx	@dptr,a
                                    377 ;	src/radio.c:16: pm_payload_length = 32;
      000082 90r00r08         [24]  378 	mov	dptr,#_pm_payload_length
      000085 74 20            [12]  379 	mov	a,#0x20
      000087 F0               [24]  380 	movx	@dptr,a
                                    381 ;	src/radio.c:19: rfce = 0;
      000088 C2 90            [12]  382 	clr	_rfce
                                    383 ;	src/radio.c:22: write_register_byte(EN_RXADDR, ENRX_P0);
      00008A 90r00r2C         [24]  384 	mov	dptr,#_write_register_byte_PARM_2
      00008D 74 01            [12]  385 	mov	a,#0x01
      00008F F0               [24]  386 	movx	@dptr,a
      000090 75 82 02         [24]  387 	mov	dpl,#0x02
      000093 12r04r53         [24]  388 	lcall	_write_register_byte
                                    389 ;	src/radio.c:25: if(pm_prefix_length == 0) configure_address(promiscuous_address, 2);
      000096 90r00r01         [24]  390 	mov	dptr,#_pm_prefix_length
      000099 E0               [24]  391 	movx	a,@dptr
      00009A FE               [12]  392 	mov	r6,a
      00009B A3               [24]  393 	inc	dptr
      00009C E0               [24]  394 	movx	a,@dptr
      00009D FF               [12]  395 	mov	r7,a
      00009E 4E               [12]  396 	orl	a,r6
      00009F 70 11            [24]  397 	jnz	00106$
      0000A1 90r00r17         [24]  398 	mov	dptr,#_configure_address_PARM_2
      0000A4 74 02            [12]  399 	mov	a,#0x02
      0000A6 F0               [24]  400 	movx	@dptr,a
      0000A7 90r00r04         [24]  401 	mov	dptr,#_promiscuous_address
      0000AA 75 F0 00         [24]  402 	mov	b,#0x00
      0000AD 12r02r83         [24]  403 	lcall	_configure_address
      0000B0 80 43            [24]  404 	sjmp	00107$
      0000B2                        405 00106$:
                                    406 ;	src/radio.c:28: else if(pm_prefix_length == 1)
      0000B2 BE 01 32         [24]  407 	cjne	r6,#0x01,00103$
      0000B5 BF 00 2F         [24]  408 	cjne	r7,#0x00,00103$
                                    409 ;	src/radio.c:30: uint8_t address[2] = { pm_prefix[0], (pm_prefix[0] & 0x80) == 0x80 ? 0xAA : 0x55 };
      0000B8 90r00r03         [24]  410 	mov	dptr,#_pm_prefix
      0000BB E0               [24]  411 	movx	a,@dptr
      0000BC 90r00r0D         [24]  412 	mov	dptr,#_enter_promiscuous_mode_address_2_36
      0000BF F0               [24]  413 	movx	@dptr,a
      0000C0 90r00r03         [24]  414 	mov	dptr,#_pm_prefix
      0000C3 E0               [24]  415 	movx	a,@dptr
      0000C4 FD               [12]  416 	mov	r5,a
      0000C5 53 05 80         [24]  417 	anl	ar5,#0x80
      0000C8 BD 80 04         [24]  418 	cjne	r5,#0x80,00115$
      0000CB 7D AA            [12]  419 	mov	r5,#0xAA
      0000CD 80 02            [24]  420 	sjmp	00116$
      0000CF                        421 00115$:
      0000CF 7D 55            [12]  422 	mov	r5,#0x55
      0000D1                        423 00116$:
      0000D1 90r00r0E         [24]  424 	mov	dptr,#(_enter_promiscuous_mode_address_2_36 + 0x0001)
      0000D4 ED               [12]  425 	mov	a,r5
      0000D5 F0               [24]  426 	movx	@dptr,a
                                    427 ;	src/radio.c:31: configure_address(address, 2);
      0000D6 90r00r17         [24]  428 	mov	dptr,#_configure_address_PARM_2
      0000D9 74 02            [12]  429 	mov	a,#0x02
      0000DB F0               [24]  430 	movx	@dptr,a
      0000DC 90r00r0D         [24]  431 	mov	dptr,#_enter_promiscuous_mode_address_2_36
      0000DF 75 F0 00         [24]  432 	mov	b,#0x00
      0000E2 12r02r83         [24]  433 	lcall	_configure_address
      0000E5 80 0E            [24]  434 	sjmp	00107$
      0000E7                        435 00103$:
                                    436 ;	src/radio.c:35: else configure_address(pm_prefix, pm_prefix_length);
      0000E7 90r00r17         [24]  437 	mov	dptr,#_configure_address_PARM_2
      0000EA EE               [12]  438 	mov	a,r6
      0000EB F0               [24]  439 	movx	@dptr,a
      0000EC 90r00r03         [24]  440 	mov	dptr,#_pm_prefix
      0000EF 75 F0 00         [24]  441 	mov	b,#0x00
      0000F2 12r02r83         [24]  442 	lcall	_configure_address
      0000F5                        443 00107$:
                                    444 ;	src/radio.c:38: configure_mac(0, 0, ENAA_NONE);
      0000F5 90r00r1B         [24]  445 	mov	dptr,#_configure_mac_PARM_2
      0000F8 E4               [12]  446 	clr	a
      0000F9 F0               [24]  447 	movx	@dptr,a
      0000FA 90r00r1C         [24]  448 	mov	dptr,#_configure_mac_PARM_3
      0000FD F0               [24]  449 	movx	@dptr,a
      0000FE 75 82 00         [24]  450 	mov	dpl,#0x00
      000101 12r02rFA         [24]  451 	lcall	_configure_mac
                                    452 ;	src/radio.c:41: configure_phy(PRIM_RX | PWR_UP, RATE_2M, pm_payload_length);
      000104 90r00r08         [24]  453 	mov	dptr,#_pm_payload_length
      000107 E0               [24]  454 	movx	a,@dptr
      000108 FF               [12]  455 	mov	r7,a
      000109 90r00r1E         [24]  456 	mov	dptr,#_configure_phy_PARM_2
      00010C 74 08            [12]  457 	mov	a,#0x08
      00010E F0               [24]  458 	movx	@dptr,a
      00010F 90r00r1F         [24]  459 	mov	dptr,#_configure_phy_PARM_3
      000112 EF               [12]  460 	mov	a,r7
      000113 F0               [24]  461 	movx	@dptr,a
      000114 75 82 03         [24]  462 	mov	dpl,#0x03
      000117 12r03r27         [24]  463 	lcall	_configure_phy
                                    464 ;	src/radio.c:44: rfce = 1;
      00011A D2 90            [12]  465 	setb	_rfce
                                    466 ;	src/radio.c:45: in1bc = 0;
      00011C 90 C7 B7         [24]  467 	mov	dptr,#0xC7B7
      00011F E4               [12]  468 	clr	a
      000120 F0               [24]  469 	movx	@dptr,a
      000121 22               [24]  470 	ret
                                    471 ;------------------------------------------------------------
                                    472 ;Allocation info for local variables in function 'enter_promiscuous_mode_generic'
                                    473 ;------------------------------------------------------------
                                    474 ;sloc0                     Allocated with name '_enter_promiscuous_mode_generic_sloc0_1_0'
                                    475 ;prefix_length             Allocated with name '_enter_promiscuous_mode_generic_PARM_2'
                                    476 ;rate                      Allocated with name '_enter_promiscuous_mode_generic_PARM_3'
                                    477 ;payload_length            Allocated with name '_enter_promiscuous_mode_generic_PARM_4'
                                    478 ;prefix                    Allocated with name '_enter_promiscuous_mode_generic_prefix_1_37'
                                    479 ;x                         Allocated with name '_enter_promiscuous_mode_generic_x_1_38'
                                    480 ;address                   Allocated with name '_enter_promiscuous_mode_generic_address_2_39'
                                    481 ;------------------------------------------------------------
                                    482 ;	src/radio.c:49: void enter_promiscuous_mode_generic(uint8_t * prefix, uint8_t prefix_length, uint8_t rate, uint8_t payload_length)
                                    483 ;	-----------------------------------------
                                    484 ;	 function enter_promiscuous_mode_generic
                                    485 ;	-----------------------------------------
      000122                        486 _enter_promiscuous_mode_generic:
      000122 AF F0            [24]  487 	mov	r7,b
      000124 AE 83            [24]  488 	mov	r6,dph
      000126 E5 82            [12]  489 	mov	a,dpl
      000128 90r00r12         [24]  490 	mov	dptr,#_enter_promiscuous_mode_generic_prefix_1_37
      00012B F0               [24]  491 	movx	@dptr,a
      00012C EE               [12]  492 	mov	a,r6
      00012D A3               [24]  493 	inc	dptr
      00012E F0               [24]  494 	movx	@dptr,a
      00012F EF               [12]  495 	mov	a,r7
      000130 A3               [24]  496 	inc	dptr
      000131 F0               [24]  497 	movx	@dptr,a
                                    498 ;	src/radio.c:53: for(x = 0; x < prefix_length; x++) pm_prefix[prefix_length - 1 - x] = prefix[x];
      000132 90r00r12         [24]  499 	mov	dptr,#_enter_promiscuous_mode_generic_prefix_1_37
      000135 E0               [24]  500 	movx	a,@dptr
      000136 FD               [12]  501 	mov	r5,a
      000137 A3               [24]  502 	inc	dptr
      000138 E0               [24]  503 	movx	a,@dptr
      000139 FE               [12]  504 	mov	r6,a
      00013A A3               [24]  505 	inc	dptr
      00013B E0               [24]  506 	movx	a,@dptr
      00013C FF               [12]  507 	mov	r7,a
      00013D 90r00r0F         [24]  508 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_2
      000140 E0               [24]  509 	movx	a,@dptr
      000141 FC               [12]  510 	mov	r4,a
      000142 7A 00            [12]  511 	mov	r2,#0x00
      000144 7B 00            [12]  512 	mov	r3,#0x00
      000146                        513 00113$:
      000146 8C 00            [24]  514 	mov	ar0,r4
      000148 79 00            [12]  515 	mov	r1,#0x00
      00014A C3               [12]  516 	clr	c
      00014B EA               [12]  517 	mov	a,r2
      00014C 98               [12]  518 	subb	a,r0
      00014D EB               [12]  519 	mov	a,r3
      00014E 64 80            [12]  520 	xrl	a,#0x80
      000150 89 F0            [24]  521 	mov	b,r1
      000152 63 F0 80         [24]  522 	xrl	b,#0x80
      000155 95 F0            [12]  523 	subb	a,b
      000157 50 33            [24]  524 	jnc	00101$
      000159 EC               [12]  525 	mov	a,r4
      00015A 14               [12]  526 	dec	a
      00015B 8A 00            [24]  527 	mov	ar0,r2
      00015D C3               [12]  528 	clr	c
      00015E 98               [12]  529 	subb	a,r0
      00015F 24r03            [12]  530 	add	a,#_pm_prefix
      000161 F5*02            [12]  531 	mov	_enter_promiscuous_mode_generic_sloc0_1_0,a
      000163 E4               [12]  532 	clr	a
      000164 34s00            [12]  533 	addc	a,#(_pm_prefix >> 8)
      000166 F5*03            [12]  534 	mov	(_enter_promiscuous_mode_generic_sloc0_1_0 + 1),a
      000168 C0 04            [24]  535 	push	ar4
      00016A EA               [12]  536 	mov	a,r2
      00016B 2D               [12]  537 	add	a,r5
      00016C F8               [12]  538 	mov	r0,a
      00016D EB               [12]  539 	mov	a,r3
      00016E 3E               [12]  540 	addc	a,r6
      00016F F9               [12]  541 	mov	r1,a
      000170 8F 04            [24]  542 	mov	ar4,r7
      000172 88 82            [24]  543 	mov	dpl,r0
      000174 89 83            [24]  544 	mov	dph,r1
      000176 8C F0            [24]  545 	mov	b,r4
      000178 12r00r00         [24]  546 	lcall	__gptrget
      00017B F8               [12]  547 	mov	r0,a
      00017C 85*02 82         [24]  548 	mov	dpl,_enter_promiscuous_mode_generic_sloc0_1_0
      00017F 85*03 83         [24]  549 	mov	dph,(_enter_promiscuous_mode_generic_sloc0_1_0 + 1)
      000182 F0               [24]  550 	movx	@dptr,a
      000183 0A               [12]  551 	inc	r2
      000184 BA 00 01         [24]  552 	cjne	r2,#0x00,00147$
      000187 0B               [12]  553 	inc	r3
      000188                        554 00147$:
      000188 D0 04            [24]  555 	pop	ar4
      00018A 80 BA            [24]  556 	sjmp	00113$
      00018C                        557 00101$:
                                    558 ;	src/radio.c:54: pm_prefix_length = prefix_length > 5 ? 5 : prefix_length;
      00018C EC               [12]  559 	mov	a,r4
      00018D 24 FA            [12]  560 	add	a,#0xff - 0x05
      00018F 50 04            [24]  561 	jnc	00117$
      000191 7F 05            [12]  562 	mov	r7,#0x05
      000193 80 02            [24]  563 	sjmp	00118$
      000195                        564 00117$:
      000195 8C 07            [24]  565 	mov	ar7,r4
      000197                        566 00118$:
      000197 90r00r01         [24]  567 	mov	dptr,#_pm_prefix_length
      00019A EF               [12]  568 	mov	a,r7
      00019B F0               [24]  569 	movx	@dptr,a
      00019C E4               [12]  570 	clr	a
      00019D A3               [24]  571 	inc	dptr
      00019E F0               [24]  572 	movx	@dptr,a
                                    573 ;	src/radio.c:55: radio_mode = promiscuous_generic;
      00019F 90r00r00         [24]  574 	mov	dptr,#_radio_mode
      0001A2 74 02            [12]  575 	mov	a,#0x02
      0001A4 F0               [24]  576 	movx	@dptr,a
                                    577 ;	src/radio.c:56: pm_payload_length = payload_length;
      0001A5 90r00r11         [24]  578 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_4
      0001A8 E0               [24]  579 	movx	a,@dptr
      0001A9 90r00r08         [24]  580 	mov	dptr,#_pm_payload_length
      0001AC F0               [24]  581 	movx	@dptr,a
                                    582 ;	src/radio.c:59: rfce = 0;
      0001AD C2 90            [12]  583 	clr	_rfce
                                    584 ;	src/radio.c:62: write_register_byte(EN_RXADDR, ENRX_P0);
      0001AF 90r00r2C         [24]  585 	mov	dptr,#_write_register_byte_PARM_2
      0001B2 74 01            [12]  586 	mov	a,#0x01
      0001B4 F0               [24]  587 	movx	@dptr,a
      0001B5 75 82 02         [24]  588 	mov	dpl,#0x02
      0001B8 12r04r53         [24]  589 	lcall	_write_register_byte
                                    590 ;	src/radio.c:65: if(pm_prefix_length == 0) configure_address(promiscuous_address, 2);
      0001BB 90r00r01         [24]  591 	mov	dptr,#_pm_prefix_length
      0001BE E0               [24]  592 	movx	a,@dptr
      0001BF FE               [12]  593 	mov	r6,a
      0001C0 A3               [24]  594 	inc	dptr
      0001C1 E0               [24]  595 	movx	a,@dptr
      0001C2 FF               [12]  596 	mov	r7,a
      0001C3 4E               [12]  597 	orl	a,r6
      0001C4 70 11            [24]  598 	jnz	00106$
      0001C6 90r00r17         [24]  599 	mov	dptr,#_configure_address_PARM_2
      0001C9 74 02            [12]  600 	mov	a,#0x02
      0001CB F0               [24]  601 	movx	@dptr,a
      0001CC 90r00r04         [24]  602 	mov	dptr,#_promiscuous_address
      0001CF 75 F0 00         [24]  603 	mov	b,#0x00
      0001D2 12r02r83         [24]  604 	lcall	_configure_address
      0001D5 80 43            [24]  605 	sjmp	00107$
      0001D7                        606 00106$:
                                    607 ;	src/radio.c:68: else if(pm_prefix_length == 1)
      0001D7 BE 01 32         [24]  608 	cjne	r6,#0x01,00103$
      0001DA BF 00 2F         [24]  609 	cjne	r7,#0x00,00103$
                                    610 ;	src/radio.c:70: uint8_t address[2] = { pm_prefix[0], (pm_prefix[0] & 0x80) == 0x80 ? 0xAA : 0x55 };
      0001DD 90r00r03         [24]  611 	mov	dptr,#_pm_prefix
      0001E0 E0               [24]  612 	movx	a,@dptr
      0001E1 90r00r15         [24]  613 	mov	dptr,#_enter_promiscuous_mode_generic_address_2_39
      0001E4 F0               [24]  614 	movx	@dptr,a
      0001E5 90r00r03         [24]  615 	mov	dptr,#_pm_prefix
      0001E8 E0               [24]  616 	movx	a,@dptr
      0001E9 FD               [12]  617 	mov	r5,a
      0001EA 53 05 80         [24]  618 	anl	ar5,#0x80
      0001ED BD 80 04         [24]  619 	cjne	r5,#0x80,00119$
      0001F0 7D AA            [12]  620 	mov	r5,#0xAA
      0001F2 80 02            [24]  621 	sjmp	00120$
      0001F4                        622 00119$:
      0001F4 7D 55            [12]  623 	mov	r5,#0x55
      0001F6                        624 00120$:
      0001F6 90r00r16         [24]  625 	mov	dptr,#(_enter_promiscuous_mode_generic_address_2_39 + 0x0001)
      0001F9 ED               [12]  626 	mov	a,r5
      0001FA F0               [24]  627 	movx	@dptr,a
                                    628 ;	src/radio.c:71: configure_address(address, 2);
      0001FB 90r00r17         [24]  629 	mov	dptr,#_configure_address_PARM_2
      0001FE 74 02            [12]  630 	mov	a,#0x02
      000200 F0               [24]  631 	movx	@dptr,a
      000201 90r00r15         [24]  632 	mov	dptr,#_enter_promiscuous_mode_generic_address_2_39
      000204 75 F0 00         [24]  633 	mov	b,#0x00
      000207 12r02r83         [24]  634 	lcall	_configure_address
      00020A 80 0E            [24]  635 	sjmp	00107$
      00020C                        636 00103$:
                                    637 ;	src/radio.c:75: else configure_address(pm_prefix, pm_prefix_length);
      00020C 90r00r17         [24]  638 	mov	dptr,#_configure_address_PARM_2
      00020F EE               [12]  639 	mov	a,r6
      000210 F0               [24]  640 	movx	@dptr,a
      000211 90r00r03         [24]  641 	mov	dptr,#_pm_prefix
      000214 75 F0 00         [24]  642 	mov	b,#0x00
      000217 12r02r83         [24]  643 	lcall	_configure_address
      00021A                        644 00107$:
                                    645 ;	src/radio.c:78: configure_mac(0, 0, ENAA_NONE);
      00021A 90r00r1B         [24]  646 	mov	dptr,#_configure_mac_PARM_2
      00021D E4               [12]  647 	clr	a
      00021E F0               [24]  648 	movx	@dptr,a
      00021F 90r00r1C         [24]  649 	mov	dptr,#_configure_mac_PARM_3
      000222 F0               [24]  650 	movx	@dptr,a
      000223 75 82 00         [24]  651 	mov	dpl,#0x00
      000226 12r02rFA         [24]  652 	lcall	_configure_mac
                                    653 ;	src/radio.c:81: switch(rate)
      000229 90r00r10         [24]  654 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_3
      00022C E0               [24]  655 	movx	a,@dptr
      00022D FF               [12]  656 	mov	r7,a
      00022E 60 05            [24]  657 	jz	00108$
                                    658 ;	src/radio.c:83: case 0:  configure_phy(PRIM_RX | PWR_UP, RF_PWR_4 | RATE_250K, pm_payload_length); break;
      000230 BF 01 32         [24]  659 	cjne	r7,#0x01,00110$
      000233 80 18            [24]  660 	sjmp	00109$
      000235                        661 00108$:
      000235 90r00r08         [24]  662 	mov	dptr,#_pm_payload_length
      000238 E0               [24]  663 	movx	a,@dptr
      000239 FF               [12]  664 	mov	r7,a
      00023A 90r00r1E         [24]  665 	mov	dptr,#_configure_phy_PARM_2
      00023D 74 26            [12]  666 	mov	a,#0x26
      00023F F0               [24]  667 	movx	@dptr,a
      000240 90r00r1F         [24]  668 	mov	dptr,#_configure_phy_PARM_3
      000243 EF               [12]  669 	mov	a,r7
      000244 F0               [24]  670 	movx	@dptr,a
      000245 75 82 03         [24]  671 	mov	dpl,#0x03
      000248 12r03r27         [24]  672 	lcall	_configure_phy
                                    673 ;	src/radio.c:84: case 1:  configure_phy(PRIM_RX | PWR_UP, RF_PWR_4 | RATE_1M, pm_payload_length); break;
      00024B 80 2E            [24]  674 	sjmp	00111$
      00024D                        675 00109$:
      00024D 90r00r08         [24]  676 	mov	dptr,#_pm_payload_length
      000250 E0               [24]  677 	movx	a,@dptr
      000251 FF               [12]  678 	mov	r7,a
      000252 90r00r1E         [24]  679 	mov	dptr,#_configure_phy_PARM_2
      000255 74 06            [12]  680 	mov	a,#0x06
      000257 F0               [24]  681 	movx	@dptr,a
      000258 90r00r1F         [24]  682 	mov	dptr,#_configure_phy_PARM_3
      00025B EF               [12]  683 	mov	a,r7
      00025C F0               [24]  684 	movx	@dptr,a
      00025D 75 82 03         [24]  685 	mov	dpl,#0x03
      000260 12r03r27         [24]  686 	lcall	_configure_phy
                                    687 ;	src/radio.c:85: default: configure_phy(PRIM_RX | PWR_UP, RF_PWR_4 | RATE_2M, pm_payload_length); break;
      000263 80 16            [24]  688 	sjmp	00111$
      000265                        689 00110$:
      000265 90r00r08         [24]  690 	mov	dptr,#_pm_payload_length
      000268 E0               [24]  691 	movx	a,@dptr
      000269 FF               [12]  692 	mov	r7,a
      00026A 90r00r1E         [24]  693 	mov	dptr,#_configure_phy_PARM_2
      00026D 74 0E            [12]  694 	mov	a,#0x0E
      00026F F0               [24]  695 	movx	@dptr,a
      000270 90r00r1F         [24]  696 	mov	dptr,#_configure_phy_PARM_3
      000273 EF               [12]  697 	mov	a,r7
      000274 F0               [24]  698 	movx	@dptr,a
      000275 75 82 03         [24]  699 	mov	dpl,#0x03
      000278 12r03r27         [24]  700 	lcall	_configure_phy
                                    701 ;	src/radio.c:86: }
      00027B                        702 00111$:
                                    703 ;	src/radio.c:89: rfce = 1;
      00027B D2 90            [12]  704 	setb	_rfce
                                    705 ;	src/radio.c:90: in1bc = 0;
      00027D 90 C7 B7         [24]  706 	mov	dptr,#0xC7B7
      000280 E4               [12]  707 	clr	a
      000281 F0               [24]  708 	movx	@dptr,a
      000282 22               [24]  709 	ret
                                    710 ;------------------------------------------------------------
                                    711 ;Allocation info for local variables in function 'configure_address'
                                    712 ;------------------------------------------------------------
                                    713 ;length                    Allocated with name '_configure_address_PARM_2'
                                    714 ;address                   Allocated with name '_configure_address_address_1_41'
                                    715 ;------------------------------------------------------------
                                    716 ;	src/radio.c:94: void configure_address(uint8_t * address, uint8_t length)
                                    717 ;	-----------------------------------------
                                    718 ;	 function configure_address
                                    719 ;	-----------------------------------------
      000283                        720 _configure_address:
      000283 AF F0            [24]  721 	mov	r7,b
      000285 AE 83            [24]  722 	mov	r6,dph
      000287 E5 82            [12]  723 	mov	a,dpl
      000289 90r00r18         [24]  724 	mov	dptr,#_configure_address_address_1_41
      00028C F0               [24]  725 	movx	@dptr,a
      00028D EE               [12]  726 	mov	a,r6
      00028E A3               [24]  727 	inc	dptr
      00028F F0               [24]  728 	movx	@dptr,a
      000290 EF               [12]  729 	mov	a,r7
      000291 A3               [24]  730 	inc	dptr
      000292 F0               [24]  731 	movx	@dptr,a
                                    732 ;	src/radio.c:96: write_register_byte(EN_RXADDR, ENRX_P0);
      000293 90r00r2C         [24]  733 	mov	dptr,#_write_register_byte_PARM_2
      000296 74 01            [12]  734 	mov	a,#0x01
      000298 F0               [24]  735 	movx	@dptr,a
      000299 75 82 02         [24]  736 	mov	dpl,#0x02
      00029C 12r04r53         [24]  737 	lcall	_write_register_byte
                                    738 ;	src/radio.c:97: write_register_byte(SETUP_AW, length - 2);
      00029F 90r00r17         [24]  739 	mov	dptr,#_configure_address_PARM_2
      0002A2 E0               [24]  740 	movx	a,@dptr
      0002A3 FF               [12]  741 	mov	r7,a
      0002A4 24 FE            [12]  742 	add	a,#0xFE
      0002A6 90r00r2C         [24]  743 	mov	dptr,#_write_register_byte_PARM_2
      0002A9 F0               [24]  744 	movx	@dptr,a
      0002AA 75 82 03         [24]  745 	mov	dpl,#0x03
      0002AD C0 07            [24]  746 	push	ar7
      0002AF 12r04r53         [24]  747 	lcall	_write_register_byte
      0002B2 D0 07            [24]  748 	pop	ar7
                                    749 ;	src/radio.c:98: write_register(TX_ADDR, address, length);
      0002B4 90r00r18         [24]  750 	mov	dptr,#_configure_address_address_1_41
      0002B7 E0               [24]  751 	movx	a,@dptr
      0002B8 FC               [12]  752 	mov	r4,a
      0002B9 A3               [24]  753 	inc	dptr
      0002BA E0               [24]  754 	movx	a,@dptr
      0002BB FD               [12]  755 	mov	r5,a
      0002BC A3               [24]  756 	inc	dptr
      0002BD E0               [24]  757 	movx	a,@dptr
      0002BE FE               [12]  758 	mov	r6,a
      0002BF 90r00r22         [24]  759 	mov	dptr,#_spi_write_PARM_2
      0002C2 EC               [12]  760 	mov	a,r4
      0002C3 F0               [24]  761 	movx	@dptr,a
      0002C4 ED               [12]  762 	mov	a,r5
      0002C5 A3               [24]  763 	inc	dptr
      0002C6 F0               [24]  764 	movx	@dptr,a
      0002C7 EE               [12]  765 	mov	a,r6
      0002C8 A3               [24]  766 	inc	dptr
      0002C9 F0               [24]  767 	movx	@dptr,a
      0002CA 90r00r25         [24]  768 	mov	dptr,#_spi_write_PARM_3
      0002CD EF               [12]  769 	mov	a,r7
      0002CE F0               [24]  770 	movx	@dptr,a
      0002CF 75 82 30         [24]  771 	mov	dpl,#0x30
      0002D2 C0 07            [24]  772 	push	ar7
      0002D4 12r03r66         [24]  773 	lcall	_spi_write
      0002D7 D0 07            [24]  774 	pop	ar7
                                    775 ;	src/radio.c:99: write_register(RX_ADDR_P0, address, length);
      0002D9 90r00r18         [24]  776 	mov	dptr,#_configure_address_address_1_41
      0002DC E0               [24]  777 	movx	a,@dptr
      0002DD FC               [12]  778 	mov	r4,a
      0002DE A3               [24]  779 	inc	dptr
      0002DF E0               [24]  780 	movx	a,@dptr
      0002E0 FD               [12]  781 	mov	r5,a
      0002E1 A3               [24]  782 	inc	dptr
      0002E2 E0               [24]  783 	movx	a,@dptr
      0002E3 FE               [12]  784 	mov	r6,a
      0002E4 90r00r22         [24]  785 	mov	dptr,#_spi_write_PARM_2
      0002E7 EC               [12]  786 	mov	a,r4
      0002E8 F0               [24]  787 	movx	@dptr,a
      0002E9 ED               [12]  788 	mov	a,r5
      0002EA A3               [24]  789 	inc	dptr
      0002EB F0               [24]  790 	movx	@dptr,a
      0002EC EE               [12]  791 	mov	a,r6
      0002ED A3               [24]  792 	inc	dptr
      0002EE F0               [24]  793 	movx	@dptr,a
      0002EF 90r00r25         [24]  794 	mov	dptr,#_spi_write_PARM_3
      0002F2 EF               [12]  795 	mov	a,r7
      0002F3 F0               [24]  796 	movx	@dptr,a
      0002F4 75 82 2A         [24]  797 	mov	dpl,#0x2A
      0002F7 02r03r66         [24]  798 	ljmp	_spi_write
                                    799 ;------------------------------------------------------------
                                    800 ;Allocation info for local variables in function 'configure_mac'
                                    801 ;------------------------------------------------------------
                                    802 ;dynpd                     Allocated with name '_configure_mac_PARM_2'
                                    803 ;en_aa                     Allocated with name '_configure_mac_PARM_3'
                                    804 ;feature                   Allocated with name '_configure_mac_feature_1_43'
                                    805 ;------------------------------------------------------------
                                    806 ;	src/radio.c:103: void configure_mac(uint8_t feature, uint8_t dynpd, uint8_t en_aa)
                                    807 ;	-----------------------------------------
                                    808 ;	 function configure_mac
                                    809 ;	-----------------------------------------
      0002FA                        810 _configure_mac:
      0002FA E5 82            [12]  811 	mov	a,dpl
      0002FC 90r00r1D         [24]  812 	mov	dptr,#_configure_mac_feature_1_43
      0002FF F0               [24]  813 	movx	@dptr,a
                                    814 ;	src/radio.c:105: write_register_byte(FEATURE, feature);
      000300 E0               [24]  815 	movx	a,@dptr
      000301 90r00r2C         [24]  816 	mov	dptr,#_write_register_byte_PARM_2
      000304 F0               [24]  817 	movx	@dptr,a
      000305 75 82 1D         [24]  818 	mov	dpl,#0x1D
      000308 12r04r53         [24]  819 	lcall	_write_register_byte
                                    820 ;	src/radio.c:106: write_register_byte(DYNPD, dynpd);
      00030B 90r00r1B         [24]  821 	mov	dptr,#_configure_mac_PARM_2
      00030E E0               [24]  822 	movx	a,@dptr
      00030F 90r00r2C         [24]  823 	mov	dptr,#_write_register_byte_PARM_2
      000312 F0               [24]  824 	movx	@dptr,a
      000313 75 82 1C         [24]  825 	mov	dpl,#0x1C
      000316 12r04r53         [24]  826 	lcall	_write_register_byte
                                    827 ;	src/radio.c:107: write_register_byte(EN_AA, en_aa);
      000319 90r00r1C         [24]  828 	mov	dptr,#_configure_mac_PARM_3
      00031C E0               [24]  829 	movx	a,@dptr
      00031D 90r00r2C         [24]  830 	mov	dptr,#_write_register_byte_PARM_2
      000320 F0               [24]  831 	movx	@dptr,a
      000321 75 82 01         [24]  832 	mov	dpl,#0x01
      000324 02r04r53         [24]  833 	ljmp	_write_register_byte
                                    834 ;------------------------------------------------------------
                                    835 ;Allocation info for local variables in function 'configure_phy'
                                    836 ;------------------------------------------------------------
                                    837 ;rf_setup                  Allocated with name '_configure_phy_PARM_2'
                                    838 ;rx_pw                     Allocated with name '_configure_phy_PARM_3'
                                    839 ;config                    Allocated with name '_configure_phy_config_1_45'
                                    840 ;------------------------------------------------------------
                                    841 ;	src/radio.c:111: void configure_phy(uint8_t config, uint8_t rf_setup, uint8_t rx_pw)
                                    842 ;	-----------------------------------------
                                    843 ;	 function configure_phy
                                    844 ;	-----------------------------------------
      000327                        845 _configure_phy:
      000327 E5 82            [12]  846 	mov	a,dpl
      000329 90r00r20         [24]  847 	mov	dptr,#_configure_phy_config_1_45
      00032C F0               [24]  848 	movx	@dptr,a
                                    849 ;	src/radio.c:113: write_register_byte(CONFIG, config);
      00032D E0               [24]  850 	movx	a,@dptr
      00032E 90r00r2C         [24]  851 	mov	dptr,#_write_register_byte_PARM_2
      000331 F0               [24]  852 	movx	@dptr,a
      000332 75 82 00         [24]  853 	mov	dpl,#0x00
      000335 12r04r53         [24]  854 	lcall	_write_register_byte
                                    855 ;	src/radio.c:114: write_register_byte(RF_SETUP, rf_setup);
      000338 90r00r1E         [24]  856 	mov	dptr,#_configure_phy_PARM_2
      00033B E0               [24]  857 	movx	a,@dptr
      00033C 90r00r2C         [24]  858 	mov	dptr,#_write_register_byte_PARM_2
      00033F F0               [24]  859 	movx	@dptr,a
      000340 75 82 06         [24]  860 	mov	dpl,#0x06
      000343 12r04r53         [24]  861 	lcall	_write_register_byte
                                    862 ;	src/radio.c:115: write_register_byte(RX_PW_P0, rx_pw);
      000346 90r00r1F         [24]  863 	mov	dptr,#_configure_phy_PARM_3
      000349 E0               [24]  864 	movx	a,@dptr
      00034A 90r00r2C         [24]  865 	mov	dptr,#_write_register_byte_PARM_2
      00034D F0               [24]  866 	movx	@dptr,a
      00034E 75 82 11         [24]  867 	mov	dpl,#0x11
      000351 02r04r53         [24]  868 	ljmp	_write_register_byte
                                    869 ;------------------------------------------------------------
                                    870 ;Allocation info for local variables in function 'spi_transfer'
                                    871 ;------------------------------------------------------------
                                    872 ;byte                      Allocated with name '_spi_transfer_byte_1_47'
                                    873 ;------------------------------------------------------------
                                    874 ;	src/radio.c:119: uint8_t spi_transfer(uint8_t byte)
                                    875 ;	-----------------------------------------
                                    876 ;	 function spi_transfer
                                    877 ;	-----------------------------------------
      000354                        878 _spi_transfer:
      000354 E5 82            [12]  879 	mov	a,dpl
      000356 90r00r21         [24]  880 	mov	dptr,#_spi_transfer_byte_1_47
      000359 F0               [24]  881 	movx	@dptr,a
                                    882 ;	src/radio.c:121: RFDAT = byte;
      00035A E0               [24]  883 	movx	a,@dptr
      00035B F5 E5            [12]  884 	mov	_RFDAT,a
                                    885 ;	src/radio.c:122: RFRDY = 0;
      00035D C2 C0            [12]  886 	clr	_RFRDY
                                    887 ;	src/radio.c:123: while(!RFRDY);
      00035F                        888 00101$:
      00035F 30 C0 FD         [24]  889 	jnb	_RFRDY,00101$
                                    890 ;	src/radio.c:124: return RFDAT;
      000362 85 E5 82         [24]  891 	mov	dpl,_RFDAT
      000365 22               [24]  892 	ret
                                    893 ;------------------------------------------------------------
                                    894 ;Allocation info for local variables in function 'spi_write'
                                    895 ;------------------------------------------------------------
                                    896 ;buffer                    Allocated with name '_spi_write_PARM_2'
                                    897 ;length                    Allocated with name '_spi_write_PARM_3'
                                    898 ;command                   Allocated with name '_spi_write_command_1_49'
                                    899 ;x                         Allocated with name '_spi_write_x_1_50'
                                    900 ;------------------------------------------------------------
                                    901 ;	src/radio.c:128: void spi_write(uint8_t command, uint8_t * buffer, uint8_t length)
                                    902 ;	-----------------------------------------
                                    903 ;	 function spi_write
                                    904 ;	-----------------------------------------
      000366                        905 _spi_write:
      000366 E5 82            [12]  906 	mov	a,dpl
      000368 90r00r26         [24]  907 	mov	dptr,#_spi_write_command_1_49
      00036B F0               [24]  908 	movx	@dptr,a
                                    909 ;	src/radio.c:131: rfcsn = 0;
      00036C C2 91            [12]  910 	clr	_rfcsn
                                    911 ;	src/radio.c:132: spi_transfer(command);
      00036E 90r00r26         [24]  912 	mov	dptr,#_spi_write_command_1_49
      000371 E0               [24]  913 	movx	a,@dptr
      000372 F5 82            [12]  914 	mov	dpl,a
      000374 12r03r54         [24]  915 	lcall	_spi_transfer
                                    916 ;	src/radio.c:133: for(x = 0; x < length; x++) spi_transfer(buffer[x]);
      000377 90r00r22         [24]  917 	mov	dptr,#_spi_write_PARM_2
      00037A E0               [24]  918 	movx	a,@dptr
      00037B FD               [12]  919 	mov	r5,a
      00037C A3               [24]  920 	inc	dptr
      00037D E0               [24]  921 	movx	a,@dptr
      00037E FE               [12]  922 	mov	r6,a
      00037F A3               [24]  923 	inc	dptr
      000380 E0               [24]  924 	movx	a,@dptr
      000381 FF               [12]  925 	mov	r7,a
      000382 90r00r25         [24]  926 	mov	dptr,#_spi_write_PARM_3
      000385 E0               [24]  927 	movx	a,@dptr
      000386 FC               [12]  928 	mov	r4,a
      000387 7A 00            [12]  929 	mov	r2,#0x00
      000389 7B 00            [12]  930 	mov	r3,#0x00
      00038B                        931 00103$:
      00038B 8C 00            [24]  932 	mov	ar0,r4
      00038D 79 00            [12]  933 	mov	r1,#0x00
      00038F C3               [12]  934 	clr	c
      000390 EA               [12]  935 	mov	a,r2
      000391 98               [12]  936 	subb	a,r0
      000392 EB               [12]  937 	mov	a,r3
      000393 64 80            [12]  938 	xrl	a,#0x80
      000395 89 F0            [24]  939 	mov	b,r1
      000397 63 F0 80         [24]  940 	xrl	b,#0x80
      00039A 95 F0            [12]  941 	subb	a,b
      00039C 50 39            [24]  942 	jnc	00101$
      00039E C0 04            [24]  943 	push	ar4
      0003A0 EA               [12]  944 	mov	a,r2
      0003A1 2D               [12]  945 	add	a,r5
      0003A2 F8               [12]  946 	mov	r0,a
      0003A3 EB               [12]  947 	mov	a,r3
      0003A4 3E               [12]  948 	addc	a,r6
      0003A5 F9               [12]  949 	mov	r1,a
      0003A6 8F 04            [24]  950 	mov	ar4,r7
      0003A8 88 82            [24]  951 	mov	dpl,r0
      0003AA 89 83            [24]  952 	mov	dph,r1
      0003AC 8C F0            [24]  953 	mov	b,r4
      0003AE 12r00r00         [24]  954 	lcall	__gptrget
      0003B1 F5 82            [12]  955 	mov	dpl,a
      0003B3 C0 07            [24]  956 	push	ar7
      0003B5 C0 06            [24]  957 	push	ar6
      0003B7 C0 05            [24]  958 	push	ar5
      0003B9 C0 04            [24]  959 	push	ar4
      0003BB C0 03            [24]  960 	push	ar3
      0003BD C0 02            [24]  961 	push	ar2
      0003BF 12r03r54         [24]  962 	lcall	_spi_transfer
      0003C2 D0 02            [24]  963 	pop	ar2
      0003C4 D0 03            [24]  964 	pop	ar3
      0003C6 D0 04            [24]  965 	pop	ar4
      0003C8 D0 05            [24]  966 	pop	ar5
      0003CA D0 06            [24]  967 	pop	ar6
      0003CC D0 07            [24]  968 	pop	ar7
      0003CE 0A               [12]  969 	inc	r2
      0003CF BA 00 01         [24]  970 	cjne	r2,#0x00,00115$
      0003D2 0B               [12]  971 	inc	r3
      0003D3                        972 00115$:
      0003D3 D0 04            [24]  973 	pop	ar4
      0003D5 80 B4            [24]  974 	sjmp	00103$
      0003D7                        975 00101$:
                                    976 ;	src/radio.c:134: rfcsn = 1;
      0003D7 D2 91            [12]  977 	setb	_rfcsn
      0003D9 22               [24]  978 	ret
                                    979 ;------------------------------------------------------------
                                    980 ;Allocation info for local variables in function 'spi_read'
                                    981 ;------------------------------------------------------------
                                    982 ;sloc0                     Allocated with name '_spi_read_sloc0_1_0'
                                    983 ;buffer                    Allocated with name '_spi_read_PARM_2'
                                    984 ;length                    Allocated with name '_spi_read_PARM_3'
                                    985 ;command                   Allocated with name '_spi_read_command_1_51'
                                    986 ;x                         Allocated with name '_spi_read_x_1_52'
                                    987 ;------------------------------------------------------------
                                    988 ;	src/radio.c:138: void spi_read(uint8_t command, uint8_t * buffer, uint8_t length)
                                    989 ;	-----------------------------------------
                                    990 ;	 function spi_read
                                    991 ;	-----------------------------------------
      0003DA                        992 _spi_read:
      0003DA E5 82            [12]  993 	mov	a,dpl
      0003DC 90r00r2B         [24]  994 	mov	dptr,#_spi_read_command_1_51
      0003DF F0               [24]  995 	movx	@dptr,a
                                    996 ;	src/radio.c:141: rfcsn = 0;
      0003E0 C2 91            [12]  997 	clr	_rfcsn
                                    998 ;	src/radio.c:142: spi_transfer(command);
      0003E2 90r00r2B         [24]  999 	mov	dptr,#_spi_read_command_1_51
      0003E5 E0               [24] 1000 	movx	a,@dptr
      0003E6 F5 82            [12] 1001 	mov	dpl,a
      0003E8 12r03r54         [24] 1002 	lcall	_spi_transfer
                                   1003 ;	src/radio.c:143: for(x = 0; x < length; x++) buffer[x] = spi_transfer(0xFF);
      0003EB 90r00r27         [24] 1004 	mov	dptr,#_spi_read_PARM_2
      0003EE E0               [24] 1005 	movx	a,@dptr
      0003EF FD               [12] 1006 	mov	r5,a
      0003F0 A3               [24] 1007 	inc	dptr
      0003F1 E0               [24] 1008 	movx	a,@dptr
      0003F2 FE               [12] 1009 	mov	r6,a
      0003F3 A3               [24] 1010 	inc	dptr
      0003F4 E0               [24] 1011 	movx	a,@dptr
      0003F5 FF               [12] 1012 	mov	r7,a
      0003F6 90r00r2A         [24] 1013 	mov	dptr,#_spi_read_PARM_3
      0003F9 E0               [24] 1014 	movx	a,@dptr
      0003FA FC               [12] 1015 	mov	r4,a
      0003FB 7A 00            [12] 1016 	mov	r2,#0x00
      0003FD 7B 00            [12] 1017 	mov	r3,#0x00
      0003FF                       1018 00103$:
      0003FF 8C 00            [24] 1019 	mov	ar0,r4
      000401 79 00            [12] 1020 	mov	r1,#0x00
      000403 C3               [12] 1021 	clr	c
      000404 EA               [12] 1022 	mov	a,r2
      000405 98               [12] 1023 	subb	a,r0
      000406 EB               [12] 1024 	mov	a,r3
      000407 64 80            [12] 1025 	xrl	a,#0x80
      000409 89 F0            [24] 1026 	mov	b,r1
      00040B 63 F0 80         [24] 1027 	xrl	b,#0x80
      00040E 95 F0            [12] 1028 	subb	a,b
      000410 50 3E            [24] 1029 	jnc	00101$
      000412 C0 04            [24] 1030 	push	ar4
      000414 EA               [12] 1031 	mov	a,r2
      000415 2D               [12] 1032 	add	a,r5
      000416 F5*04            [12] 1033 	mov	_spi_read_sloc0_1_0,a
      000418 EB               [12] 1034 	mov	a,r3
      000419 3E               [12] 1035 	addc	a,r6
      00041A F5*05            [12] 1036 	mov	(_spi_read_sloc0_1_0 + 1),a
      00041C 8F*06            [24] 1037 	mov	(_spi_read_sloc0_1_0 + 2),r7
      00041E 75 82 FF         [24] 1038 	mov	dpl,#0xFF
      000421 C0 07            [24] 1039 	push	ar7
      000423 C0 06            [24] 1040 	push	ar6
      000425 C0 05            [24] 1041 	push	ar5
      000427 C0 03            [24] 1042 	push	ar3
      000429 C0 02            [24] 1043 	push	ar2
      00042B 12r03r54         [24] 1044 	lcall	_spi_transfer
      00042E AC 82            [24] 1045 	mov	r4,dpl
      000430 D0 02            [24] 1046 	pop	ar2
      000432 D0 03            [24] 1047 	pop	ar3
      000434 D0 05            [24] 1048 	pop	ar5
      000436 D0 06            [24] 1049 	pop	ar6
      000438 D0 07            [24] 1050 	pop	ar7
      00043A 85*04 82         [24] 1051 	mov	dpl,_spi_read_sloc0_1_0
      00043D 85*05 83         [24] 1052 	mov	dph,(_spi_read_sloc0_1_0 + 1)
      000440 85*06 F0         [24] 1053 	mov	b,(_spi_read_sloc0_1_0 + 2)
      000443 EC               [12] 1054 	mov	a,r4
      000444 12r00r00         [24] 1055 	lcall	__gptrput
      000447 0A               [12] 1056 	inc	r2
      000448 BA 00 01         [24] 1057 	cjne	r2,#0x00,00115$
      00044B 0B               [12] 1058 	inc	r3
      00044C                       1059 00115$:
      00044C D0 04            [24] 1060 	pop	ar4
      00044E 80 AF            [24] 1061 	sjmp	00103$
      000450                       1062 00101$:
                                   1063 ;	src/radio.c:144: rfcsn = 1;
      000450 D2 91            [12] 1064 	setb	_rfcsn
      000452 22               [24] 1065 	ret
                                   1066 ;------------------------------------------------------------
                                   1067 ;Allocation info for local variables in function 'write_register_byte'
                                   1068 ;------------------------------------------------------------
                                   1069 ;byte                      Allocated with name '_write_register_byte_PARM_2'
                                   1070 ;reg                       Allocated with name '_write_register_byte_reg_1_53'
                                   1071 ;------------------------------------------------------------
                                   1072 ;	src/radio.c:148: void write_register_byte(uint8_t reg, uint8_t byte)
                                   1073 ;	-----------------------------------------
                                   1074 ;	 function write_register_byte
                                   1075 ;	-----------------------------------------
      000453                       1076 _write_register_byte:
      000453 E5 82            [12] 1077 	mov	a,dpl
      000455 90r00r2D         [24] 1078 	mov	dptr,#_write_register_byte_reg_1_53
      000458 F0               [24] 1079 	movx	@dptr,a
                                   1080 ;	src/radio.c:150: write_register(reg, &byte, 1);
      000459 E0               [24] 1081 	movx	a,@dptr
      00045A FF               [12] 1082 	mov	r7,a
      00045B 43 07 20         [24] 1083 	orl	ar7,#0x20
      00045E 90r00r22         [24] 1084 	mov	dptr,#_spi_write_PARM_2
      000461 74r2C            [12] 1085 	mov	a,#_write_register_byte_PARM_2
      000463 F0               [24] 1086 	movx	@dptr,a
      000464 74s00            [12] 1087 	mov	a,#(_write_register_byte_PARM_2 >> 8)
      000466 A3               [24] 1088 	inc	dptr
      000467 F0               [24] 1089 	movx	@dptr,a
      000468 E4               [12] 1090 	clr	a
      000469 A3               [24] 1091 	inc	dptr
      00046A F0               [24] 1092 	movx	@dptr,a
      00046B 90r00r25         [24] 1093 	mov	dptr,#_spi_write_PARM_3
      00046E 04               [12] 1094 	inc	a
      00046F F0               [24] 1095 	movx	@dptr,a
      000470 8F 82            [24] 1096 	mov	dpl,r7
      000472 02r03r66         [24] 1097 	ljmp	_spi_write
                                   1098 ;------------------------------------------------------------
                                   1099 ;Allocation info for local variables in function 'read_register_byte'
                                   1100 ;------------------------------------------------------------
                                   1101 ;reg                       Allocated with name '_read_register_byte_reg_1_55'
                                   1102 ;value                     Allocated with name '_read_register_byte_value_1_56'
                                   1103 ;------------------------------------------------------------
                                   1104 ;	src/radio.c:154: uint8_t read_register_byte(uint8_t reg)
                                   1105 ;	-----------------------------------------
                                   1106 ;	 function read_register_byte
                                   1107 ;	-----------------------------------------
      000475                       1108 _read_register_byte:
      000475 E5 82            [12] 1109 	mov	a,dpl
      000477 90r00r2E         [24] 1110 	mov	dptr,#_read_register_byte_reg_1_55
      00047A F0               [24] 1111 	movx	@dptr,a
                                   1112 ;	src/radio.c:157: read_register(reg, &value, 1);
      00047B E0               [24] 1113 	movx	a,@dptr
      00047C FF               [12] 1114 	mov	r7,a
      00047D 90r00r27         [24] 1115 	mov	dptr,#_spi_read_PARM_2
      000480 74r2F            [12] 1116 	mov	a,#_read_register_byte_value_1_56
      000482 F0               [24] 1117 	movx	@dptr,a
      000483 74s00            [12] 1118 	mov	a,#(_read_register_byte_value_1_56 >> 8)
      000485 A3               [24] 1119 	inc	dptr
      000486 F0               [24] 1120 	movx	@dptr,a
      000487 E4               [12] 1121 	clr	a
      000488 A3               [24] 1122 	inc	dptr
      000489 F0               [24] 1123 	movx	@dptr,a
      00048A 90r00r2A         [24] 1124 	mov	dptr,#_spi_read_PARM_3
      00048D 04               [12] 1125 	inc	a
      00048E F0               [24] 1126 	movx	@dptr,a
      00048F 8F 82            [24] 1127 	mov	dpl,r7
      000491 12r03rDA         [24] 1128 	lcall	_spi_read
                                   1129 ;	src/radio.c:158: return value;
      000494 90r00r2F         [24] 1130 	mov	dptr,#_read_register_byte_value_1_56
      000497 E0               [24] 1131 	movx	a,@dptr
      000498 F5 82            [12] 1132 	mov	dpl,a
      00049A 22               [24] 1133 	ret
                                   1134 ;------------------------------------------------------------
                                   1135 ;Allocation info for local variables in function 'crc_update'
                                   1136 ;------------------------------------------------------------
                                   1137 ;byte                      Allocated with name '_crc_update_PARM_2'
                                   1138 ;bits                      Allocated with name '_crc_update_PARM_3'
                                   1139 ;crc                       Allocated with name '_crc_update_crc_1_57'
                                   1140 ;------------------------------------------------------------
                                   1141 ;	src/radio.c:162: uint16_t crc_update(uint16_t crc, uint8_t byte, uint8_t bits)
                                   1142 ;	-----------------------------------------
                                   1143 ;	 function crc_update
                                   1144 ;	-----------------------------------------
      00049B                       1145 _crc_update:
      00049B AF 83            [24] 1146 	mov	r7,dph
      00049D E5 82            [12] 1147 	mov	a,dpl
      00049F 90r00r32         [24] 1148 	mov	dptr,#_crc_update_crc_1_57
      0004A2 F0               [24] 1149 	movx	@dptr,a
      0004A3 EF               [12] 1150 	mov	a,r7
      0004A4 A3               [24] 1151 	inc	dptr
      0004A5 F0               [24] 1152 	movx	@dptr,a
                                   1153 ;	src/radio.c:164: crc = crc ^ (byte << 8);
      0004A6 90r00r30         [24] 1154 	mov	dptr,#_crc_update_PARM_2
      0004A9 E0               [24] 1155 	movx	a,@dptr
      0004AA FE               [12] 1156 	mov	r6,a
      0004AB 7F 00            [12] 1157 	mov	r7,#0x00
      0004AD 90r00r32         [24] 1158 	mov	dptr,#_crc_update_crc_1_57
      0004B0 E0               [24] 1159 	movx	a,@dptr
      0004B1 FC               [12] 1160 	mov	r4,a
      0004B2 A3               [24] 1161 	inc	dptr
      0004B3 E0               [24] 1162 	movx	a,@dptr
      0004B4 FD               [12] 1163 	mov	r5,a
      0004B5 90r00r32         [24] 1164 	mov	dptr,#_crc_update_crc_1_57
      0004B8 EF               [12] 1165 	mov	a,r7
      0004B9 6C               [12] 1166 	xrl	a,r4
      0004BA F0               [24] 1167 	movx	@dptr,a
      0004BB EE               [12] 1168 	mov	a,r6
      0004BC 6D               [12] 1169 	xrl	a,r5
      0004BD A3               [24] 1170 	inc	dptr
      0004BE F0               [24] 1171 	movx	@dptr,a
                                   1172 ;	src/radio.c:165: while(bits--)
      0004BF 90r00r31         [24] 1173 	mov	dptr,#_crc_update_PARM_3
      0004C2 E0               [24] 1174 	movx	a,@dptr
      0004C3 FF               [12] 1175 	mov	r7,a
      0004C4                       1176 00104$:
      0004C4 8F 06            [24] 1177 	mov	ar6,r7
      0004C6 1F               [12] 1178 	dec	r7
      0004C7 EE               [12] 1179 	mov	a,r6
      0004C8 60 3C            [24] 1180 	jz	00106$
                                   1181 ;	src/radio.c:166: if((crc & 0x8000) == 0x8000) crc = (crc << 1) ^ 0x1021;
      0004CA 90r00r32         [24] 1182 	mov	dptr,#_crc_update_crc_1_57
      0004CD E0               [24] 1183 	movx	a,@dptr
      0004CE FD               [12] 1184 	mov	r5,a
      0004CF A3               [24] 1185 	inc	dptr
      0004D0 E0               [24] 1186 	movx	a,@dptr
      0004D1 FE               [12] 1187 	mov	r6,a
      0004D2 7B 00            [12] 1188 	mov	r3,#0x00
      0004D4 74 80            [12] 1189 	mov	a,#0x80
      0004D6 5E               [12] 1190 	anl	a,r6
      0004D7 FC               [12] 1191 	mov	r4,a
      0004D8 BB 00 1A         [24] 1192 	cjne	r3,#0x00,00102$
      0004DB BC 80 17         [24] 1193 	cjne	r4,#0x80,00102$
      0004DE 8D 03            [24] 1194 	mov	ar3,r5
      0004E0 EE               [12] 1195 	mov	a,r6
      0004E1 CB               [12] 1196 	xch	a,r3
      0004E2 25 E0            [12] 1197 	add	a,acc
      0004E4 CB               [12] 1198 	xch	a,r3
      0004E5 33               [12] 1199 	rlc	a
      0004E6 FC               [12] 1200 	mov	r4,a
      0004E7 90r00r32         [24] 1201 	mov	dptr,#_crc_update_crc_1_57
      0004EA 74 21            [12] 1202 	mov	a,#0x21
      0004EC 6B               [12] 1203 	xrl	a,r3
      0004ED F0               [24] 1204 	movx	@dptr,a
      0004EE 74 10            [12] 1205 	mov	a,#0x10
      0004F0 6C               [12] 1206 	xrl	a,r4
      0004F1 A3               [24] 1207 	inc	dptr
      0004F2 F0               [24] 1208 	movx	@dptr,a
      0004F3 80 CF            [24] 1209 	sjmp	00104$
      0004F5                       1210 00102$:
                                   1211 ;	src/radio.c:167: else crc = crc << 1;
      0004F5 EE               [12] 1212 	mov	a,r6
      0004F6 CD               [12] 1213 	xch	a,r5
      0004F7 25 E0            [12] 1214 	add	a,acc
      0004F9 CD               [12] 1215 	xch	a,r5
      0004FA 33               [12] 1216 	rlc	a
      0004FB FE               [12] 1217 	mov	r6,a
      0004FC 90r00r32         [24] 1218 	mov	dptr,#_crc_update_crc_1_57
      0004FF ED               [12] 1219 	mov	a,r5
      000500 F0               [24] 1220 	movx	@dptr,a
      000501 EE               [12] 1221 	mov	a,r6
      000502 A3               [24] 1222 	inc	dptr
      000503 F0               [24] 1223 	movx	@dptr,a
      000504 80 BE            [24] 1224 	sjmp	00104$
      000506                       1225 00106$:
                                   1226 ;	src/radio.c:168: crc = crc & 0xFFFF;
                                   1227 ;	src/radio.c:169: return crc;
      000506 90r00r32         [24] 1228 	mov	dptr,#_crc_update_crc_1_57
      000509 E0               [24] 1229 	movx	a,@dptr
      00050A FE               [12] 1230 	mov	r6,a
      00050B A3               [24] 1231 	inc	dptr
      00050C E0               [24] 1232 	movx	a,@dptr
      00050D 8E 82            [24] 1233 	mov	dpl,r6
      00050F F5 83            [12] 1234 	mov	dph,a
      000511 22               [24] 1235 	ret
                                   1236 ;------------------------------------------------------------
                                   1237 ;Allocation info for local variables in function 'handle_radio_request'
                                   1238 ;------------------------------------------------------------
                                   1239 ;sloc0                     Allocated with name '_handle_radio_request_sloc0_1_0'
                                   1240 ;sloc1                     Allocated with name '_handle_radio_request_sloc1_1_0'
                                   1241 ;sloc2                     Allocated with name '_handle_radio_request_sloc2_1_0'
                                   1242 ;data                      Allocated with name '_handle_radio_request_PARM_2'
                                   1243 ;request                   Allocated with name '_handle_radio_request_request_1_59'
                                   1244 ;command                   Allocated with name '_handle_radio_request_command_2_62'
                                   1245 ;command_length            Allocated with name '_handle_radio_request_command_length_2_62'
                                   1246 ;x                         Allocated with name '_handle_radio_request_x_2_62'
                                   1247 ;value                     Allocated with name '_handle_radio_request_value_2_70'
                                   1248 ;x                         Allocated with name '_handle_radio_request_x_4_75'
                                   1249 ;offset                    Allocated with name '_handle_radio_request_offset_4_75'
                                   1250 ;payload_length            Allocated with name '_handle_radio_request_payload_length_4_75'
                                   1251 ;crc                       Allocated with name '_handle_radio_request_crc_4_75'
                                   1252 ;crc_given                 Allocated with name '_handle_radio_request_crc_given_4_75'
                                   1253 ;payload                   Allocated with name '_handle_radio_request_payload_4_75'
                                   1254 ;x                         Allocated with name '_handle_radio_request_x_4_81'
                                   1255 ;payload                   Allocated with name '_handle_radio_request_payload_4_81'
                                   1256 ;elapsed                   Allocated with name '_handle_radio_request_elapsed_2_83'
                                   1257 ;status                    Allocated with name '_handle_radio_request_status_2_83'
                                   1258 ;__00040005                Allocated with name '_handle_radio_request___00040005_5_94'
                                   1259 ;us                        Allocated with name '_handle_radio_request_us_5_94'
                                   1260 ;__00030007                Allocated with name '_handle_radio_request___00030007_4_97'
                                   1261 ;us                        Allocated with name '_handle_radio_request_us_4_97'
                                   1262 ;address_start             Allocated with name '_handle_radio_request_address_start_2_90'
                                   1263 ;__00030009                Allocated with name '_handle_radio_request___00030009_4_100'
                                   1264 ;us                        Allocated with name '_handle_radio_request_us_4_100'
                                   1265 ;------------------------------------------------------------
                                   1266 ;	src/radio.c:173: void handle_radio_request(uint8_t request, uint8_t * data)
                                   1267 ;	-----------------------------------------
                                   1268 ;	 function handle_radio_request
                                   1269 ;	-----------------------------------------
      000512                       1270 _handle_radio_request:
      000512 E5 82            [12] 1271 	mov	a,dpl
      000514 90r00r37         [24] 1272 	mov	dptr,#_handle_radio_request_request_1_59
      000517 F0               [24] 1273 	movx	@dptr,a
                                   1274 ;	src/radio.c:176: if(request == LAUNCH_NORDIC_BOOTLOADER)
      000518 E0               [24] 1275 	movx	a,@dptr
      000519 FF               [12] 1276 	mov	r7,a
      00051A BF FF 0E         [24] 1277 	cjne	r7,#0xFF,00102$
                                   1278 ;	src/radio.c:178: nordic_bootloader();
      00051D 90r00r00         [24] 1279 	mov	dptr,#_nordic_bootloader
      000520 E0               [24] 1280 	movx	a,@dptr
      000521 F8               [12] 1281 	mov	r0,a
      000522 A3               [24] 1282 	inc	dptr
      000523 E0               [24] 1283 	movx	a,@dptr
      000524 F5 83            [12] 1284 	mov	dph,a
      000526 88 82            [24] 1285 	mov	dpl,r0
                                   1286 ;	src/radio.c:179: return;
      000528 02r00r00         [24] 1287 	ljmp	__sdcc_call_dptr
      00052B                       1288 00102$:
                                   1289 ;	src/radio.c:183: if(request == LAUNCH_LOGITECH_BOOTLOADER)
      00052B BF FE 69         [24] 1290 	cjne	r7,#0xFE,00210$
                                   1291 ;	src/radio.c:185: const uint8_t command[9] = {'E', 'n', 't', 'e', 'r', ' ', 'I', 'C', 'P'};
      00052E 90r00r38         [24] 1292 	mov	dptr,#_handle_radio_request_command_2_62
      000531 74 45            [12] 1293 	mov	a,#0x45
      000533 F0               [24] 1294 	movx	@dptr,a
      000534 90r00r39         [24] 1295 	mov	dptr,#(_handle_radio_request_command_2_62 + 0x0001)
      000537 74 6E            [12] 1296 	mov	a,#0x6E
      000539 F0               [24] 1297 	movx	@dptr,a
      00053A 90r00r3A         [24] 1298 	mov	dptr,#(_handle_radio_request_command_2_62 + 0x0002)
      00053D 74 74            [12] 1299 	mov	a,#0x74
      00053F F0               [24] 1300 	movx	@dptr,a
      000540 90r00r3B         [24] 1301 	mov	dptr,#(_handle_radio_request_command_2_62 + 0x0003)
      000543 74 65            [12] 1302 	mov	a,#0x65
      000545 F0               [24] 1303 	movx	@dptr,a
      000546 90r00r3C         [24] 1304 	mov	dptr,#(_handle_radio_request_command_2_62 + 0x0004)
      000549 74 72            [12] 1305 	mov	a,#0x72
      00054B F0               [24] 1306 	movx	@dptr,a
      00054C 90r00r3D         [24] 1307 	mov	dptr,#(_handle_radio_request_command_2_62 + 0x0005)
      00054F 74 20            [12] 1308 	mov	a,#0x20
      000551 F0               [24] 1309 	movx	@dptr,a
      000552 90r00r3E         [24] 1310 	mov	dptr,#(_handle_radio_request_command_2_62 + 0x0006)
      000555 74 49            [12] 1311 	mov	a,#0x49
      000557 F0               [24] 1312 	movx	@dptr,a
      000558 90r00r3F         [24] 1313 	mov	dptr,#(_handle_radio_request_command_2_62 + 0x0007)
      00055B 74 43            [12] 1314 	mov	a,#0x43
      00055D F0               [24] 1315 	movx	@dptr,a
      00055E 90r00r40         [24] 1316 	mov	dptr,#(_handle_radio_request_command_2_62 + 0x0008)
      000561 74 50            [12] 1317 	mov	a,#0x50
      000563 F0               [24] 1318 	movx	@dptr,a
                                   1319 ;	src/radio.c:188: for(x = 0; x < command_length; x++)
      000564 7D 00            [12] 1320 	mov	r5,#0x00
      000566 7E 00            [12] 1321 	mov	r6,#0x00
      000568                       1322 00225$:
      000568 C3               [12] 1323 	clr	c
      000569 ED               [12] 1324 	mov	a,r5
      00056A 94 09            [12] 1325 	subb	a,#0x09
      00056C EE               [12] 1326 	mov	a,r6
      00056D 64 80            [12] 1327 	xrl	a,#0x80
      00056F 94 80            [12] 1328 	subb	a,#0x80
      000571 50 16            [24] 1329 	jnc	00103$
                                   1330 ;	src/radio.c:190: AESIA1 = x;
                                   1331 ;	src/radio.c:191: AESIV = command[x];
      000573 ED               [12] 1332 	mov	a,r5
      000574 F5 F5            [12] 1333 	mov	_AESIA1,a
      000576 24r38            [12] 1334 	add	a,#_handle_radio_request_command_2_62
      000578 F5 82            [12] 1335 	mov	dpl,a
      00057A EE               [12] 1336 	mov	a,r6
      00057B 34s00            [12] 1337 	addc	a,#(_handle_radio_request_command_2_62 >> 8)
      00057D F5 83            [12] 1338 	mov	dph,a
      00057F E0               [24] 1339 	movx	a,@dptr
      000580 F5 F2            [12] 1340 	mov	_AESIV,a
                                   1341 ;	src/radio.c:188: for(x = 0; x < command_length; x++)
      000582 0D               [12] 1342 	inc	r5
      000583 BD 00 E2         [24] 1343 	cjne	r5,#0x00,00225$
      000586 0E               [12] 1344 	inc	r6
      000587 80 DF            [24] 1345 	sjmp	00225$
      000589                       1346 00103$:
                                   1347 ;	src/radio.c:193: logitech_bootloader();
      000589 90r00r02         [24] 1348 	mov	dptr,#_logitech_bootloader
      00058C E0               [24] 1349 	movx	a,@dptr
      00058D F8               [12] 1350 	mov	r0,a
      00058E A3               [24] 1351 	inc	dptr
      00058F E0               [24] 1352 	movx	a,@dptr
      000590 F5 83            [12] 1353 	mov	dph,a
      000592 88 82            [24] 1354 	mov	dpl,r0
                                   1355 ;	src/radio.c:194: return;
      000594 02r00r00         [24] 1356 	ljmp	__sdcc_call_dptr
      000597                       1357 00210$:
                                   1358 ;	src/radio.c:198: else if(request == ENABLE_LNA)
      000597 BF 0B 10         [24] 1359 	cjne	r7,#0x0B,00207$
                                   1360 ;	src/radio.c:200: P0DIR &= ~0x10;
      00059A AE 94            [24] 1361 	mov	r6,_P0DIR
      00059C 74 EF            [12] 1362 	mov	a,#0xEF
      00059E 5E               [12] 1363 	anl	a,r6
      00059F F5 94            [12] 1364 	mov	_P0DIR,a
                                   1365 ;	src/radio.c:201: P0 |= 0x10;
      0005A1 43 80 10         [24] 1366 	orl	_P0,#0x10
                                   1367 ;	src/radio.c:202: in1bc = 0;
      0005A4 90 C7 B7         [24] 1368 	mov	dptr,#0xC7B7
      0005A7 E4               [12] 1369 	clr	a
      0005A8 F0               [24] 1370 	movx	@dptr,a
                                   1371 ;	src/radio.c:203: return;
      0005A9 22               [24] 1372 	ret
      0005AA                       1373 00207$:
                                   1374 ;	src/radio.c:207: else if(request == SET_CHANNEL)
      0005AA BF 09 68         [24] 1375 	cjne	r7,#0x09,00204$
                                   1376 ;	src/radio.c:209: rfce = 0;
      0005AD C2 90            [12] 1377 	clr	_rfce
                                   1378 ;	src/radio.c:210: write_register_byte(RF_CH, data[0]);
      0005AF 90r00r34         [24] 1379 	mov	dptr,#_handle_radio_request_PARM_2
      0005B2 E0               [24] 1380 	movx	a,@dptr
      0005B3 FC               [12] 1381 	mov	r4,a
      0005B4 A3               [24] 1382 	inc	dptr
      0005B5 E0               [24] 1383 	movx	a,@dptr
      0005B6 FD               [12] 1384 	mov	r5,a
      0005B7 A3               [24] 1385 	inc	dptr
      0005B8 E0               [24] 1386 	movx	a,@dptr
      0005B9 FE               [12] 1387 	mov	r6,a
      0005BA 8C 82            [24] 1388 	mov	dpl,r4
      0005BC 8D 83            [24] 1389 	mov	dph,r5
      0005BE 8E F0            [24] 1390 	mov	b,r6
      0005C0 12r00r00         [24] 1391 	lcall	__gptrget
      0005C3 90r00r2C         [24] 1392 	mov	dptr,#_write_register_byte_PARM_2
      0005C6 F0               [24] 1393 	movx	@dptr,a
      0005C7 75 82 05         [24] 1394 	mov	dpl,#0x05
      0005CA C0 06            [24] 1395 	push	ar6
      0005CC C0 05            [24] 1396 	push	ar5
      0005CE C0 04            [24] 1397 	push	ar4
      0005D0 12r04r53         [24] 1398 	lcall	_write_register_byte
      0005D3 D0 04            [24] 1399 	pop	ar4
      0005D5 D0 05            [24] 1400 	pop	ar5
      0005D7 D0 06            [24] 1401 	pop	ar6
                                   1402 ;	src/radio.c:211: in1bc = 1;
      0005D9 90 C7 B7         [24] 1403 	mov	dptr,#0xC7B7
      0005DC 74 01            [12] 1404 	mov	a,#0x01
      0005DE F0               [24] 1405 	movx	@dptr,a
                                   1406 ;	src/radio.c:212: in1buf[0] = data[0];
      0005DF 8C 82            [24] 1407 	mov	dpl,r4
      0005E1 8D 83            [24] 1408 	mov	dph,r5
      0005E3 8E F0            [24] 1409 	mov	b,r6
      0005E5 12r00r00         [24] 1410 	lcall	__gptrget
      0005E8 90 C6 80         [24] 1411 	mov	dptr,#_in1buf
      0005EB F0               [24] 1412 	movx	@dptr,a
                                   1413 ;	src/radio.c:213: flush_rx();
      0005EC 90r00r22         [24] 1414 	mov	dptr,#_spi_write_PARM_2
      0005EF E4               [12] 1415 	clr	a
      0005F0 F0               [24] 1416 	movx	@dptr,a
      0005F1 A3               [24] 1417 	inc	dptr
      0005F2 F0               [24] 1418 	movx	@dptr,a
      0005F3 A3               [24] 1419 	inc	dptr
      0005F4 F0               [24] 1420 	movx	@dptr,a
      0005F5 90r00r25         [24] 1421 	mov	dptr,#_spi_write_PARM_3
      0005F8 F0               [24] 1422 	movx	@dptr,a
      0005F9 75 82 E2         [24] 1423 	mov	dpl,#0xE2
      0005FC 12r03r66         [24] 1424 	lcall	_spi_write
                                   1425 ;	src/radio.c:214: flush_tx();
      0005FF 90r00r22         [24] 1426 	mov	dptr,#_spi_write_PARM_2
      000602 E4               [12] 1427 	clr	a
      000603 F0               [24] 1428 	movx	@dptr,a
      000604 A3               [24] 1429 	inc	dptr
      000605 F0               [24] 1430 	movx	@dptr,a
      000606 A3               [24] 1431 	inc	dptr
      000607 F0               [24] 1432 	movx	@dptr,a
      000608 90r00r25         [24] 1433 	mov	dptr,#_spi_write_PARM_3
      00060B F0               [24] 1434 	movx	@dptr,a
      00060C 75 82 E1         [24] 1435 	mov	dpl,#0xE1
      00060F 12r03r66         [24] 1436 	lcall	_spi_write
                                   1437 ;	src/radio.c:215: rfce = 1;
      000612 D2 90            [12] 1438 	setb	_rfce
                                   1439 ;	src/radio.c:216: return;
      000614 22               [24] 1440 	ret
      000615                       1441 00204$:
                                   1442 ;	src/radio.c:220: else if(request == GET_CHANNEL)
      000615 BF 0A 1F         [24] 1443 	cjne	r7,#0x0A,00201$
                                   1444 ;	src/radio.c:222: spi_read(RF_CH, in1buf, 1);
      000618 90r00r27         [24] 1445 	mov	dptr,#_spi_read_PARM_2
      00061B 74 80            [12] 1446 	mov	a,#_in1buf
      00061D F0               [24] 1447 	movx	@dptr,a
      00061E 74 C6            [12] 1448 	mov	a,#(_in1buf >> 8)
      000620 A3               [24] 1449 	inc	dptr
      000621 F0               [24] 1450 	movx	@dptr,a
      000622 E4               [12] 1451 	clr	a
      000623 A3               [24] 1452 	inc	dptr
      000624 F0               [24] 1453 	movx	@dptr,a
      000625 90r00r2A         [24] 1454 	mov	dptr,#_spi_read_PARM_3
      000628 04               [12] 1455 	inc	a
      000629 F0               [24] 1456 	movx	@dptr,a
      00062A 75 82 05         [24] 1457 	mov	dpl,#0x05
      00062D 12r03rDA         [24] 1458 	lcall	_spi_read
                                   1459 ;	src/radio.c:223: in1bc = 1;
      000630 90 C7 B7         [24] 1460 	mov	dptr,#0xC7B7
      000633 74 01            [12] 1461 	mov	a,#0x01
      000635 F0               [24] 1462 	movx	@dptr,a
                                   1463 ;	src/radio.c:224: return;
      000636 22               [24] 1464 	ret
      000637                       1465 00201$:
                                   1466 ;	src/radio.c:228: else if(request == ENTER_PROMISCUOUS_MODE)
      000637 BF 06 2A         [24] 1467 	cjne	r7,#0x06,00198$
                                   1468 ;	src/radio.c:230: enter_promiscuous_mode(&data[1] /* address prefix */, data[0] /* prefix length */);
      00063A 90r00r34         [24] 1469 	mov	dptr,#_handle_radio_request_PARM_2
      00063D E0               [24] 1470 	movx	a,@dptr
      00063E FC               [12] 1471 	mov	r4,a
      00063F A3               [24] 1472 	inc	dptr
      000640 E0               [24] 1473 	movx	a,@dptr
      000641 FD               [12] 1474 	mov	r5,a
      000642 A3               [24] 1475 	inc	dptr
      000643 E0               [24] 1476 	movx	a,@dptr
      000644 FE               [12] 1477 	mov	r6,a
      000645 74 01            [12] 1478 	mov	a,#0x01
      000647 2C               [12] 1479 	add	a,r4
      000648 F9               [12] 1480 	mov	r1,a
      000649 E4               [12] 1481 	clr	a
      00064A 3D               [12] 1482 	addc	a,r5
      00064B FA               [12] 1483 	mov	r2,a
      00064C 8E 03            [24] 1484 	mov	ar3,r6
      00064E 8C 82            [24] 1485 	mov	dpl,r4
      000650 8D 83            [24] 1486 	mov	dph,r5
      000652 8E F0            [24] 1487 	mov	b,r6
      000654 12r00r00         [24] 1488 	lcall	__gptrget
      000657 90r00r09         [24] 1489 	mov	dptr,#_enter_promiscuous_mode_PARM_2
      00065A F0               [24] 1490 	movx	@dptr,a
      00065B 89 82            [24] 1491 	mov	dpl,r1
      00065D 8A 83            [24] 1492 	mov	dph,r2
      00065F 8B F0            [24] 1493 	mov	b,r3
      000661 02r00r00         [24] 1494 	ljmp	_enter_promiscuous_mode
      000664                       1495 00198$:
                                   1496 ;	src/radio.c:234: else if(request == ENTER_PROMISCUOUS_MODE_GENERIC)
      000664 BF 0D 61         [24] 1497 	cjne	r7,#0x0D,00195$
                                   1498 ;	src/radio.c:236: enter_promiscuous_mode_generic(&data[3] /* address prefix */, data[0] /* prefix length */, data[1] /* rate */, data[2] /* payload length */);
      000667 90r00r34         [24] 1499 	mov	dptr,#_handle_radio_request_PARM_2
      00066A E0               [24] 1500 	movx	a,@dptr
      00066B FC               [12] 1501 	mov	r4,a
      00066C A3               [24] 1502 	inc	dptr
      00066D E0               [24] 1503 	movx	a,@dptr
      00066E FD               [12] 1504 	mov	r5,a
      00066F A3               [24] 1505 	inc	dptr
      000670 E0               [24] 1506 	movx	a,@dptr
      000671 FE               [12] 1507 	mov	r6,a
      000672 74 03            [12] 1508 	mov	a,#0x03
      000674 2C               [12] 1509 	add	a,r4
      000675 F5*08            [12] 1510 	mov	_handle_radio_request_sloc1_1_0,a
      000677 E4               [12] 1511 	clr	a
      000678 3D               [12] 1512 	addc	a,r5
      000679 F5*09            [12] 1513 	mov	(_handle_radio_request_sloc1_1_0 + 1),a
      00067B 8E*0A            [24] 1514 	mov	(_handle_radio_request_sloc1_1_0 + 2),r6
      00067D 8C 82            [24] 1515 	mov	dpl,r4
      00067F 8D 83            [24] 1516 	mov	dph,r5
      000681 8E F0            [24] 1517 	mov	b,r6
      000683 12r00r00         [24] 1518 	lcall	__gptrget
      000686 F5*07            [12] 1519 	mov	_handle_radio_request_sloc0_1_0,a
      000688 74 01            [12] 1520 	mov	a,#0x01
      00068A 2C               [12] 1521 	add	a,r4
      00068B F8               [12] 1522 	mov	r0,a
      00068C E4               [12] 1523 	clr	a
      00068D 3D               [12] 1524 	addc	a,r5
      00068E FA               [12] 1525 	mov	r2,a
      00068F 8E 03            [24] 1526 	mov	ar3,r6
      000691 88 82            [24] 1527 	mov	dpl,r0
      000693 8A 83            [24] 1528 	mov	dph,r2
      000695 8B F0            [24] 1529 	mov	b,r3
      000697 12r00r00         [24] 1530 	lcall	__gptrget
      00069A F8               [12] 1531 	mov	r0,a
      00069B 74 02            [12] 1532 	mov	a,#0x02
      00069D 2C               [12] 1533 	add	a,r4
      00069E FC               [12] 1534 	mov	r4,a
      00069F E4               [12] 1535 	clr	a
      0006A0 3D               [12] 1536 	addc	a,r5
      0006A1 FD               [12] 1537 	mov	r5,a
      0006A2 8C 82            [24] 1538 	mov	dpl,r4
      0006A4 8D 83            [24] 1539 	mov	dph,r5
      0006A6 8E F0            [24] 1540 	mov	b,r6
      0006A8 12r00r00         [24] 1541 	lcall	__gptrget
      0006AB FC               [12] 1542 	mov	r4,a
      0006AC 90r00r0F         [24] 1543 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_2
      0006AF E5*07            [12] 1544 	mov	a,_handle_radio_request_sloc0_1_0
      0006B1 F0               [24] 1545 	movx	@dptr,a
      0006B2 90r00r10         [24] 1546 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_3
      0006B5 E8               [12] 1547 	mov	a,r0
      0006B6 F0               [24] 1548 	movx	@dptr,a
      0006B7 90r00r11         [24] 1549 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_4
      0006BA EC               [12] 1550 	mov	a,r4
      0006BB F0               [24] 1551 	movx	@dptr,a
      0006BC 85*08 82         [24] 1552 	mov	dpl,_handle_radio_request_sloc1_1_0
      0006BF 85*09 83         [24] 1553 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      0006C2 85*0A F0         [24] 1554 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      0006C5 02r01r22         [24] 1555 	ljmp	_enter_promiscuous_mode_generic
      0006C8                       1556 00195$:
                                   1557 ;	src/radio.c:240: else if(request == ENTER_TONE_TEST_MODE)
      0006C8 BF 07 17         [24] 1558 	cjne	r7,#0x07,00192$
                                   1559 ;	src/radio.c:242: configure_phy(PWR_UP, CONT_WAVE | PLL_LOCK, 0);
      0006CB 90r00r1E         [24] 1560 	mov	dptr,#_configure_phy_PARM_2
      0006CE 74 90            [12] 1561 	mov	a,#0x90
      0006D0 F0               [24] 1562 	movx	@dptr,a
      0006D1 90r00r1F         [24] 1563 	mov	dptr,#_configure_phy_PARM_3
      0006D4 E4               [12] 1564 	clr	a
      0006D5 F0               [24] 1565 	movx	@dptr,a
      0006D6 75 82 02         [24] 1566 	mov	dpl,#0x02
      0006D9 12r03r27         [24] 1567 	lcall	_configure_phy
                                   1568 ;	src/radio.c:243: in1bc = 0;
      0006DC 90 C7 B7         [24] 1569 	mov	dptr,#0xC7B7
      0006DF E4               [12] 1570 	clr	a
      0006E0 F0               [24] 1571 	movx	@dptr,a
                                   1572 ;	src/radio.c:244: return;
      0006E1 22               [24] 1573 	ret
      0006E2                       1574 00192$:
                                   1575 ;	src/radio.c:248: else if(request == RECEIVE_PACKET)
      0006E2 BF 12 02         [24] 1576 	cjne	r7,#0x12,00464$
      0006E5 80 03            [24] 1577 	sjmp	00465$
      0006E7                       1578 00464$:
      0006E7 02r0Br77         [24] 1579 	ljmp	00189$
      0006EA                       1580 00465$:
                                   1581 ;	src/radio.c:253: read_register(FIFO_STATUS, &value, 1);
      0006EA 90r00r27         [24] 1582 	mov	dptr,#_spi_read_PARM_2
      0006ED 74r41            [12] 1583 	mov	a,#_handle_radio_request_value_2_70
      0006EF F0               [24] 1584 	movx	@dptr,a
      0006F0 74s00            [12] 1585 	mov	a,#(_handle_radio_request_value_2_70 >> 8)
      0006F2 A3               [24] 1586 	inc	dptr
      0006F3 F0               [24] 1587 	movx	@dptr,a
      0006F4 E4               [12] 1588 	clr	a
      0006F5 A3               [24] 1589 	inc	dptr
      0006F6 F0               [24] 1590 	movx	@dptr,a
      0006F7 90r00r2A         [24] 1591 	mov	dptr,#_spi_read_PARM_3
      0006FA 04               [12] 1592 	inc	a
      0006FB F0               [24] 1593 	movx	@dptr,a
      0006FC 75 82 17         [24] 1594 	mov	dpl,#0x17
      0006FF 12r03rDA         [24] 1595 	lcall	_spi_read
                                   1596 ;	src/radio.c:254: if((value & 1) == 0)
      000702 90r00r41         [24] 1597 	mov	dptr,#_handle_radio_request_value_2_70
      000705 E0               [24] 1598 	movx	a,@dptr
      000706 FE               [12] 1599 	mov	r6,a
      000707 30 E0 03         [24] 1600 	jnb	acc.0,00466$
      00070A 02r0Br6A         [24] 1601 	ljmp	00133$
      00070D                       1602 00466$:
                                   1603 ;	src/radio.c:257: if(radio_mode == sniffer)
      00070D 90r00r00         [24] 1604 	mov	dptr,#_radio_mode
      000710 E0               [24] 1605 	movx	a,@dptr
      000711 FE               [12] 1606 	mov	r6,a
      000712 70 7B            [24] 1607 	jnz	00130$
                                   1608 ;	src/radio.c:260: read_register(R_RX_PL_WID, &value, 1);
      000714 90r00r27         [24] 1609 	mov	dptr,#_spi_read_PARM_2
      000717 74r41            [12] 1610 	mov	a,#_handle_radio_request_value_2_70
      000719 F0               [24] 1611 	movx	@dptr,a
      00071A 74s00            [12] 1612 	mov	a,#(_handle_radio_request_value_2_70 >> 8)
      00071C A3               [24] 1613 	inc	dptr
      00071D F0               [24] 1614 	movx	@dptr,a
      00071E E4               [12] 1615 	clr	a
      00071F A3               [24] 1616 	inc	dptr
      000720 F0               [24] 1617 	movx	@dptr,a
      000721 90r00r2A         [24] 1618 	mov	dptr,#_spi_read_PARM_3
      000724 04               [12] 1619 	inc	a
      000725 F0               [24] 1620 	movx	@dptr,a
      000726 75 82 60         [24] 1621 	mov	dpl,#0x60
      000729 12r03rDA         [24] 1622 	lcall	_spi_read
                                   1623 ;	src/radio.c:261: if(value <= 32)
      00072C 90r00r41         [24] 1624 	mov	dptr,#_handle_radio_request_value_2_70
      00072F E0               [24] 1625 	movx	a,@dptr
      000730 FD               [12] 1626 	mov  r5,a
      000731 24 DF            [12] 1627 	add	a,#0xff - 0x20
      000733 40 3B            [24] 1628 	jc	00105$
                                   1629 ;	src/radio.c:264: read_register(R_RX_PAYLOAD, &in1buf[1], value);
      000735 90r00r27         [24] 1630 	mov	dptr,#_spi_read_PARM_2
      000738 74 81            [12] 1631 	mov	a,#(_in1buf + 0x0001)
      00073A F0               [24] 1632 	movx	@dptr,a
      00073B 74 C6            [12] 1633 	mov	a,#((_in1buf + 0x0001) >> 8)
      00073D A3               [24] 1634 	inc	dptr
      00073E F0               [24] 1635 	movx	@dptr,a
      00073F E4               [12] 1636 	clr	a
      000740 A3               [24] 1637 	inc	dptr
      000741 F0               [24] 1638 	movx	@dptr,a
      000742 90r00r2A         [24] 1639 	mov	dptr,#_spi_read_PARM_3
      000745 ED               [12] 1640 	mov	a,r5
      000746 F0               [24] 1641 	movx	@dptr,a
      000747 75 82 61         [24] 1642 	mov	dpl,#0x61
      00074A 12r03rDA         [24] 1643 	lcall	_spi_read
                                   1644 ;	src/radio.c:265: in1buf[0] = 0;
      00074D 90 C6 80         [24] 1645 	mov	dptr,#_in1buf
      000750 E4               [12] 1646 	clr	a
      000751 F0               [24] 1647 	movx	@dptr,a
                                   1648 ;	src/radio.c:266: in1bc = value + 1;
      000752 90r00r41         [24] 1649 	mov	dptr,#_handle_radio_request_value_2_70
      000755 E0               [24] 1650 	movx	a,@dptr
      000756 FD               [12] 1651 	mov	r5,a
      000757 0D               [12] 1652 	inc	r5
      000758 90 C7 B7         [24] 1653 	mov	dptr,#0xC7B7
      00075B ED               [12] 1654 	mov	a,r5
      00075C F0               [24] 1655 	movx	@dptr,a
                                   1656 ;	src/radio.c:267: flush_rx();
      00075D 90r00r22         [24] 1657 	mov	dptr,#_spi_write_PARM_2
      000760 E4               [12] 1658 	clr	a
      000761 F0               [24] 1659 	movx	@dptr,a
      000762 A3               [24] 1660 	inc	dptr
      000763 F0               [24] 1661 	movx	@dptr,a
      000764 A3               [24] 1662 	inc	dptr
      000765 F0               [24] 1663 	movx	@dptr,a
      000766 90r00r25         [24] 1664 	mov	dptr,#_spi_write_PARM_3
      000769 F0               [24] 1665 	movx	@dptr,a
      00076A 75 82 E2         [24] 1666 	mov	dpl,#0xE2
                                   1667 ;	src/radio.c:268: return;
      00076D 02r03r66         [24] 1668 	ljmp	_spi_write
      000770                       1669 00105$:
                                   1670 ;	src/radio.c:273: in1bc = 1;
      000770 90 C7 B7         [24] 1671 	mov	dptr,#0xC7B7
      000773 74 01            [12] 1672 	mov	a,#0x01
      000775 F0               [24] 1673 	movx	@dptr,a
                                   1674 ;	src/radio.c:274: in1buf[0] = 0xFF;
      000776 90 C6 80         [24] 1675 	mov	dptr,#_in1buf
      000779 74 FF            [12] 1676 	mov	a,#0xFF
      00077B F0               [24] 1677 	movx	@dptr,a
                                   1678 ;	src/radio.c:275: flush_rx();
      00077C 90r00r22         [24] 1679 	mov	dptr,#_spi_write_PARM_2
      00077F E4               [12] 1680 	clr	a
      000780 F0               [24] 1681 	movx	@dptr,a
      000781 A3               [24] 1682 	inc	dptr
      000782 F0               [24] 1683 	movx	@dptr,a
      000783 A3               [24] 1684 	inc	dptr
      000784 F0               [24] 1685 	movx	@dptr,a
      000785 90r00r25         [24] 1686 	mov	dptr,#_spi_write_PARM_3
      000788 F0               [24] 1687 	movx	@dptr,a
      000789 75 82 E2         [24] 1688 	mov	dpl,#0xE2
                                   1689 ;	src/radio.c:276: return;
      00078C 02r03r66         [24] 1690 	ljmp	_spi_write
      00078F                       1691 00130$:
                                   1692 ;	src/radio.c:281: else if(radio_mode == promiscuous)
      00078F BE 01 02         [24] 1693 	cjne	r6,#0x01,00469$
      000792 80 03            [24] 1694 	sjmp	00470$
      000794                       1695 00469$:
      000794 02r0ArB7         [24] 1696 	ljmp	00127$
      000797                       1697 00470$:
                                   1698 ;	src/radio.c:289: for(x = 0; x < pm_prefix_length; x++) payload[pm_prefix_length - x - 1] = pm_prefix[x];
      000797 7C 00            [12] 1699 	mov	r4,#0x00
      000799 7D 00            [12] 1700 	mov	r5,#0x00
      00079B                       1701 00228$:
      00079B 90r00r01         [24] 1702 	mov	dptr,#_pm_prefix_length
      00079E E0               [24] 1703 	movx	a,@dptr
      00079F FA               [12] 1704 	mov	r2,a
      0007A0 A3               [24] 1705 	inc	dptr
      0007A1 E0               [24] 1706 	movx	a,@dptr
      0007A2 FB               [12] 1707 	mov	r3,a
      0007A3 C3               [12] 1708 	clr	c
      0007A4 EC               [12] 1709 	mov	a,r4
      0007A5 9A               [12] 1710 	subb	a,r2
      0007A6 ED               [12] 1711 	mov	a,r5
      0007A7 64 80            [12] 1712 	xrl	a,#0x80
      0007A9 8B F0            [24] 1713 	mov	b,r3
      0007AB 63 F0 80         [24] 1714 	xrl	b,#0x80
      0007AE 95 F0            [12] 1715 	subb	a,b
      0007B0 50 2B            [24] 1716 	jnc	00107$
      0007B2 8A 01            [24] 1717 	mov	ar1,r2
      0007B4 8C 00            [24] 1718 	mov	ar0,r4
      0007B6 E9               [12] 1719 	mov	a,r1
      0007B7 C3               [12] 1720 	clr	c
      0007B8 98               [12] 1721 	subb	a,r0
      0007B9 14               [12] 1722 	dec	a
      0007BA 24r46            [12] 1723 	add	a,#_handle_radio_request_payload_4_75
      0007BC F5*08            [12] 1724 	mov	_handle_radio_request_sloc1_1_0,a
      0007BE E4               [12] 1725 	clr	a
      0007BF 34s00            [12] 1726 	addc	a,#(_handle_radio_request_payload_4_75 >> 8)
      0007C1 F5*09            [12] 1727 	mov	(_handle_radio_request_sloc1_1_0 + 1),a
      0007C3 EC               [12] 1728 	mov	a,r4
      0007C4 24r03            [12] 1729 	add	a,#_pm_prefix
      0007C6 F5 82            [12] 1730 	mov	dpl,a
      0007C8 ED               [12] 1731 	mov	a,r5
      0007C9 34s00            [12] 1732 	addc	a,#(_pm_prefix >> 8)
      0007CB F5 83            [12] 1733 	mov	dph,a
      0007CD E0               [24] 1734 	movx	a,@dptr
      0007CE F9               [12] 1735 	mov	r1,a
      0007CF 85*08 82         [24] 1736 	mov	dpl,_handle_radio_request_sloc1_1_0
      0007D2 85*09 83         [24] 1737 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      0007D5 F0               [24] 1738 	movx	@dptr,a
      0007D6 0C               [12] 1739 	inc	r4
      0007D7 BC 00 C1         [24] 1740 	cjne	r4,#0x00,00228$
      0007DA 0D               [12] 1741 	inc	r5
      0007DB 80 BE            [24] 1742 	sjmp	00228$
      0007DD                       1743 00107$:
                                   1744 ;	src/radio.c:290: read_register(R_RX_PAYLOAD, &payload[pm_prefix_length], pm_payload_length);
      0007DD EA               [12] 1745 	mov	a,r2
      0007DE 24r46            [12] 1746 	add	a,#_handle_radio_request_payload_4_75
      0007E0 FA               [12] 1747 	mov	r2,a
      0007E1 EB               [12] 1748 	mov	a,r3
      0007E2 34s00            [12] 1749 	addc	a,#(_handle_radio_request_payload_4_75 >> 8)
      0007E4 FB               [12] 1750 	mov	r3,a
      0007E5 7D 00            [12] 1751 	mov	r5,#0x00
      0007E7 90r00r08         [24] 1752 	mov	dptr,#_pm_payload_length
      0007EA E0               [24] 1753 	movx	a,@dptr
      0007EB FC               [12] 1754 	mov	r4,a
      0007EC 90r00r27         [24] 1755 	mov	dptr,#_spi_read_PARM_2
      0007EF EA               [12] 1756 	mov	a,r2
      0007F0 F0               [24] 1757 	movx	@dptr,a
      0007F1 EB               [12] 1758 	mov	a,r3
      0007F2 A3               [24] 1759 	inc	dptr
      0007F3 F0               [24] 1760 	movx	@dptr,a
      0007F4 ED               [12] 1761 	mov	a,r5
      0007F5 A3               [24] 1762 	inc	dptr
      0007F6 F0               [24] 1763 	movx	@dptr,a
      0007F7 90r00r2A         [24] 1764 	mov	dptr,#_spi_read_PARM_3
      0007FA EC               [12] 1765 	mov	a,r4
      0007FB F0               [24] 1766 	movx	@dptr,a
      0007FC 75 82 61         [24] 1767 	mov	dpl,#0x61
      0007FF 12r03rDA         [24] 1768 	lcall	_spi_read
                                   1769 ;	src/radio.c:297: for(offset = 0; offset < 2; offset++)
      000802 7C 00            [12] 1770 	mov	r4,#0x00
      000804 7D 00            [12] 1771 	mov	r5,#0x00
      000806                       1772 00238$:
                                   1773 ;	src/radio.c:300: if(offset == 1)
      000806 BC 01 6D         [24] 1774 	cjne	r4,#0x01,00113$
      000809 BD 00 6A         [24] 1775 	cjne	r5,#0x00,00113$
                                   1776 ;	src/radio.c:302: for(x = 31; x >= 0; x--)
      00080C 7A 1F            [12] 1777 	mov	r2,#0x1F
      00080E 7B 00            [12] 1778 	mov	r3,#0x00
      000810                       1779 00230$:
                                   1780 ;	src/radio.c:304: if(x > 0) payload[x] = payload[x - 1] << 7 | payload[x] >> 1;
      000810 C3               [12] 1781 	clr	c
      000811 E4               [12] 1782 	clr	a
      000812 9A               [12] 1783 	subb	a,r2
      000813 74 80            [12] 1784 	mov	a,#(0x00 ^ 0x80)
      000815 8B F0            [24] 1785 	mov	b,r3
      000817 63 F0 80         [24] 1786 	xrl	b,#0x80
      00081A 95 F0            [12] 1787 	subb	a,b
      00081C 50 33            [24] 1788 	jnc	00109$
      00081E C0 04            [24] 1789 	push	ar4
      000820 C0 05            [24] 1790 	push	ar5
      000822 EA               [12] 1791 	mov	a,r2
      000823 24r46            [12] 1792 	add	a,#_handle_radio_request_payload_4_75
      000825 F8               [12] 1793 	mov	r0,a
      000826 EB               [12] 1794 	mov	a,r3
      000827 34s00            [12] 1795 	addc	a,#(_handle_radio_request_payload_4_75 >> 8)
      000829 F9               [12] 1796 	mov	r1,a
      00082A 8A 05            [24] 1797 	mov	ar5,r2
      00082C ED               [12] 1798 	mov	a,r5
      00082D 14               [12] 1799 	dec	a
      00082E 24r46            [12] 1800 	add	a,#_handle_radio_request_payload_4_75
      000830 F5 82            [12] 1801 	mov	dpl,a
      000832 E4               [12] 1802 	clr	a
      000833 34s00            [12] 1803 	addc	a,#(_handle_radio_request_payload_4_75 >> 8)
      000835 F5 83            [12] 1804 	mov	dph,a
      000837 E0               [24] 1805 	movx	a,@dptr
      000838 03               [12] 1806 	rr	a
      000839 54 80            [12] 1807 	anl	a,#0x80
      00083B FD               [12] 1808 	mov	r5,a
      00083C 88 82            [24] 1809 	mov	dpl,r0
      00083E 89 83            [24] 1810 	mov	dph,r1
      000840 E0               [24] 1811 	movx	a,@dptr
      000841 C3               [12] 1812 	clr	c
      000842 13               [12] 1813 	rrc	a
      000843 42 05            [12] 1814 	orl	ar5,a
      000845 88 82            [24] 1815 	mov	dpl,r0
      000847 89 83            [24] 1816 	mov	dph,r1
      000849 ED               [12] 1817 	mov	a,r5
      00084A F0               [24] 1818 	movx	@dptr,a
      00084B D0 05            [24] 1819 	pop	ar5
      00084D D0 04            [24] 1820 	pop	ar4
      00084F 80 1C            [24] 1821 	sjmp	00231$
      000851                       1822 00109$:
                                   1823 ;	src/radio.c:305: else payload[x] = payload[x] >> 1;
      000851 C0 04            [24] 1824 	push	ar4
      000853 C0 05            [24] 1825 	push	ar5
      000855 EA               [12] 1826 	mov	a,r2
      000856 24r46            [12] 1827 	add	a,#_handle_radio_request_payload_4_75
      000858 F8               [12] 1828 	mov	r0,a
      000859 EB               [12] 1829 	mov	a,r3
      00085A 34s00            [12] 1830 	addc	a,#(_handle_radio_request_payload_4_75 >> 8)
      00085C F9               [12] 1831 	mov	r1,a
      00085D 88 82            [24] 1832 	mov	dpl,r0
      00085F 89 83            [24] 1833 	mov	dph,r1
      000861 E0               [24] 1834 	movx	a,@dptr
      000862 C3               [12] 1835 	clr	c
      000863 13               [12] 1836 	rrc	a
      000864 88 82            [24] 1837 	mov	dpl,r0
      000866 89 83            [24] 1838 	mov	dph,r1
      000868 F0               [24] 1839 	movx	@dptr,a
                                   1840 ;	src/radio.c:583: in1bc = 1;
      000869 D0 05            [24] 1841 	pop	ar5
      00086B D0 04            [24] 1842 	pop	ar4
                                   1843 ;	src/radio.c:305: else payload[x] = payload[x] >> 1;
      00086D                       1844 00231$:
                                   1845 ;	src/radio.c:302: for(x = 31; x >= 0; x--)
      00086D 1A               [12] 1846 	dec	r2
      00086E BA FF 01         [24] 1847 	cjne	r2,#0xFF,00476$
      000871 1B               [12] 1848 	dec	r3
      000872                       1849 00476$:
      000872 EB               [12] 1850 	mov	a,r3
      000873 30 E7 9A         [24] 1851 	jnb	acc.7,00230$
      000876                       1852 00113$:
                                   1853 ;	src/radio.c:310: payload_length = payload[5] >> 2;
      000876 C0 04            [24] 1854 	push	ar4
      000878 C0 05            [24] 1855 	push	ar5
      00087A 90r00r4B         [24] 1856 	mov	dptr,#(_handle_radio_request_payload_4_75 + 0x0005)
      00087D E0               [24] 1857 	movx	a,@dptr
      00087E 03               [12] 1858 	rr	a
      00087F 03               [12] 1859 	rr	a
      000880 54 3F            [12] 1860 	anl	a,#0x3F
      000882 FB               [12] 1861 	mov	r3,a
                                   1862 ;	src/radio.c:315: if(payload_length <= (pm_payload_length-9) + pm_prefix_length)
      000883 90r00r08         [24] 1863 	mov	dptr,#_pm_payload_length
      000886 E0               [24] 1864 	movx	a,@dptr
      000887 7A 00            [12] 1865 	mov	r2,#0x00
      000889 24 F7            [12] 1866 	add	a,#0xF7
      00088B F9               [12] 1867 	mov	r1,a
      00088C EA               [12] 1868 	mov	a,r2
      00088D 34 FF            [12] 1869 	addc	a,#0xFF
      00088F FA               [12] 1870 	mov	r2,a
      000890 90r00r01         [24] 1871 	mov	dptr,#_pm_prefix_length
      000893 E0               [24] 1872 	movx	a,@dptr
      000894 F8               [12] 1873 	mov	r0,a
      000895 A3               [24] 1874 	inc	dptr
      000896 E0               [24] 1875 	movx	a,@dptr
      000897 FD               [12] 1876 	mov	r5,a
      000898 E8               [12] 1877 	mov	a,r0
      000899 29               [12] 1878 	add	a,r1
      00089A F9               [12] 1879 	mov	r1,a
      00089B ED               [12] 1880 	mov	a,r5
      00089C 3A               [12] 1881 	addc	a,r2
      00089D FA               [12] 1882 	mov	r2,a
      00089E 8B*08            [24] 1883 	mov	_handle_radio_request_sloc1_1_0,r3
      0008A0 75*09 00         [24] 1884 	mov	(_handle_radio_request_sloc1_1_0 + 1),#0x00
      0008A3 C3               [12] 1885 	clr	c
      0008A4 E9               [12] 1886 	mov	a,r1
      0008A5 95*08            [12] 1887 	subb	a,_handle_radio_request_sloc1_1_0
      0008A7 EA               [12] 1888 	mov	a,r2
      0008A8 64 80            [12] 1889 	xrl	a,#0x80
      0008AA 85*09 F0         [24] 1890 	mov	b,(_handle_radio_request_sloc1_1_0 + 1)
      0008AD 63 F0 80         [24] 1891 	xrl	b,#0x80
      0008B0 95 F0            [12] 1892 	subb	a,b
      0008B2 D0 05            [24] 1893 	pop	ar5
      0008B4 D0 04            [24] 1894 	pop	ar4
      0008B6 50 03            [24] 1895 	jnc	00478$
      0008B8 02r0ArA1         [24] 1896 	ljmp	00239$
      0008BB                       1897 00478$:
                                   1898 ;	src/radio.c:318: crc_given = (payload[6 + payload_length] << 9) | ((payload[7 + payload_length]) << 1);
      0008BB C0 04            [24] 1899 	push	ar4
      0008BD C0 05            [24] 1900 	push	ar5
      0008BF 74 06            [12] 1901 	mov	a,#0x06
      0008C1 2B               [12] 1902 	add	a,r3
      0008C2 24r46            [12] 1903 	add	a,#_handle_radio_request_payload_4_75
      0008C4 F5 82            [12] 1904 	mov	dpl,a
      0008C6 E4               [12] 1905 	clr	a
      0008C7 34s00            [12] 1906 	addc	a,#(_handle_radio_request_payload_4_75 >> 8)
      0008C9 F5 83            [12] 1907 	mov	dph,a
      0008CB E0               [24] 1908 	movx	a,@dptr
      0008CC F9               [12] 1909 	mov	r1,a
      0008CD 29               [12] 1910 	add	a,r1
      0008CE FA               [12] 1911 	mov	r2,a
      0008CF 79 00            [12] 1912 	mov	r1,#0x00
      0008D1 74 07            [12] 1913 	mov	a,#0x07
      0008D3 2B               [12] 1914 	add	a,r3
      0008D4 24r46            [12] 1915 	add	a,#_handle_radio_request_payload_4_75
      0008D6 F5 82            [12] 1916 	mov	dpl,a
      0008D8 E4               [12] 1917 	clr	a
      0008D9 34s00            [12] 1918 	addc	a,#(_handle_radio_request_payload_4_75 >> 8)
      0008DB F5 83            [12] 1919 	mov	dph,a
      0008DD E0               [24] 1920 	movx	a,@dptr
      0008DE F8               [12] 1921 	mov	r0,a
      0008DF E4               [12] 1922 	clr	a
      0008E0 C8               [12] 1923 	xch	a,r0
      0008E1 25 E0            [12] 1924 	add	a,acc
      0008E3 C8               [12] 1925 	xch	a,r0
      0008E4 33               [12] 1926 	rlc	a
      0008E5 FD               [12] 1927 	mov	r5,a
      0008E6 E8               [12] 1928 	mov	a,r0
      0008E7 42 01            [12] 1929 	orl	ar1,a
      0008E9 ED               [12] 1930 	mov	a,r5
      0008EA 42 02            [12] 1931 	orl	ar2,a
                                   1932 ;	src/radio.c:319: crc_given = (crc_given << 8) | (crc_given >> 8);
      0008EC 8A*0B            [24] 1933 	mov	_handle_radio_request_sloc2_1_0,r2
      0008EE 89*0C            [24] 1934 	mov	(_handle_radio_request_sloc2_1_0 + 1),r1
      0008F0 90r00r44         [24] 1935 	mov	dptr,#_handle_radio_request_crc_given_4_75
      0008F3 E5*0B            [12] 1936 	mov	a,_handle_radio_request_sloc2_1_0
      0008F5 F0               [24] 1937 	movx	@dptr,a
      0008F6 E5*0C            [12] 1938 	mov	a,(_handle_radio_request_sloc2_1_0 + 1)
      0008F8 A3               [24] 1939 	inc	dptr
      0008F9 F0               [24] 1940 	movx	@dptr,a
                                   1941 ;	src/radio.c:320: if(payload[8 + payload_length] & 0x80) crc_given |= 0x100;
      0008FA 74 08            [12] 1942 	mov	a,#0x08
      0008FC 2B               [12] 1943 	add	a,r3
      0008FD 24r46            [12] 1944 	add	a,#_handle_radio_request_payload_4_75
      0008FF F5 82            [12] 1945 	mov	dpl,a
      000901 E4               [12] 1946 	clr	a
      000902 34s00            [12] 1947 	addc	a,#(_handle_radio_request_payload_4_75 >> 8)
      000904 F5 83            [12] 1948 	mov	dph,a
      000906 E0               [24] 1949 	movx	a,@dptr
      000907 D0 05            [24] 1950 	pop	ar5
      000909 D0 04            [24] 1951 	pop	ar4
      00090B 30 E7 0C         [24] 1952 	jnb	acc.7,00115$
      00090E 90r00r44         [24] 1953 	mov	dptr,#_handle_radio_request_crc_given_4_75
      000911 E5*0B            [12] 1954 	mov	a,_handle_radio_request_sloc2_1_0
      000913 F0               [24] 1955 	movx	@dptr,a
      000914 74 01            [12] 1956 	mov	a,#0x01
      000916 45*0C            [12] 1957 	orl	a,(_handle_radio_request_sloc2_1_0 + 1)
      000918 A3               [24] 1958 	inc	dptr
      000919 F0               [24] 1959 	movx	@dptr,a
      00091A                       1960 00115$:
                                   1961 ;	src/radio.c:323: crc = 0xFFFF;
      00091A 90r00r42         [24] 1962 	mov	dptr,#_handle_radio_request_crc_4_75
      00091D 74 FF            [12] 1963 	mov	a,#0xFF
      00091F F0               [24] 1964 	movx	@dptr,a
      000920 A3               [24] 1965 	inc	dptr
      000921 F0               [24] 1966 	movx	@dptr,a
                                   1967 ;	src/radio.c:324: for(x = 0; x < 6 + payload_length; x++) crc = crc_update(crc, payload[x], 8);
      000922 74 06            [12] 1968 	mov	a,#0x06
      000924 25*08            [12] 1969 	add	a,_handle_radio_request_sloc1_1_0
      000926 F9               [12] 1970 	mov	r1,a
      000927 E4               [12] 1971 	clr	a
      000928 35*09            [12] 1972 	addc	a,(_handle_radio_request_sloc1_1_0 + 1)
      00092A FA               [12] 1973 	mov	r2,a
      00092B E4               [12] 1974 	clr	a
      00092C F5*0B            [12] 1975 	mov	_handle_radio_request_sloc2_1_0,a
      00092E F5*0C            [12] 1976 	mov	(_handle_radio_request_sloc2_1_0 + 1),a
      000930                       1977 00233$:
      000930 C3               [12] 1978 	clr	c
      000931 E5*0B            [12] 1979 	mov	a,_handle_radio_request_sloc2_1_0
      000933 99               [12] 1980 	subb	a,r1
      000934 E5*0C            [12] 1981 	mov	a,(_handle_radio_request_sloc2_1_0 + 1)
      000936 64 80            [12] 1982 	xrl	a,#0x80
      000938 8A F0            [24] 1983 	mov	b,r2
      00093A 63 F0 80         [24] 1984 	xrl	b,#0x80
      00093D 95 F0            [12] 1985 	subb	a,b
      00093F 50 5A            [24] 1986 	jnc	00116$
      000941 C0 04            [24] 1987 	push	ar4
      000943 C0 05            [24] 1988 	push	ar5
      000945 90r00r42         [24] 1989 	mov	dptr,#_handle_radio_request_crc_4_75
      000948 E0               [24] 1990 	movx	a,@dptr
      000949 F8               [12] 1991 	mov	r0,a
      00094A A3               [24] 1992 	inc	dptr
      00094B E0               [24] 1993 	movx	a,@dptr
      00094C FD               [12] 1994 	mov	r5,a
      00094D E5*0B            [12] 1995 	mov	a,_handle_radio_request_sloc2_1_0
      00094F 24r46            [12] 1996 	add	a,#_handle_radio_request_payload_4_75
      000951 F5 82            [12] 1997 	mov	dpl,a
      000953 E5*0C            [12] 1998 	mov	a,(_handle_radio_request_sloc2_1_0 + 1)
      000955 34s00            [12] 1999 	addc	a,#(_handle_radio_request_payload_4_75 >> 8)
      000957 F5 83            [12] 2000 	mov	dph,a
      000959 E0               [24] 2001 	movx	a,@dptr
      00095A FC               [12] 2002 	mov	r4,a
      00095B 90r00r30         [24] 2003 	mov	dptr,#_crc_update_PARM_2
      00095E F0               [24] 2004 	movx	@dptr,a
      00095F 90r00r31         [24] 2005 	mov	dptr,#_crc_update_PARM_3
      000962 74 08            [12] 2006 	mov	a,#0x08
      000964 F0               [24] 2007 	movx	@dptr,a
      000965 88 82            [24] 2008 	mov	dpl,r0
      000967 8D 83            [24] 2009 	mov	dph,r5
      000969 C0 05            [24] 2010 	push	ar5
      00096B C0 04            [24] 2011 	push	ar4
      00096D C0 03            [24] 2012 	push	ar3
      00096F C0 02            [24] 2013 	push	ar2
      000971 C0 01            [24] 2014 	push	ar1
      000973 12r04r9B         [24] 2015 	lcall	_crc_update
      000976 E5 82            [12] 2016 	mov	a,dpl
      000978 85 83 F0         [24] 2017 	mov	b,dph
      00097B D0 01            [24] 2018 	pop	ar1
      00097D D0 02            [24] 2019 	pop	ar2
      00097F D0 03            [24] 2020 	pop	ar3
      000981 D0 04            [24] 2021 	pop	ar4
      000983 D0 05            [24] 2022 	pop	ar5
      000985 90r00r42         [24] 2023 	mov	dptr,#_handle_radio_request_crc_4_75
      000988 F0               [24] 2024 	movx	@dptr,a
      000989 E5 F0            [12] 2025 	mov	a,b
      00098B A3               [24] 2026 	inc	dptr
      00098C F0               [24] 2027 	movx	@dptr,a
      00098D 05*0B            [12] 2028 	inc	_handle_radio_request_sloc2_1_0
      00098F E4               [12] 2029 	clr	a
      000990 B5*0B 02         [24] 2030 	cjne	a,_handle_radio_request_sloc2_1_0,00481$
      000993 05*0C            [12] 2031 	inc	(_handle_radio_request_sloc2_1_0 + 1)
      000995                       2032 00481$:
      000995 D0 05            [24] 2033 	pop	ar5
      000997 D0 04            [24] 2034 	pop	ar4
      000999 80 95            [24] 2035 	sjmp	00233$
      00099B                       2036 00116$:
                                   2037 ;	src/radio.c:325: crc = crc_update(crc, payload[6 + payload_length] & 0x80, 1);
      00099B C0 04            [24] 2038 	push	ar4
      00099D C0 05            [24] 2039 	push	ar5
      00099F 90r00r42         [24] 2040 	mov	dptr,#_handle_radio_request_crc_4_75
      0009A2 E0               [24] 2041 	movx	a,@dptr
      0009A3 F9               [12] 2042 	mov	r1,a
      0009A4 A3               [24] 2043 	inc	dptr
      0009A5 E0               [24] 2044 	movx	a,@dptr
      0009A6 FA               [12] 2045 	mov	r2,a
      0009A7 74 06            [12] 2046 	mov	a,#0x06
      0009A9 2B               [12] 2047 	add	a,r3
      0009AA 24r46            [12] 2048 	add	a,#_handle_radio_request_payload_4_75
      0009AC F5 82            [12] 2049 	mov	dpl,a
      0009AE E4               [12] 2050 	clr	a
      0009AF 34s00            [12] 2051 	addc	a,#(_handle_radio_request_payload_4_75 >> 8)
      0009B1 F5 83            [12] 2052 	mov	dph,a
      0009B3 E0               [24] 2053 	movx	a,@dptr
      0009B4 F8               [12] 2054 	mov	r0,a
      0009B5 90r00r30         [24] 2055 	mov	dptr,#_crc_update_PARM_2
      0009B8 74 80            [12] 2056 	mov	a,#0x80
      0009BA 58               [12] 2057 	anl	a,r0
      0009BB F0               [24] 2058 	movx	@dptr,a
      0009BC 90r00r31         [24] 2059 	mov	dptr,#_crc_update_PARM_3
      0009BF 74 01            [12] 2060 	mov	a,#0x01
      0009C1 F0               [24] 2061 	movx	@dptr,a
      0009C2 89 82            [24] 2062 	mov	dpl,r1
      0009C4 8A 83            [24] 2063 	mov	dph,r2
      0009C6 C0 05            [24] 2064 	push	ar5
      0009C8 C0 04            [24] 2065 	push	ar4
      0009CA C0 03            [24] 2066 	push	ar3
      0009CC 12r04r9B         [24] 2067 	lcall	_crc_update
      0009CF A9 82            [24] 2068 	mov	r1,dpl
      0009D1 AA 83            [24] 2069 	mov	r2,dph
      0009D3 D0 03            [24] 2070 	pop	ar3
      0009D5 D0 04            [24] 2071 	pop	ar4
      0009D7 D0 05            [24] 2072 	pop	ar5
                                   2073 ;	src/radio.c:326: crc = (crc << 8) | (crc >> 8);
      0009D9 E9               [12] 2074 	mov	a,r1
      0009DA 8A 01            [24] 2075 	mov	ar1,r2
      0009DC FA               [12] 2076 	mov	r2,a
                                   2077 ;	src/radio.c:329: if(crc == crc_given)
      0009DD 90r00r44         [24] 2078 	mov	dptr,#_handle_radio_request_crc_given_4_75
      0009E0 E0               [24] 2079 	movx	a,@dptr
      0009E1 F8               [12] 2080 	mov	r0,a
      0009E2 A3               [24] 2081 	inc	dptr
      0009E3 E0               [24] 2082 	movx	a,@dptr
      0009E4 FD               [12] 2083 	mov	r5,a
      0009E5 E9               [12] 2084 	mov	a,r1
      0009E6 B5 00 06         [24] 2085 	cjne	a,ar0,00482$
      0009E9 EA               [12] 2086 	mov	a,r2
      0009EA B5 05 02         [24] 2087 	cjne	a,ar5,00482$
      0009ED 80 07            [24] 2088 	sjmp	00483$
      0009EF                       2089 00482$:
      0009EF D0 05            [24] 2090 	pop	ar5
      0009F1 D0 04            [24] 2091 	pop	ar4
      0009F3 02r0ArA1         [24] 2092 	ljmp	00239$
      0009F6                       2093 00483$:
      0009F6 D0 05            [24] 2094 	pop	ar5
      0009F8 D0 04            [24] 2095 	pop	ar4
                                   2096 ;	src/radio.c:332: memcpy(in1buf, payload, 5);
      0009FA 90r00r00         [24] 2097 	mov	dptr,#_memcpy_PARM_2
      0009FD 74r46            [12] 2098 	mov	a,#_handle_radio_request_payload_4_75
      0009FF F0               [24] 2099 	movx	@dptr,a
      000A00 74s00            [12] 2100 	mov	a,#(_handle_radio_request_payload_4_75 >> 8)
      000A02 A3               [24] 2101 	inc	dptr
      000A03 F0               [24] 2102 	movx	@dptr,a
      000A04 E4               [12] 2103 	clr	a
      000A05 A3               [24] 2104 	inc	dptr
      000A06 F0               [24] 2105 	movx	@dptr,a
      000A07 90r00r00         [24] 2106 	mov	dptr,#_memcpy_PARM_3
      000A0A 74 05            [12] 2107 	mov	a,#0x05
      000A0C F0               [24] 2108 	movx	@dptr,a
      000A0D E4               [12] 2109 	clr	a
      000A0E A3               [24] 2110 	inc	dptr
      000A0F F0               [24] 2111 	movx	@dptr,a
      000A10 90 C6 80         [24] 2112 	mov	dptr,#_in1buf
      000A13 75 F0 00         [24] 2113 	mov	b,#0x00
      000A16 C0 03            [24] 2114 	push	ar3
      000A18 12r00r00         [24] 2115 	lcall	_memcpy
      000A1B D0 03            [24] 2116 	pop	ar3
                                   2117 ;	src/radio.c:335: for(x = 0; x < payload_length + 3; x++)
      000A1D 74 03            [12] 2118 	mov	a,#0x03
      000A1F 25*08            [12] 2119 	add	a,_handle_radio_request_sloc1_1_0
      000A21 F9               [12] 2120 	mov	r1,a
      000A22 E4               [12] 2121 	clr	a
      000A23 35*09            [12] 2122 	addc	a,(_handle_radio_request_sloc1_1_0 + 1)
      000A25 FA               [12] 2123 	mov	r2,a
      000A26 E4               [12] 2124 	clr	a
      000A27 F5*0B            [12] 2125 	mov	_handle_radio_request_sloc2_1_0,a
      000A29 F5*0C            [12] 2126 	mov	(_handle_radio_request_sloc2_1_0 + 1),a
      000A2B                       2127 00236$:
      000A2B C3               [12] 2128 	clr	c
      000A2C E5*0B            [12] 2129 	mov	a,_handle_radio_request_sloc2_1_0
      000A2E 99               [12] 2130 	subb	a,r1
      000A2F E5*0C            [12] 2131 	mov	a,(_handle_radio_request_sloc2_1_0 + 1)
      000A31 64 80            [12] 2132 	xrl	a,#0x80
      000A33 8A F0            [24] 2133 	mov	b,r2
      000A35 63 F0 80         [24] 2134 	xrl	b,#0x80
      000A38 95 F0            [12] 2135 	subb	a,b
      000A3A 50 4B            [24] 2136 	jnc	00117$
                                   2137 ;	src/radio.c:336: in1buf[5+x] = ((payload[6 + x] << 1) & 0xFF) | (payload[7 + x] >> 7);
      000A3C C0 01            [24] 2138 	push	ar1
      000A3E C0 02            [24] 2139 	push	ar2
      000A40 A8*0B            [24] 2140 	mov	r0,_handle_radio_request_sloc2_1_0
      000A42 74 05            [12] 2141 	mov	a,#0x05
      000A44 28               [12] 2142 	add	a,r0
      000A45 24 80            [12] 2143 	add	a,#_in1buf
      000A47 F5*08            [12] 2144 	mov	_handle_radio_request_sloc1_1_0,a
      000A49 E4               [12] 2145 	clr	a
      000A4A 34 C6            [12] 2146 	addc	a,#(_in1buf >> 8)
      000A4C F5*09            [12] 2147 	mov	(_handle_radio_request_sloc1_1_0 + 1),a
      000A4E 74 06            [12] 2148 	mov	a,#0x06
      000A50 28               [12] 2149 	add	a,r0
      000A51 24r46            [12] 2150 	add	a,#_handle_radio_request_payload_4_75
      000A53 F5 82            [12] 2151 	mov	dpl,a
      000A55 E4               [12] 2152 	clr	a
      000A56 34s00            [12] 2153 	addc	a,#(_handle_radio_request_payload_4_75 >> 8)
      000A58 F5 83            [12] 2154 	mov	dph,a
      000A5A E0               [24] 2155 	movx	a,@dptr
      000A5B 25 E0            [12] 2156 	add	a,acc
      000A5D FA               [12] 2157 	mov	r2,a
      000A5E 74 07            [12] 2158 	mov	a,#0x07
      000A60 28               [12] 2159 	add	a,r0
      000A61 24r46            [12] 2160 	add	a,#_handle_radio_request_payload_4_75
      000A63 F5 82            [12] 2161 	mov	dpl,a
      000A65 E4               [12] 2162 	clr	a
      000A66 34s00            [12] 2163 	addc	a,#(_handle_radio_request_payload_4_75 >> 8)
      000A68 F5 83            [12] 2164 	mov	dph,a
      000A6A E0               [24] 2165 	movx	a,@dptr
      000A6B 23               [12] 2166 	rl	a
      000A6C 54 01            [12] 2167 	anl	a,#0x01
      000A6E F9               [12] 2168 	mov	r1,a
      000A6F 42 02            [12] 2169 	orl	ar2,a
      000A71 85*08 82         [24] 2170 	mov	dpl,_handle_radio_request_sloc1_1_0
      000A74 85*09 83         [24] 2171 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000A77 EA               [12] 2172 	mov	a,r2
      000A78 F0               [24] 2173 	movx	@dptr,a
                                   2174 ;	src/radio.c:335: for(x = 0; x < payload_length + 3; x++)
      000A79 05*0B            [12] 2175 	inc	_handle_radio_request_sloc2_1_0
      000A7B E4               [12] 2176 	clr	a
      000A7C B5*0B 02         [24] 2177 	cjne	a,_handle_radio_request_sloc2_1_0,00485$
      000A7F 05*0C            [12] 2178 	inc	(_handle_radio_request_sloc2_1_0 + 1)
      000A81                       2179 00485$:
      000A81 D0 02            [24] 2180 	pop	ar2
      000A83 D0 01            [24] 2181 	pop	ar1
      000A85 80 A4            [24] 2182 	sjmp	00236$
      000A87                       2183 00117$:
                                   2184 ;	src/radio.c:337: in1bc = 5 + payload_length;
      000A87 74 05            [12] 2185 	mov	a,#0x05
      000A89 2B               [12] 2186 	add	a,r3
      000A8A 90 C7 B7         [24] 2187 	mov	dptr,#0xC7B7
      000A8D F0               [24] 2188 	movx	@dptr,a
                                   2189 ;	src/radio.c:338: flush_rx();
      000A8E 90r00r22         [24] 2190 	mov	dptr,#_spi_write_PARM_2
      000A91 E4               [12] 2191 	clr	a
      000A92 F0               [24] 2192 	movx	@dptr,a
      000A93 A3               [24] 2193 	inc	dptr
      000A94 F0               [24] 2194 	movx	@dptr,a
      000A95 A3               [24] 2195 	inc	dptr
      000A96 F0               [24] 2196 	movx	@dptr,a
      000A97 90r00r25         [24] 2197 	mov	dptr,#_spi_write_PARM_3
      000A9A F0               [24] 2198 	movx	@dptr,a
      000A9B 75 82 E2         [24] 2199 	mov	dpl,#0xE2
                                   2200 ;	src/radio.c:339: return;
      000A9E 02r03r66         [24] 2201 	ljmp	_spi_write
      000AA1                       2202 00239$:
                                   2203 ;	src/radio.c:297: for(offset = 0; offset < 2; offset++)
      000AA1 0C               [12] 2204 	inc	r4
      000AA2 BC 00 01         [24] 2205 	cjne	r4,#0x00,00486$
      000AA5 0D               [12] 2206 	inc	r5
      000AA6                       2207 00486$:
      000AA6 C3               [12] 2208 	clr	c
      000AA7 EC               [12] 2209 	mov	a,r4
      000AA8 94 02            [12] 2210 	subb	a,#0x02
      000AAA ED               [12] 2211 	mov	a,r5
      000AAB 64 80            [12] 2212 	xrl	a,#0x80
      000AAD 94 80            [12] 2213 	subb	a,#0x80
      000AAF 50 03            [24] 2214 	jnc	00487$
      000AB1 02r08r06         [24] 2215 	ljmp	00238$
      000AB4                       2216 00487$:
      000AB4 02r0Br6A         [24] 2217 	ljmp	00133$
      000AB7                       2218 00127$:
                                   2219 ;	src/radio.c:346: else if(radio_mode == promiscuous_generic)
      000AB7 BE 02 02         [24] 2220 	cjne	r6,#0x02,00488$
      000ABA 80 03            [24] 2221 	sjmp	00489$
      000ABC                       2222 00488$:
      000ABC 02r0Br6A         [24] 2223 	ljmp	00133$
      000ABF                       2224 00489$:
                                   2225 ;	src/radio.c:352: for(x = 0; x < pm_prefix_length; x++) payload[pm_prefix_length - x - 1] = pm_prefix[x];
      000ABF 7D 00            [12] 2226 	mov	r5,#0x00
      000AC1 7E 00            [12] 2227 	mov	r6,#0x00
      000AC3                       2228 00241$:
      000AC3 90r00r01         [24] 2229 	mov	dptr,#_pm_prefix_length
      000AC6 E0               [24] 2230 	movx	a,@dptr
      000AC7 FB               [12] 2231 	mov	r3,a
      000AC8 A3               [24] 2232 	inc	dptr
      000AC9 E0               [24] 2233 	movx	a,@dptr
      000ACA FC               [12] 2234 	mov	r4,a
      000ACB C3               [12] 2235 	clr	c
      000ACC ED               [12] 2236 	mov	a,r5
      000ACD 9B               [12] 2237 	subb	a,r3
      000ACE EE               [12] 2238 	mov	a,r6
      000ACF 64 80            [12] 2239 	xrl	a,#0x80
      000AD1 8C F0            [24] 2240 	mov	b,r4
      000AD3 63 F0 80         [24] 2241 	xrl	b,#0x80
      000AD6 95 F0            [12] 2242 	subb	a,b
      000AD8 50 27            [24] 2243 	jnc	00123$
      000ADA 8B 02            [24] 2244 	mov	ar2,r3
      000ADC 8D 01            [24] 2245 	mov	ar1,r5
      000ADE EA               [12] 2246 	mov	a,r2
      000ADF C3               [12] 2247 	clr	c
      000AE0 99               [12] 2248 	subb	a,r1
      000AE1 14               [12] 2249 	dec	a
      000AE2 24r6B            [12] 2250 	add	a,#_handle_radio_request_payload_4_81
      000AE4 F9               [12] 2251 	mov	r1,a
      000AE5 E4               [12] 2252 	clr	a
      000AE6 34s00            [12] 2253 	addc	a,#(_handle_radio_request_payload_4_81 >> 8)
      000AE8 FA               [12] 2254 	mov	r2,a
      000AE9 ED               [12] 2255 	mov	a,r5
      000AEA 24r03            [12] 2256 	add	a,#_pm_prefix
      000AEC F5 82            [12] 2257 	mov	dpl,a
      000AEE EE               [12] 2258 	mov	a,r6
      000AEF 34s00            [12] 2259 	addc	a,#(_pm_prefix >> 8)
      000AF1 F5 83            [12] 2260 	mov	dph,a
      000AF3 E0               [24] 2261 	movx	a,@dptr
      000AF4 F8               [12] 2262 	mov	r0,a
      000AF5 89 82            [24] 2263 	mov	dpl,r1
      000AF7 8A 83            [24] 2264 	mov	dph,r2
      000AF9 F0               [24] 2265 	movx	@dptr,a
      000AFA 0D               [12] 2266 	inc	r5
      000AFB BD 00 C5         [24] 2267 	cjne	r5,#0x00,00241$
      000AFE 0E               [12] 2268 	inc	r6
      000AFF 80 C2            [24] 2269 	sjmp	00241$
      000B01                       2270 00123$:
                                   2271 ;	src/radio.c:353: read_register(R_RX_PAYLOAD, &payload[pm_prefix_length], pm_payload_length);
      000B01 EB               [12] 2272 	mov	a,r3
      000B02 24r6B            [12] 2273 	add	a,#_handle_radio_request_payload_4_81
      000B04 FB               [12] 2274 	mov	r3,a
      000B05 EC               [12] 2275 	mov	a,r4
      000B06 34s00            [12] 2276 	addc	a,#(_handle_radio_request_payload_4_81 >> 8)
      000B08 FC               [12] 2277 	mov	r4,a
      000B09 7E 00            [12] 2278 	mov	r6,#0x00
      000B0B 90r00r08         [24] 2279 	mov	dptr,#_pm_payload_length
      000B0E E0               [24] 2280 	movx	a,@dptr
      000B0F FD               [12] 2281 	mov	r5,a
      000B10 90r00r27         [24] 2282 	mov	dptr,#_spi_read_PARM_2
      000B13 EB               [12] 2283 	mov	a,r3
      000B14 F0               [24] 2284 	movx	@dptr,a
      000B15 EC               [12] 2285 	mov	a,r4
      000B16 A3               [24] 2286 	inc	dptr
      000B17 F0               [24] 2287 	movx	@dptr,a
      000B18 EE               [12] 2288 	mov	a,r6
      000B19 A3               [24] 2289 	inc	dptr
      000B1A F0               [24] 2290 	movx	@dptr,a
      000B1B 90r00r2A         [24] 2291 	mov	dptr,#_spi_read_PARM_3
      000B1E ED               [12] 2292 	mov	a,r5
      000B1F F0               [24] 2293 	movx	@dptr,a
      000B20 75 82 61         [24] 2294 	mov	dpl,#0x61
      000B23 12r03rDA         [24] 2295 	lcall	_spi_read
                                   2296 ;	src/radio.c:356: memcpy(in1buf, payload, pm_prefix_length + pm_payload_length);
      000B26 90r00r08         [24] 2297 	mov	dptr,#_pm_payload_length
      000B29 E0               [24] 2298 	movx	a,@dptr
      000B2A FE               [12] 2299 	mov	r6,a
      000B2B 7D 00            [12] 2300 	mov	r5,#0x00
      000B2D 90r00r01         [24] 2301 	mov	dptr,#_pm_prefix_length
      000B30 E0               [24] 2302 	movx	a,@dptr
      000B31 FB               [12] 2303 	mov	r3,a
      000B32 A3               [24] 2304 	inc	dptr
      000B33 E0               [24] 2305 	movx	a,@dptr
      000B34 FC               [12] 2306 	mov	r4,a
      000B35 EE               [12] 2307 	mov	a,r6
      000B36 2B               [12] 2308 	add	a,r3
      000B37 FE               [12] 2309 	mov	r6,a
      000B38 ED               [12] 2310 	mov	a,r5
      000B39 3C               [12] 2311 	addc	a,r4
      000B3A FD               [12] 2312 	mov	r5,a
      000B3B 90r00r00         [24] 2313 	mov	dptr,#_memcpy_PARM_2
      000B3E 74r6B            [12] 2314 	mov	a,#_handle_radio_request_payload_4_81
      000B40 F0               [24] 2315 	movx	@dptr,a
      000B41 74s00            [12] 2316 	mov	a,#(_handle_radio_request_payload_4_81 >> 8)
      000B43 A3               [24] 2317 	inc	dptr
      000B44 F0               [24] 2318 	movx	@dptr,a
      000B45 E4               [12] 2319 	clr	a
      000B46 A3               [24] 2320 	inc	dptr
      000B47 F0               [24] 2321 	movx	@dptr,a
      000B48 90r00r00         [24] 2322 	mov	dptr,#_memcpy_PARM_3
      000B4B EE               [12] 2323 	mov	a,r6
      000B4C F0               [24] 2324 	movx	@dptr,a
      000B4D ED               [12] 2325 	mov	a,r5
      000B4E A3               [24] 2326 	inc	dptr
      000B4F F0               [24] 2327 	movx	@dptr,a
      000B50 90 C6 80         [24] 2328 	mov	dptr,#_in1buf
      000B53 75 F0 00         [24] 2329 	mov	b,#0x00
      000B56 12r00r00         [24] 2330 	lcall	_memcpy
                                   2331 ;	src/radio.c:357: in1bc = pm_prefix_length + pm_payload_length;
      000B59 90r00r01         [24] 2332 	mov	dptr,#_pm_prefix_length
      000B5C E0               [24] 2333 	movx	a,@dptr
      000B5D FD               [12] 2334 	mov	r5,a
      000B5E A3               [24] 2335 	inc	dptr
      000B5F E0               [24] 2336 	movx	a,@dptr
      000B60 90r00r08         [24] 2337 	mov	dptr,#_pm_payload_length
      000B63 E0               [24] 2338 	movx	a,@dptr
      000B64 2D               [12] 2339 	add	a,r5
      000B65 90 C7 B7         [24] 2340 	mov	dptr,#0xC7B7
      000B68 F0               [24] 2341 	movx	@dptr,a
                                   2342 ;	src/radio.c:359: return;
      000B69 22               [24] 2343 	ret
      000B6A                       2344 00133$:
                                   2345 ;	src/radio.c:364: in1bc = 1;
      000B6A 90 C7 B7         [24] 2346 	mov	dptr,#0xC7B7
      000B6D 74 01            [12] 2347 	mov	a,#0x01
      000B6F F0               [24] 2348 	movx	@dptr,a
                                   2349 ;	src/radio.c:365: in1buf[0] = 0xFF;
      000B70 90 C6 80         [24] 2350 	mov	dptr,#_in1buf
      000B73 74 FF            [12] 2351 	mov	a,#0xFF
      000B75 F0               [24] 2352 	movx	@dptr,a
                                   2353 ;	src/radio.c:366: return;
      000B76 22               [24] 2354 	ret
      000B77                       2355 00189$:
                                   2356 ;	src/radio.c:370: else if(request == ENTER_SNIFFER_MODE)
      000B77 BF 05 02         [24] 2357 	cjne	r7,#0x05,00492$
      000B7A 80 03            [24] 2358 	sjmp	00493$
      000B7C                       2359 00492$:
      000B7C 02r0Cr33         [24] 2360 	ljmp	00186$
      000B7F                       2361 00493$:
                                   2362 ;	src/radio.c:372: radio_mode = sniffer;
      000B7F 90r00r00         [24] 2363 	mov	dptr,#_radio_mode
      000B82 E4               [12] 2364 	clr	a
      000B83 F0               [24] 2365 	movx	@dptr,a
                                   2366 ;	src/radio.c:375: if(data[0] > 5) data[0] = 5;
      000B84 90r00r34         [24] 2367 	mov	dptr,#_handle_radio_request_PARM_2
      000B87 E0               [24] 2368 	movx	a,@dptr
      000B88 FC               [12] 2369 	mov	r4,a
      000B89 A3               [24] 2370 	inc	dptr
      000B8A E0               [24] 2371 	movx	a,@dptr
      000B8B FD               [12] 2372 	mov	r5,a
      000B8C A3               [24] 2373 	inc	dptr
      000B8D E0               [24] 2374 	movx	a,@dptr
      000B8E FE               [12] 2375 	mov	r6,a
      000B8F 8C 82            [24] 2376 	mov	dpl,r4
      000B91 8D 83            [24] 2377 	mov	dph,r5
      000B93 8E F0            [24] 2378 	mov	b,r6
      000B95 12r00r00         [24] 2379 	lcall	__gptrget
      000B98 FB               [12] 2380 	mov  r3,a
      000B99 24 FA            [12] 2381 	add	a,#0xff - 0x05
      000B9B 50 0B            [24] 2382 	jnc	00135$
      000B9D 8C 82            [24] 2383 	mov	dpl,r4
      000B9F 8D 83            [24] 2384 	mov	dph,r5
      000BA1 8E F0            [24] 2385 	mov	b,r6
      000BA3 74 05            [12] 2386 	mov	a,#0x05
      000BA5 12r00r00         [24] 2387 	lcall	__gptrput
      000BA8                       2388 00135$:
                                   2389 ;	src/radio.c:376: if(data[0] < 2) data[0] = 2;
      000BA8 8C 82            [24] 2390 	mov	dpl,r4
      000BAA 8D 83            [24] 2391 	mov	dph,r5
      000BAC 8E F0            [24] 2392 	mov	b,r6
      000BAE 12r00r00         [24] 2393 	lcall	__gptrget
      000BB1 FB               [12] 2394 	mov	r3,a
      000BB2 BB 02 00         [24] 2395 	cjne	r3,#0x02,00495$
      000BB5                       2396 00495$:
      000BB5 50 0B            [24] 2397 	jnc	00137$
      000BB7 8C 82            [24] 2398 	mov	dpl,r4
      000BB9 8D 83            [24] 2399 	mov	dph,r5
      000BBB 8E F0            [24] 2400 	mov	b,r6
      000BBD 74 02            [12] 2401 	mov	a,#0x02
      000BBF 12r00r00         [24] 2402 	lcall	__gptrput
      000BC2                       2403 00137$:
                                   2404 ;	src/radio.c:379: rfce = 0;
      000BC2 C2 90            [12] 2405 	clr	_rfce
                                   2406 ;	src/radio.c:382: configure_address(&data[1], data[0]);
      000BC4 74 01            [12] 2407 	mov	a,#0x01
      000BC6 2C               [12] 2408 	add	a,r4
      000BC7 F9               [12] 2409 	mov	r1,a
      000BC8 E4               [12] 2410 	clr	a
      000BC9 3D               [12] 2411 	addc	a,r5
      000BCA FA               [12] 2412 	mov	r2,a
      000BCB 8E 03            [24] 2413 	mov	ar3,r6
      000BCD 8C 82            [24] 2414 	mov	dpl,r4
      000BCF 8D 83            [24] 2415 	mov	dph,r5
      000BD1 8E F0            [24] 2416 	mov	b,r6
      000BD3 12r00r00         [24] 2417 	lcall	__gptrget
      000BD6 90r00r17         [24] 2418 	mov	dptr,#_configure_address_PARM_2
      000BD9 F0               [24] 2419 	movx	@dptr,a
      000BDA 89 82            [24] 2420 	mov	dpl,r1
      000BDC 8A 83            [24] 2421 	mov	dph,r2
      000BDE 8B F0            [24] 2422 	mov	b,r3
      000BE0 12r02r83         [24] 2423 	lcall	_configure_address
                                   2424 ;	src/radio.c:385: configure_mac(EN_DPL | EN_ACK_PAY, DPL_P0, ENAA_NONE);
      000BE3 90r00r1B         [24] 2425 	mov	dptr,#_configure_mac_PARM_2
      000BE6 74 01            [12] 2426 	mov	a,#0x01
      000BE8 F0               [24] 2427 	movx	@dptr,a
      000BE9 90r00r1C         [24] 2428 	mov	dptr,#_configure_mac_PARM_3
      000BEC E4               [12] 2429 	clr	a
      000BED F0               [24] 2430 	movx	@dptr,a
      000BEE 75 82 06         [24] 2431 	mov	dpl,#0x06
      000BF1 12r02rFA         [24] 2432 	lcall	_configure_mac
                                   2433 ;	src/radio.c:388: configure_phy(EN_CRC | CRC0 | PRIM_RX | PWR_UP, RATE_2M, 0);
      000BF4 90r00r1E         [24] 2434 	mov	dptr,#_configure_phy_PARM_2
      000BF7 74 08            [12] 2435 	mov	a,#0x08
      000BF9 F0               [24] 2436 	movx	@dptr,a
      000BFA 90r00r1F         [24] 2437 	mov	dptr,#_configure_phy_PARM_3
      000BFD E4               [12] 2438 	clr	a
      000BFE F0               [24] 2439 	movx	@dptr,a
      000BFF 75 82 0F         [24] 2440 	mov	dpl,#0x0F
      000C02 12r03r27         [24] 2441 	lcall	_configure_phy
                                   2442 ;	src/radio.c:391: rfce = 1;
      000C05 D2 90            [12] 2443 	setb	_rfce
                                   2444 ;	src/radio.c:394: flush_rx();
      000C07 90r00r22         [24] 2445 	mov	dptr,#_spi_write_PARM_2
      000C0A E4               [12] 2446 	clr	a
      000C0B F0               [24] 2447 	movx	@dptr,a
      000C0C A3               [24] 2448 	inc	dptr
      000C0D F0               [24] 2449 	movx	@dptr,a
      000C0E A3               [24] 2450 	inc	dptr
      000C0F F0               [24] 2451 	movx	@dptr,a
      000C10 90r00r25         [24] 2452 	mov	dptr,#_spi_write_PARM_3
      000C13 F0               [24] 2453 	movx	@dptr,a
      000C14 75 82 E2         [24] 2454 	mov	dpl,#0xE2
      000C17 12r03r66         [24] 2455 	lcall	_spi_write
                                   2456 ;	src/radio.c:395: flush_tx();
      000C1A 90r00r22         [24] 2457 	mov	dptr,#_spi_write_PARM_2
      000C1D E4               [12] 2458 	clr	a
      000C1E F0               [24] 2459 	movx	@dptr,a
      000C1F A3               [24] 2460 	inc	dptr
      000C20 F0               [24] 2461 	movx	@dptr,a
      000C21 A3               [24] 2462 	inc	dptr
      000C22 F0               [24] 2463 	movx	@dptr,a
      000C23 90r00r25         [24] 2464 	mov	dptr,#_spi_write_PARM_3
      000C26 F0               [24] 2465 	movx	@dptr,a
      000C27 75 82 E1         [24] 2466 	mov	dpl,#0xE1
      000C2A 12r03r66         [24] 2467 	lcall	_spi_write
                                   2468 ;	src/radio.c:396: in1bc = 0;
      000C2D 90 C7 B7         [24] 2469 	mov	dptr,#0xC7B7
      000C30 E4               [12] 2470 	clr	a
      000C31 F0               [24] 2471 	movx	@dptr,a
      000C32 22               [24] 2472 	ret
      000C33                       2473 00186$:
                                   2474 ;	src/radio.c:400: else if(request == TRANSMIT_ACK_PAYLOAD)
      000C33 BF 08 02         [24] 2475 	cjne	r7,#0x08,00497$
      000C36 80 03            [24] 2476 	sjmp	00498$
      000C38                       2477 00497$:
      000C38 02r0Dr62         [24] 2478 	ljmp	00183$
      000C3B                       2479 00498$:
                                   2480 ;	src/radio.c:406: if(data[0] > 32) data[0] = 32;
      000C3B 90r00r34         [24] 2481 	mov	dptr,#_handle_radio_request_PARM_2
      000C3E E0               [24] 2482 	movx	a,@dptr
      000C3F FC               [12] 2483 	mov	r4,a
      000C40 A3               [24] 2484 	inc	dptr
      000C41 E0               [24] 2485 	movx	a,@dptr
      000C42 FD               [12] 2486 	mov	r5,a
      000C43 A3               [24] 2487 	inc	dptr
      000C44 E0               [24] 2488 	movx	a,@dptr
      000C45 FE               [12] 2489 	mov	r6,a
      000C46 8C 82            [24] 2490 	mov	dpl,r4
      000C48 8D 83            [24] 2491 	mov	dph,r5
      000C4A 8E F0            [24] 2492 	mov	b,r6
      000C4C 12r00r00         [24] 2493 	lcall	__gptrget
      000C4F FB               [12] 2494 	mov  r3,a
      000C50 24 DF            [12] 2495 	add	a,#0xff - 0x20
      000C52 50 0B            [24] 2496 	jnc	00139$
      000C54 8C 82            [24] 2497 	mov	dpl,r4
      000C56 8D 83            [24] 2498 	mov	dph,r5
      000C58 8E F0            [24] 2499 	mov	b,r6
      000C5A 74 20            [12] 2500 	mov	a,#0x20
      000C5C 12r00r00         [24] 2501 	lcall	__gptrput
      000C5F                       2502 00139$:
                                   2503 ;	src/radio.c:407: if(data[0] < 1) data[0] = 1;
      000C5F 8C 82            [24] 2504 	mov	dpl,r4
      000C61 8D 83            [24] 2505 	mov	dph,r5
      000C63 8E F0            [24] 2506 	mov	b,r6
      000C65 12r00r00         [24] 2507 	lcall	__gptrget
      000C68 FB               [12] 2508 	mov	r3,a
      000C69 BB 01 00         [24] 2509 	cjne	r3,#0x01,00500$
      000C6C                       2510 00500$:
      000C6C 50 0B            [24] 2511 	jnc	00141$
      000C6E 8C 82            [24] 2512 	mov	dpl,r4
      000C70 8D 83            [24] 2513 	mov	dph,r5
      000C72 8E F0            [24] 2514 	mov	b,r6
      000C74 74 01            [12] 2515 	mov	a,#0x01
      000C76 12r00r00         [24] 2516 	lcall	__gptrput
      000C79                       2517 00141$:
                                   2518 ;	src/radio.c:410: rfce = 0;
      000C79 C2 90            [12] 2519 	clr	_rfce
                                   2520 ;	src/radio.c:413: flush_tx();
      000C7B 90r00r22         [24] 2521 	mov	dptr,#_spi_write_PARM_2
      000C7E E4               [12] 2522 	clr	a
      000C7F F0               [24] 2523 	movx	@dptr,a
      000C80 A3               [24] 2524 	inc	dptr
      000C81 F0               [24] 2525 	movx	@dptr,a
      000C82 A3               [24] 2526 	inc	dptr
      000C83 F0               [24] 2527 	movx	@dptr,a
      000C84 90r00r25         [24] 2528 	mov	dptr,#_spi_write_PARM_3
      000C87 F0               [24] 2529 	movx	@dptr,a
      000C88 75 82 E1         [24] 2530 	mov	dpl,#0xE1
      000C8B C0 06            [24] 2531 	push	ar6
      000C8D C0 05            [24] 2532 	push	ar5
      000C8F C0 04            [24] 2533 	push	ar4
      000C91 12r03r66         [24] 2534 	lcall	_spi_write
      000C94 D0 04            [24] 2535 	pop	ar4
      000C96 D0 05            [24] 2536 	pop	ar5
      000C98 D0 06            [24] 2537 	pop	ar6
                                   2538 ;	src/radio.c:414: flush_rx();
      000C9A 90r00r22         [24] 2539 	mov	dptr,#_spi_write_PARM_2
      000C9D E4               [12] 2540 	clr	a
      000C9E F0               [24] 2541 	movx	@dptr,a
      000C9F A3               [24] 2542 	inc	dptr
      000CA0 F0               [24] 2543 	movx	@dptr,a
      000CA1 A3               [24] 2544 	inc	dptr
      000CA2 F0               [24] 2545 	movx	@dptr,a
      000CA3 90r00r25         [24] 2546 	mov	dptr,#_spi_write_PARM_3
      000CA6 F0               [24] 2547 	movx	@dptr,a
      000CA7 75 82 E2         [24] 2548 	mov	dpl,#0xE2
      000CAA C0 06            [24] 2549 	push	ar6
      000CAC C0 05            [24] 2550 	push	ar5
      000CAE C0 04            [24] 2551 	push	ar4
      000CB0 12r03r66         [24] 2552 	lcall	_spi_write
                                   2553 ;	src/radio.c:417: write_register_byte(STATUS, MAX_RT | TX_DS | RX_DR);
      000CB3 90r00r2C         [24] 2554 	mov	dptr,#_write_register_byte_PARM_2
      000CB6 74 70            [12] 2555 	mov	a,#0x70
      000CB8 F0               [24] 2556 	movx	@dptr,a
      000CB9 75 82 07         [24] 2557 	mov	dpl,#0x07
      000CBC 12r04r53         [24] 2558 	lcall	_write_register_byte
                                   2559 ;	src/radio.c:420: write_register_byte(EN_AA, ENAA_P0);
      000CBF 90r00r2C         [24] 2560 	mov	dptr,#_write_register_byte_PARM_2
      000CC2 74 01            [12] 2561 	mov	a,#0x01
      000CC4 F0               [24] 2562 	movx	@dptr,a
      000CC5 75 82 01         [24] 2563 	mov	dpl,#0x01
      000CC8 12r04r53         [24] 2564 	lcall	_write_register_byte
                                   2565 ;	src/radio.c:421: write_register_byte(FEATURE, EN_DPL | EN_ACK_PAY);
      000CCB 90r00r2C         [24] 2566 	mov	dptr,#_write_register_byte_PARM_2
      000CCE 74 06            [12] 2567 	mov	a,#0x06
      000CD0 F0               [24] 2568 	movx	@dptr,a
      000CD1 75 82 1D         [24] 2569 	mov	dpl,#0x1D
      000CD4 12r04r53         [24] 2570 	lcall	_write_register_byte
      000CD7 D0 04            [24] 2571 	pop	ar4
      000CD9 D0 05            [24] 2572 	pop	ar5
      000CDB D0 06            [24] 2573 	pop	ar6
                                   2574 ;	src/radio.c:424: spi_write(W_ACK_PAYLOAD, &data[1], data[0]);
      000CDD 74 01            [12] 2575 	mov	a,#0x01
      000CDF 2C               [12] 2576 	add	a,r4
      000CE0 F9               [12] 2577 	mov	r1,a
      000CE1 E4               [12] 2578 	clr	a
      000CE2 3D               [12] 2579 	addc	a,r5
      000CE3 FA               [12] 2580 	mov	r2,a
      000CE4 8E 03            [24] 2581 	mov	ar3,r6
      000CE6 8C 82            [24] 2582 	mov	dpl,r4
      000CE8 8D 83            [24] 2583 	mov	dph,r5
      000CEA 8E F0            [24] 2584 	mov	b,r6
      000CEC 12r00r00         [24] 2585 	lcall	__gptrget
      000CEF FC               [12] 2586 	mov	r4,a
      000CF0 90r00r22         [24] 2587 	mov	dptr,#_spi_write_PARM_2
      000CF3 E9               [12] 2588 	mov	a,r1
      000CF4 F0               [24] 2589 	movx	@dptr,a
      000CF5 EA               [12] 2590 	mov	a,r2
      000CF6 A3               [24] 2591 	inc	dptr
      000CF7 F0               [24] 2592 	movx	@dptr,a
      000CF8 EB               [12] 2593 	mov	a,r3
      000CF9 A3               [24] 2594 	inc	dptr
      000CFA F0               [24] 2595 	movx	@dptr,a
      000CFB 90r00r25         [24] 2596 	mov	dptr,#_spi_write_PARM_3
      000CFE EC               [12] 2597 	mov	a,r4
      000CFF F0               [24] 2598 	movx	@dptr,a
      000D00 75 82 A8         [24] 2599 	mov	dpl,#0xA8
      000D03 12r03r66         [24] 2600 	lcall	_spi_write
                                   2601 ;	src/radio.c:427: rfce = 1;
      000D06 D2 90            [12] 2602 	setb	_rfce
                                   2603 ;	src/radio.c:431: in1buf[0] = 0;
      000D08 90 C6 80         [24] 2604 	mov	dptr,#_in1buf
      000D0B E4               [12] 2605 	clr	a
      000D0C F0               [24] 2606 	movx	@dptr,a
                                   2607 ;	src/radio.c:432: while(elapsed < 500)
      000D0D 7D 00            [12] 2608 	mov	r5,#0x00
      000D0F 7E 00            [12] 2609 	mov	r6,#0x00
      000D11                       2610 00144$:
      000D11 C3               [12] 2611 	clr	c
      000D12 ED               [12] 2612 	mov	a,r5
      000D13 94 F4            [12] 2613 	subb	a,#0xF4
      000D15 EE               [12] 2614 	mov	a,r6
      000D16 94 01            [12] 2615 	subb	a,#0x01
      000D18 50 36            [24] 2616 	jnc	00146$
                                   2617 ;	src/radio.c:434: status = read_register_byte(STATUS);
      000D1A 75 82 07         [24] 2618 	mov	dpl,#0x07
      000D1D C0 06            [24] 2619 	push	ar6
      000D1F C0 05            [24] 2620 	push	ar5
      000D21 12r04r75         [24] 2621 	lcall	_read_register_byte
      000D24 E5 82            [12] 2622 	mov	a,dpl
      000D26 D0 05            [24] 2623 	pop	ar5
      000D28 D0 06            [24] 2624 	pop	ar6
                                   2625 ;	src/radio.c:435: if((status & RX_DR) == RX_DR)
      000D2A 54 40            [12] 2626 	anl	a,#0x40
      000D2C FC               [12] 2627 	mov	r4,a
      000D2D BC 40 08         [24] 2628 	cjne	r4,#0x40,00285$
                                   2629 ;	src/radio.c:437: in1buf[0] = 1;
      000D30 90 C6 80         [24] 2630 	mov	dptr,#_in1buf
      000D33 74 01            [12] 2631 	mov	a,#0x01
      000D35 F0               [24] 2632 	movx	@dptr,a
                                   2633 ;	src/radio.c:438: break;
                                   2634 ;	src/nRF24LU1P.h:35: inline void delay_us(uint16_t us) { do nop_us(); while(--us); }
      000D36 80 18            [24] 2635 	sjmp	00146$
      000D38                       2636 00285$:
      000D38 7B E8            [12] 2637 	mov	r3,#0xE8
      000D3A 7C 03            [12] 2638 	mov	r4,#0x03
      000D3C                       2639 00212$:
      000D3C 00               [12] 2640 	nop 
      000D3D 00               [12] 2641 	nop 
      000D3E 00               [12] 2642 	nop 
      000D3F 00               [12] 2643 	nop 
      000D40 1B               [12] 2644 	dec	r3
      000D41 BB FF 01         [24] 2645 	cjne	r3,#0xFF,00505$
      000D44 1C               [12] 2646 	dec	r4
      000D45                       2647 00505$:
      000D45 EB               [12] 2648 	mov	a,r3
      000D46 4C               [12] 2649 	orl	a,r4
      000D47 70 F3            [24] 2650 	jnz	00212$
                                   2651 ;	src/radio.c:442: elapsed++;
      000D49 0D               [12] 2652 	inc	r5
      000D4A BD 00 C4         [24] 2653 	cjne	r5,#0x00,00144$
      000D4D 0E               [12] 2654 	inc	r6
      000D4E 80 C1            [24] 2655 	sjmp	00144$
      000D50                       2656 00146$:
                                   2657 ;	src/radio.c:446: write_register_byte(EN_AA, ENAA_NONE);
      000D50 90r00r2C         [24] 2658 	mov	dptr,#_write_register_byte_PARM_2
      000D53 E4               [12] 2659 	clr	a
      000D54 F0               [24] 2660 	movx	@dptr,a
      000D55 75 82 01         [24] 2661 	mov	dpl,#0x01
      000D58 12r04r53         [24] 2662 	lcall	_write_register_byte
                                   2663 ;	src/radio.c:448: in1bc = 1;
      000D5B 90 C7 B7         [24] 2664 	mov	dptr,#0xC7B7
      000D5E 74 01            [12] 2665 	mov	a,#0x01
      000D60 F0               [24] 2666 	movx	@dptr,a
      000D61 22               [24] 2667 	ret
      000D62                       2668 00183$:
                                   2669 ;	src/radio.c:452: else if(request == TRANSMIT_PAYLOAD)
      000D62 BF 04 02         [24] 2670 	cjne	r7,#0x04,00508$
      000D65 80 03            [24] 2671 	sjmp	00509$
      000D67                       2672 00508$:
      000D67 02r0ErEE         [24] 2673 	ljmp	00180$
      000D6A                       2674 00509$:
                                   2675 ;	src/radio.c:455: if(data[0] > 32) data[0] = 32;
      000D6A 90r00r34         [24] 2676 	mov	dptr,#_handle_radio_request_PARM_2
      000D6D E0               [24] 2677 	movx	a,@dptr
      000D6E FC               [12] 2678 	mov	r4,a
      000D6F A3               [24] 2679 	inc	dptr
      000D70 E0               [24] 2680 	movx	a,@dptr
      000D71 FD               [12] 2681 	mov	r5,a
      000D72 A3               [24] 2682 	inc	dptr
      000D73 E0               [24] 2683 	movx	a,@dptr
      000D74 FE               [12] 2684 	mov	r6,a
      000D75 8C 82            [24] 2685 	mov	dpl,r4
      000D77 8D 83            [24] 2686 	mov	dph,r5
      000D79 8E F0            [24] 2687 	mov	b,r6
      000D7B 12r00r00         [24] 2688 	lcall	__gptrget
      000D7E FB               [12] 2689 	mov  r3,a
      000D7F 24 DF            [12] 2690 	add	a,#0xff - 0x20
      000D81 50 0B            [24] 2691 	jnc	00148$
      000D83 8C 82            [24] 2692 	mov	dpl,r4
      000D85 8D 83            [24] 2693 	mov	dph,r5
      000D87 8E F0            [24] 2694 	mov	b,r6
      000D89 74 20            [12] 2695 	mov	a,#0x20
      000D8B 12r00r00         [24] 2696 	lcall	__gptrput
      000D8E                       2697 00148$:
                                   2698 ;	src/radio.c:456: if(data[0] < 1) data[0] = 1;
      000D8E 8C 82            [24] 2699 	mov	dpl,r4
      000D90 8D 83            [24] 2700 	mov	dph,r5
      000D92 8E F0            [24] 2701 	mov	b,r6
      000D94 12r00r00         [24] 2702 	lcall	__gptrget
      000D97 FB               [12] 2703 	mov	r3,a
      000D98 BB 01 00         [24] 2704 	cjne	r3,#0x01,00511$
      000D9B                       2705 00511$:
      000D9B 50 0B            [24] 2706 	jnc	00150$
      000D9D 8C 82            [24] 2707 	mov	dpl,r4
      000D9F 8D 83            [24] 2708 	mov	dph,r5
      000DA1 8E F0            [24] 2709 	mov	b,r6
      000DA3 74 01            [12] 2710 	mov	a,#0x01
      000DA5 12r00r00         [24] 2711 	lcall	__gptrput
      000DA8                       2712 00150$:
                                   2713 ;	src/radio.c:459: rfce = 0;
      000DA8 C2 90            [12] 2714 	clr	_rfce
                                   2715 ;	src/radio.c:463: write_register_byte(SETUP_RETR, (1 << data[1]) | data[2]);
      000DAA 74 01            [12] 2716 	mov	a,#0x01
      000DAC 2C               [12] 2717 	add	a,r4
      000DAD F9               [12] 2718 	mov	r1,a
      000DAE E4               [12] 2719 	clr	a
      000DAF 3D               [12] 2720 	addc	a,r5
      000DB0 FA               [12] 2721 	mov	r2,a
      000DB1 8E 03            [24] 2722 	mov	ar3,r6
      000DB3 89 82            [24] 2723 	mov	dpl,r1
      000DB5 8A 83            [24] 2724 	mov	dph,r2
      000DB7 8B F0            [24] 2725 	mov	b,r3
      000DB9 12r00r00         [24] 2726 	lcall	__gptrget
      000DBC F9               [12] 2727 	mov	r1,a
      000DBD 89 F0            [24] 2728 	mov	b,r1
      000DBF 05 F0            [12] 2729 	inc	b
      000DC1 74 01            [12] 2730 	mov	a,#0x01
      000DC3 80 02            [24] 2731 	sjmp	00515$
      000DC5                       2732 00513$:
      000DC5 25 E0            [12] 2733 	add	a,acc
      000DC7                       2734 00515$:
      000DC7 D5 F0 FB         [24] 2735 	djnz	b,00513$
      000DCA F9               [12] 2736 	mov	r1,a
      000DCB 74 02            [12] 2737 	mov	a,#0x02
      000DCD 2C               [12] 2738 	add	a,r4
      000DCE F8               [12] 2739 	mov	r0,a
      000DCF E4               [12] 2740 	clr	a
      000DD0 3D               [12] 2741 	addc	a,r5
      000DD1 FA               [12] 2742 	mov	r2,a
      000DD2 8E 03            [24] 2743 	mov	ar3,r6
      000DD4 88 82            [24] 2744 	mov	dpl,r0
      000DD6 8A 83            [24] 2745 	mov	dph,r2
      000DD8 8B F0            [24] 2746 	mov	b,r3
      000DDA 12r00r00         [24] 2747 	lcall	__gptrget
      000DDD 90r00r2C         [24] 2748 	mov	dptr,#_write_register_byte_PARM_2
      000DE0 49               [12] 2749 	orl	a,r1
      000DE1 F0               [24] 2750 	movx	@dptr,a
      000DE2 75 82 04         [24] 2751 	mov	dpl,#0x04
      000DE5 C0 06            [24] 2752 	push	ar6
      000DE7 C0 05            [24] 2753 	push	ar5
      000DE9 C0 04            [24] 2754 	push	ar4
      000DEB 12r04r53         [24] 2755 	lcall	_write_register_byte
      000DEE D0 04            [24] 2756 	pop	ar4
      000DF0 D0 05            [24] 2757 	pop	ar5
      000DF2 D0 06            [24] 2758 	pop	ar6
                                   2759 ;	src/radio.c:466: flush_tx();
      000DF4 90r00r22         [24] 2760 	mov	dptr,#_spi_write_PARM_2
      000DF7 E4               [12] 2761 	clr	a
      000DF8 F0               [24] 2762 	movx	@dptr,a
      000DF9 A3               [24] 2763 	inc	dptr
      000DFA F0               [24] 2764 	movx	@dptr,a
      000DFB A3               [24] 2765 	inc	dptr
      000DFC F0               [24] 2766 	movx	@dptr,a
      000DFD 90r00r25         [24] 2767 	mov	dptr,#_spi_write_PARM_3
      000E00 F0               [24] 2768 	movx	@dptr,a
      000E01 75 82 E1         [24] 2769 	mov	dpl,#0xE1
      000E04 C0 06            [24] 2770 	push	ar6
      000E06 C0 05            [24] 2771 	push	ar5
      000E08 C0 04            [24] 2772 	push	ar4
      000E0A 12r03r66         [24] 2773 	lcall	_spi_write
      000E0D D0 04            [24] 2774 	pop	ar4
      000E0F D0 05            [24] 2775 	pop	ar5
      000E11 D0 06            [24] 2776 	pop	ar6
                                   2777 ;	src/radio.c:467: flush_rx();
      000E13 90r00r22         [24] 2778 	mov	dptr,#_spi_write_PARM_2
      000E16 E4               [12] 2779 	clr	a
      000E17 F0               [24] 2780 	movx	@dptr,a
      000E18 A3               [24] 2781 	inc	dptr
      000E19 F0               [24] 2782 	movx	@dptr,a
      000E1A A3               [24] 2783 	inc	dptr
      000E1B F0               [24] 2784 	movx	@dptr,a
      000E1C 90r00r25         [24] 2785 	mov	dptr,#_spi_write_PARM_3
      000E1F F0               [24] 2786 	movx	@dptr,a
      000E20 75 82 E2         [24] 2787 	mov	dpl,#0xE2
      000E23 C0 06            [24] 2788 	push	ar6
      000E25 C0 05            [24] 2789 	push	ar5
      000E27 C0 04            [24] 2790 	push	ar4
      000E29 12r03r66         [24] 2791 	lcall	_spi_write
                                   2792 ;	src/radio.c:470: write_register_byte(STATUS, MAX_RT | TX_DS | RX_DR);
      000E2C 90r00r2C         [24] 2793 	mov	dptr,#_write_register_byte_PARM_2
      000E2F 74 70            [12] 2794 	mov	a,#0x70
      000E31 F0               [24] 2795 	movx	@dptr,a
      000E32 75 82 07         [24] 2796 	mov	dpl,#0x07
      000E35 12r04r53         [24] 2797 	lcall	_write_register_byte
                                   2798 ;	src/radio.c:473: write_register_byte(CONFIG, read_register_byte(CONFIG) & ~PRIM_RX);
      000E38 75 82 00         [24] 2799 	mov	dpl,#0x00
      000E3B 12r04r75         [24] 2800 	lcall	_read_register_byte
      000E3E AB 82            [24] 2801 	mov	r3,dpl
      000E40 90r00r2C         [24] 2802 	mov	dptr,#_write_register_byte_PARM_2
      000E43 74 FE            [12] 2803 	mov	a,#0xFE
      000E45 5B               [12] 2804 	anl	a,r3
      000E46 F0               [24] 2805 	movx	@dptr,a
      000E47 75 82 00         [24] 2806 	mov	dpl,#0x00
      000E4A 12r04r53         [24] 2807 	lcall	_write_register_byte
                                   2808 ;	src/radio.c:476: write_register_byte(EN_AA, ENAA_P0);
      000E4D 90r00r2C         [24] 2809 	mov	dptr,#_write_register_byte_PARM_2
      000E50 74 01            [12] 2810 	mov	a,#0x01
      000E52 F0               [24] 2811 	movx	@dptr,a
      000E53 75 82 01         [24] 2812 	mov	dpl,#0x01
      000E56 12r04r53         [24] 2813 	lcall	_write_register_byte
      000E59 D0 04            [24] 2814 	pop	ar4
      000E5B D0 05            [24] 2815 	pop	ar5
      000E5D D0 06            [24] 2816 	pop	ar6
                                   2817 ;	src/radio.c:479: spi_write(W_TX_PAYLOAD, &data[3], data[0]);
      000E5F 74 03            [12] 2818 	mov	a,#0x03
      000E61 2C               [12] 2819 	add	a,r4
      000E62 F9               [12] 2820 	mov	r1,a
      000E63 E4               [12] 2821 	clr	a
      000E64 3D               [12] 2822 	addc	a,r5
      000E65 FA               [12] 2823 	mov	r2,a
      000E66 8E 03            [24] 2824 	mov	ar3,r6
      000E68 8C 82            [24] 2825 	mov	dpl,r4
      000E6A 8D 83            [24] 2826 	mov	dph,r5
      000E6C 8E F0            [24] 2827 	mov	b,r6
      000E6E 12r00r00         [24] 2828 	lcall	__gptrget
      000E71 FC               [12] 2829 	mov	r4,a
      000E72 90r00r22         [24] 2830 	mov	dptr,#_spi_write_PARM_2
      000E75 E9               [12] 2831 	mov	a,r1
      000E76 F0               [24] 2832 	movx	@dptr,a
      000E77 EA               [12] 2833 	mov	a,r2
      000E78 A3               [24] 2834 	inc	dptr
      000E79 F0               [24] 2835 	movx	@dptr,a
      000E7A EB               [12] 2836 	mov	a,r3
      000E7B A3               [24] 2837 	inc	dptr
      000E7C F0               [24] 2838 	movx	@dptr,a
      000E7D 90r00r25         [24] 2839 	mov	dptr,#_spi_write_PARM_3
      000E80 EC               [12] 2840 	mov	a,r4
      000E81 F0               [24] 2841 	movx	@dptr,a
      000E82 75 82 A0         [24] 2842 	mov	dpl,#0xA0
      000E85 12r03r66         [24] 2843 	lcall	_spi_write
                                   2844 ;	src/radio.c:482: rfce = 1;
      000E88 D2 90            [12] 2845 	setb	_rfce
                                   2846 ;	src/nRF24LU1P.h:35: inline void delay_us(uint16_t us) { do nop_us(); while(--us); }
      000E8A 7D 0A            [12] 2847 	mov	r5,#0x0A
      000E8C 7E 00            [12] 2848 	mov	r6,#0x00
      000E8E                       2849 00216$:
      000E8E 00               [12] 2850 	nop 
      000E8F 00               [12] 2851 	nop 
      000E90 00               [12] 2852 	nop 
      000E91 00               [12] 2853 	nop 
      000E92 1D               [12] 2854 	dec	r5
      000E93 BD FF 01         [24] 2855 	cjne	r5,#0xFF,00516$
      000E96 1E               [12] 2856 	dec	r6
      000E97                       2857 00516$:
      000E97 ED               [12] 2858 	mov	a,r5
      000E98 4E               [12] 2859 	orl	a,r6
      000E99 70 F3            [24] 2860 	jnz	00216$
                                   2861 ;	src/radio.c:484: rfce = 0;
      000E9B C2 90            [12] 2862 	clr	_rfce
                                   2863 ;	src/radio.c:487: while(true)
      000E9D                       2864 00159$:
                                   2865 ;	src/radio.c:490: rfcsn = 0;
      000E9D C2 91            [12] 2866 	clr	_rfcsn
                                   2867 ;	src/radio.c:491: RFDAT = _NOP;
      000E9F 75 E5 FF         [24] 2868 	mov	_RFDAT,#0xFF
                                   2869 ;	src/radio.c:492: RFRDY = 0;
      000EA2 C2 C0            [12] 2870 	clr	_RFRDY
                                   2871 ;	src/radio.c:493: while(!RFRDY);
      000EA4                       2872 00151$:
      000EA4 30 C0 FD         [24] 2873 	jnb	_RFRDY,00151$
                                   2874 ;	src/radio.c:494: rfcsn = 1;
      000EA7 D2 91            [12] 2875 	setb	_rfcsn
                                   2876 ;	src/radio.c:497: if((RFDAT & 0x10) == 0x10)
      000EA9 74 10            [12] 2877 	mov	a,#0x10
      000EAB 55 E5            [12] 2878 	anl	a,_RFDAT
      000EAD FE               [12] 2879 	mov	r6,a
      000EAE BE 10 07         [24] 2880 	cjne	r6,#0x10,00155$
                                   2881 ;	src/radio.c:499: in1buf[0] = 0;
      000EB1 90 C6 80         [24] 2882 	mov	dptr,#_in1buf
      000EB4 E4               [12] 2883 	clr	a
      000EB5 F0               [24] 2884 	movx	@dptr,a
                                   2885 ;	src/radio.c:500: break;
      000EB6 80 0E            [24] 2886 	sjmp	00160$
      000EB8                       2887 00155$:
                                   2888 ;	src/radio.c:504: if((RFDAT & 0x20) == 0x20)
      000EB8 74 20            [12] 2889 	mov	a,#0x20
      000EBA 55 E5            [12] 2890 	anl	a,_RFDAT
      000EBC FE               [12] 2891 	mov	r6,a
      000EBD BE 20 DD         [24] 2892 	cjne	r6,#0x20,00159$
                                   2893 ;	src/radio.c:506: in1buf[0] = 1;
      000EC0 90 C6 80         [24] 2894 	mov	dptr,#_in1buf
      000EC3 74 01            [12] 2895 	mov	a,#0x01
      000EC5 F0               [24] 2896 	movx	@dptr,a
                                   2897 ;	src/radio.c:507: break;
      000EC6                       2898 00160$:
                                   2899 ;	src/radio.c:512: write_register_byte(EN_AA, ENAA_NONE);
      000EC6 90r00r2C         [24] 2900 	mov	dptr,#_write_register_byte_PARM_2
      000EC9 E4               [12] 2901 	clr	a
      000ECA F0               [24] 2902 	movx	@dptr,a
      000ECB 75 82 01         [24] 2903 	mov	dpl,#0x01
      000ECE 12r04r53         [24] 2904 	lcall	_write_register_byte
                                   2905 ;	src/radio.c:515: write_register_byte(CONFIG, read_register_byte(CONFIG) | PRIM_RX);
      000ED1 75 82 00         [24] 2906 	mov	dpl,#0x00
      000ED4 12r04r75         [24] 2907 	lcall	_read_register_byte
      000ED7 E5 82            [12] 2908 	mov	a,dpl
      000ED9 90r00r2C         [24] 2909 	mov	dptr,#_write_register_byte_PARM_2
      000EDC 44 01            [12] 2910 	orl	a,#0x01
      000EDE F0               [24] 2911 	movx	@dptr,a
      000EDF 75 82 00         [24] 2912 	mov	dpl,#0x00
      000EE2 12r04r53         [24] 2913 	lcall	_write_register_byte
                                   2914 ;	src/radio.c:518: rfce = 1;
      000EE5 D2 90            [12] 2915 	setb	_rfce
                                   2916 ;	src/radio.c:519: in1bc = 1;
      000EE7 90 C7 B7         [24] 2917 	mov	dptr,#0xC7B7
      000EEA 74 01            [12] 2918 	mov	a,#0x01
      000EEC F0               [24] 2919 	movx	@dptr,a
      000EED 22               [24] 2920 	ret
      000EEE                       2921 00180$:
                                   2922 ;	src/radio.c:523: else if(request == TRANSMIT_PAYLOAD_GENERIC)
      000EEE BF 0C 02         [24] 2923 	cjne	r7,#0x0C,00523$
      000EF1 80 01            [24] 2924 	sjmp	00524$
      000EF3                       2925 00523$:
      000EF3 22               [24] 2926 	ret
      000EF4                       2927 00524$:
                                   2928 ;	src/radio.c:525: uint8_t address_start = data[0] + data[1] + 2;
      000EF4 90r00r34         [24] 2929 	mov	dptr,#_handle_radio_request_PARM_2
      000EF7 E0               [24] 2930 	movx	a,@dptr
      000EF8 FD               [12] 2931 	mov	r5,a
      000EF9 A3               [24] 2932 	inc	dptr
      000EFA E0               [24] 2933 	movx	a,@dptr
      000EFB FE               [12] 2934 	mov	r6,a
      000EFC A3               [24] 2935 	inc	dptr
      000EFD E0               [24] 2936 	movx	a,@dptr
      000EFE FF               [12] 2937 	mov	r7,a
      000EFF 8D 82            [24] 2938 	mov	dpl,r5
      000F01 8E 83            [24] 2939 	mov	dph,r6
      000F03 8F F0            [24] 2940 	mov	b,r7
      000F05 12r00r00         [24] 2941 	lcall	__gptrget
      000F08 FC               [12] 2942 	mov	r4,a
      000F09 74 01            [12] 2943 	mov	a,#0x01
      000F0B 2D               [12] 2944 	add	a,r5
      000F0C F5*08            [12] 2945 	mov	_handle_radio_request_sloc1_1_0,a
      000F0E E4               [12] 2946 	clr	a
      000F0F 3E               [12] 2947 	addc	a,r6
      000F10 F5*09            [12] 2948 	mov	(_handle_radio_request_sloc1_1_0 + 1),a
      000F12 8F*0A            [24] 2949 	mov	(_handle_radio_request_sloc1_1_0 + 2),r7
      000F14 85*08 82         [24] 2950 	mov	dpl,_handle_radio_request_sloc1_1_0
      000F17 85*09 83         [24] 2951 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000F1A 85*0A F0         [24] 2952 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      000F1D 12r00r00         [24] 2953 	lcall	__gptrget
      000F20 2C               [12] 2954 	add	a,r4
      000F21 24 02            [12] 2955 	add	a,#0x02
      000F23 F8               [12] 2956 	mov	r0,a
                                   2957 ;	src/radio.c:528: if(data[0] > 32) data[0] = 32;
      000F24 EC               [12] 2958 	mov	a,r4
      000F25 24 DF            [12] 2959 	add	a,#0xff - 0x20
      000F27 50 0B            [24] 2960 	jnc	00162$
      000F29 8D 82            [24] 2961 	mov	dpl,r5
      000F2B 8E 83            [24] 2962 	mov	dph,r6
      000F2D 8F F0            [24] 2963 	mov	b,r7
      000F2F 74 20            [12] 2964 	mov	a,#0x20
      000F31 12r00r00         [24] 2965 	lcall	__gptrput
      000F34                       2966 00162$:
                                   2967 ;	src/radio.c:529: if(data[0] < 1) data[0] = 1;
      000F34 8D 82            [24] 2968 	mov	dpl,r5
      000F36 8E 83            [24] 2969 	mov	dph,r6
      000F38 8F F0            [24] 2970 	mov	b,r7
      000F3A 12r00r00         [24] 2971 	lcall	__gptrget
      000F3D FC               [12] 2972 	mov	r4,a
      000F3E BC 01 00         [24] 2973 	cjne	r4,#0x01,00526$
      000F41                       2974 00526$:
      000F41 50 0B            [24] 2975 	jnc	00164$
      000F43 8D 82            [24] 2976 	mov	dpl,r5
      000F45 8E 83            [24] 2977 	mov	dph,r6
      000F47 8F F0            [24] 2978 	mov	b,r7
      000F49 74 01            [12] 2979 	mov	a,#0x01
      000F4B 12r00r00         [24] 2980 	lcall	__gptrput
      000F4E                       2981 00164$:
                                   2982 ;	src/radio.c:532: if(data[1] > 5) data[1] = 5;
      000F4E 85*08 82         [24] 2983 	mov	dpl,_handle_radio_request_sloc1_1_0
      000F51 85*09 83         [24] 2984 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000F54 85*0A F0         [24] 2985 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      000F57 12r00r00         [24] 2986 	lcall	__gptrget
      000F5A FC               [12] 2987 	mov  r4,a
      000F5B 24 FA            [12] 2988 	add	a,#0xff - 0x05
      000F5D 50 0E            [24] 2989 	jnc	00166$
      000F5F 85*08 82         [24] 2990 	mov	dpl,_handle_radio_request_sloc1_1_0
      000F62 85*09 83         [24] 2991 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000F65 85*0A F0         [24] 2992 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      000F68 74 05            [12] 2993 	mov	a,#0x05
      000F6A 12r00r00         [24] 2994 	lcall	__gptrput
      000F6D                       2995 00166$:
                                   2996 ;	src/radio.c:533: if(data[1] < 1) data[1] = 1;
      000F6D 85*08 82         [24] 2997 	mov	dpl,_handle_radio_request_sloc1_1_0
      000F70 85*09 83         [24] 2998 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000F73 85*0A F0         [24] 2999 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      000F76 12r00r00         [24] 3000 	lcall	__gptrget
      000F79 FC               [12] 3001 	mov	r4,a
      000F7A BC 01 00         [24] 3002 	cjne	r4,#0x01,00529$
      000F7D                       3003 00529$:
      000F7D 50 0E            [24] 3004 	jnc	00168$
      000F7F 85*08 82         [24] 3005 	mov	dpl,_handle_radio_request_sloc1_1_0
      000F82 85*09 83         [24] 3006 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000F85 85*0A F0         [24] 3007 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      000F88 74 01            [12] 3008 	mov	a,#0x01
      000F8A 12r00r00         [24] 3009 	lcall	__gptrput
      000F8D                       3010 00168$:
                                   3011 ;	src/radio.c:536: rfce = 0;
      000F8D C2 90            [12] 3012 	clr	_rfce
                                   3013 ;	src/radio.c:539: flush_tx();
      000F8F 90r00r22         [24] 3014 	mov	dptr,#_spi_write_PARM_2
      000F92 E4               [12] 3015 	clr	a
      000F93 F0               [24] 3016 	movx	@dptr,a
      000F94 A3               [24] 3017 	inc	dptr
      000F95 F0               [24] 3018 	movx	@dptr,a
      000F96 A3               [24] 3019 	inc	dptr
      000F97 F0               [24] 3020 	movx	@dptr,a
      000F98 90r00r25         [24] 3021 	mov	dptr,#_spi_write_PARM_3
      000F9B F0               [24] 3022 	movx	@dptr,a
      000F9C 75 82 E1         [24] 3023 	mov	dpl,#0xE1
      000F9F C0 07            [24] 3024 	push	ar7
      000FA1 C0 06            [24] 3025 	push	ar6
      000FA3 C0 05            [24] 3026 	push	ar5
      000FA5 C0 00            [24] 3027 	push	ar0
      000FA7 12r03r66         [24] 3028 	lcall	_spi_write
      000FAA D0 00            [24] 3029 	pop	ar0
      000FAC D0 05            [24] 3030 	pop	ar5
      000FAE D0 06            [24] 3031 	pop	ar6
      000FB0 D0 07            [24] 3032 	pop	ar7
                                   3033 ;	src/radio.c:540: flush_rx();
      000FB2 90r00r22         [24] 3034 	mov	dptr,#_spi_write_PARM_2
      000FB5 E4               [12] 3035 	clr	a
      000FB6 F0               [24] 3036 	movx	@dptr,a
      000FB7 A3               [24] 3037 	inc	dptr
      000FB8 F0               [24] 3038 	movx	@dptr,a
      000FB9 A3               [24] 3039 	inc	dptr
      000FBA F0               [24] 3040 	movx	@dptr,a
      000FBB 90r00r25         [24] 3041 	mov	dptr,#_spi_write_PARM_3
      000FBE F0               [24] 3042 	movx	@dptr,a
      000FBF 75 82 E2         [24] 3043 	mov	dpl,#0xE2
      000FC2 C0 07            [24] 3044 	push	ar7
      000FC4 C0 06            [24] 3045 	push	ar6
      000FC6 C0 05            [24] 3046 	push	ar5
      000FC8 C0 00            [24] 3047 	push	ar0
      000FCA 12r03r66         [24] 3048 	lcall	_spi_write
                                   3049 ;	src/radio.c:543: write_register_byte(STATUS, MAX_RT | TX_DS | RX_DR);
      000FCD 90r00r2C         [24] 3050 	mov	dptr,#_write_register_byte_PARM_2
      000FD0 74 70            [12] 3051 	mov	a,#0x70
      000FD2 F0               [24] 3052 	movx	@dptr,a
      000FD3 75 82 07         [24] 3053 	mov	dpl,#0x07
      000FD6 12r04r53         [24] 3054 	lcall	_write_register_byte
                                   3055 ;	src/radio.c:546: write_register_byte(CONFIG, read_register_byte(CONFIG) & ~PRIM_RX);
      000FD9 75 82 00         [24] 3056 	mov	dpl,#0x00
      000FDC 12r04r75         [24] 3057 	lcall	_read_register_byte
      000FDF AC 82            [24] 3058 	mov	r4,dpl
      000FE1 90r00r2C         [24] 3059 	mov	dptr,#_write_register_byte_PARM_2
      000FE4 74 FE            [12] 3060 	mov	a,#0xFE
      000FE6 5C               [12] 3061 	anl	a,r4
      000FE7 F0               [24] 3062 	movx	@dptr,a
      000FE8 75 82 00         [24] 3063 	mov	dpl,#0x00
      000FEB 12r04r53         [24] 3064 	lcall	_write_register_byte
      000FEE D0 00            [24] 3065 	pop	ar0
      000FF0 D0 05            [24] 3066 	pop	ar5
      000FF2 D0 06            [24] 3067 	pop	ar6
      000FF4 D0 07            [24] 3068 	pop	ar7
                                   3069 ;	src/radio.c:549: configure_address(&data[address_start], data[1]);
      000FF6 E8               [12] 3070 	mov	a,r0
      000FF7 2D               [12] 3071 	add	a,r5
      000FF8 F8               [12] 3072 	mov	r0,a
      000FF9 E4               [12] 3073 	clr	a
      000FFA 3E               [12] 3074 	addc	a,r6
      000FFB FB               [12] 3075 	mov	r3,a
      000FFC 8F 04            [24] 3076 	mov	ar4,r7
      000FFE 85*08 82         [24] 3077 	mov	dpl,_handle_radio_request_sloc1_1_0
      001001 85*09 83         [24] 3078 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      001004 85*0A F0         [24] 3079 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      001007 12r00r00         [24] 3080 	lcall	__gptrget
      00100A 90r00r17         [24] 3081 	mov	dptr,#_configure_address_PARM_2
      00100D F0               [24] 3082 	movx	@dptr,a
      00100E 88 82            [24] 3083 	mov	dpl,r0
      001010 8B 83            [24] 3084 	mov	dph,r3
      001012 8C F0            [24] 3085 	mov	b,r4
      001014 C0 07            [24] 3086 	push	ar7
      001016 C0 06            [24] 3087 	push	ar6
      001018 C0 05            [24] 3088 	push	ar5
      00101A 12r02r83         [24] 3089 	lcall	_configure_address
      00101D D0 05            [24] 3090 	pop	ar5
      00101F D0 06            [24] 3091 	pop	ar6
      001021 D0 07            [24] 3092 	pop	ar7
                                   3093 ;	src/radio.c:552: spi_write(W_TX_PAYLOAD, &data[2], data[0]);
      001023 74 02            [12] 3094 	mov	a,#0x02
      001025 2D               [12] 3095 	add	a,r5
      001026 FA               [12] 3096 	mov	r2,a
      001027 E4               [12] 3097 	clr	a
      001028 3E               [12] 3098 	addc	a,r6
      001029 FB               [12] 3099 	mov	r3,a
      00102A 8F 04            [24] 3100 	mov	ar4,r7
      00102C 8D 82            [24] 3101 	mov	dpl,r5
      00102E 8E 83            [24] 3102 	mov	dph,r6
      001030 8F F0            [24] 3103 	mov	b,r7
      001032 12r00r00         [24] 3104 	lcall	__gptrget
      001035 FD               [12] 3105 	mov	r5,a
      001036 90r00r22         [24] 3106 	mov	dptr,#_spi_write_PARM_2
      001039 EA               [12] 3107 	mov	a,r2
      00103A F0               [24] 3108 	movx	@dptr,a
      00103B EB               [12] 3109 	mov	a,r3
      00103C A3               [24] 3110 	inc	dptr
      00103D F0               [24] 3111 	movx	@dptr,a
      00103E EC               [12] 3112 	mov	a,r4
      00103F A3               [24] 3113 	inc	dptr
      001040 F0               [24] 3114 	movx	@dptr,a
      001041 90r00r25         [24] 3115 	mov	dptr,#_spi_write_PARM_3
      001044 ED               [12] 3116 	mov	a,r5
      001045 F0               [24] 3117 	movx	@dptr,a
      001046 75 82 A0         [24] 3118 	mov	dpl,#0xA0
      001049 12r03r66         [24] 3119 	lcall	_spi_write
                                   3120 ;	src/radio.c:555: rfce = 1;
      00104C D2 90            [12] 3121 	setb	_rfce
                                   3122 ;	src/nRF24LU1P.h:35: inline void delay_us(uint16_t us) { do nop_us(); while(--us); }
      00104E 7E 0A            [12] 3123 	mov	r6,#0x0A
      001050 7F 00            [12] 3124 	mov	r7,#0x00
      001052                       3125 00220$:
      001052 00               [12] 3126 	nop 
      001053 00               [12] 3127 	nop 
      001054 00               [12] 3128 	nop 
      001055 00               [12] 3129 	nop 
      001056 1E               [12] 3130 	dec	r6
      001057 BE FF 01         [24] 3131 	cjne	r6,#0xFF,00531$
      00105A 1F               [12] 3132 	dec	r7
      00105B                       3133 00531$:
      00105B EE               [12] 3134 	mov	a,r6
      00105C 4F               [12] 3135 	orl	a,r7
      00105D 70 F3            [24] 3136 	jnz	00220$
                                   3137 ;	src/radio.c:557: rfce = 0;
      00105F C2 90            [12] 3138 	clr	_rfce
                                   3139 ;	src/radio.c:560: while(true)
      001061                       3140 00175$:
                                   3141 ;	src/radio.c:563: rfcsn = 0;
      001061 C2 91            [12] 3142 	clr	_rfcsn
                                   3143 ;	src/radio.c:564: RFDAT = _NOP;
      001063 75 E5 FF         [24] 3144 	mov	_RFDAT,#0xFF
                                   3145 ;	src/radio.c:565: RFRDY = 0;
      001066 C2 C0            [12] 3146 	clr	_RFRDY
                                   3147 ;	src/radio.c:566: while(!RFRDY);
      001068                       3148 00169$:
      001068 30 C0 FD         [24] 3149 	jnb	_RFRDY,00169$
                                   3150 ;	src/radio.c:567: rfcsn = 1;
      00106B D2 91            [12] 3151 	setb	_rfcsn
                                   3152 ;	src/radio.c:570: if((RFDAT & TX_DS) == TX_DS)
      00106D 74 20            [12] 3153 	mov	a,#0x20
      00106F 55 E5            [12] 3154 	anl	a,_RFDAT
      001071 FF               [12] 3155 	mov	r7,a
      001072 BF 20 EC         [24] 3156 	cjne	r7,#0x20,00175$
                                   3157 ;	src/radio.c:572: in1buf[0] = 1;
      001075 90 C6 80         [24] 3158 	mov	dptr,#_in1buf
      001078 74 01            [12] 3159 	mov	a,#0x01
      00107A F0               [24] 3160 	movx	@dptr,a
                                   3161 ;	src/radio.c:578: write_register_byte(CONFIG, read_register_byte(CONFIG) | PRIM_RX);
      00107B 75 82 00         [24] 3162 	mov	dpl,#0x00
      00107E 12r04r75         [24] 3163 	lcall	_read_register_byte
      001081 E5 82            [12] 3164 	mov	a,dpl
      001083 90r00r2C         [24] 3165 	mov	dptr,#_write_register_byte_PARM_2
      001086 44 01            [12] 3166 	orl	a,#0x01
      001088 F0               [24] 3167 	movx	@dptr,a
      001089 75 82 00         [24] 3168 	mov	dpl,#0x00
      00108C 12r04r53         [24] 3169 	lcall	_write_register_byte
                                   3170 ;	src/radio.c:579: configure_address(pm_prefix, pm_prefix_length);
      00108F 90r00r01         [24] 3171 	mov	dptr,#_pm_prefix_length
      001092 E0               [24] 3172 	movx	a,@dptr
      001093 FE               [12] 3173 	mov	r6,a
      001094 A3               [24] 3174 	inc	dptr
      001095 E0               [24] 3175 	movx	a,@dptr
      001096 90r00r17         [24] 3176 	mov	dptr,#_configure_address_PARM_2
      001099 EE               [12] 3177 	mov	a,r6
      00109A F0               [24] 3178 	movx	@dptr,a
      00109B 90r00r03         [24] 3179 	mov	dptr,#_pm_prefix
      00109E 75 F0 00         [24] 3180 	mov	b,#0x00
      0010A1 12r02r83         [24] 3181 	lcall	_configure_address
                                   3182 ;	src/radio.c:582: rfce = 1;
      0010A4 D2 90            [12] 3183 	setb	_rfce
                                   3184 ;	src/radio.c:583: in1bc = 1;
      0010A6 90 C7 B7         [24] 3185 	mov	dptr,#0xC7B7
      0010A9 74 01            [12] 3186 	mov	a,#0x01
      0010AB F0               [24] 3187 	movx	@dptr,a
      0010AC 22               [24] 3188 	ret
                                   3189 	.area CSEG    (CODE)
                                   3190 	.area CONST   (CODE)
                                   3191 	.area XINIT   (CODE)
      000000                       3192 __xinit__nordic_bootloader:
      000000 00 78                 3193 	.byte #0x00,#0x78
      000002                       3194 __xinit__logitech_bootloader:
      000002 00 74                 3195 	.byte #0x00,#0x74
      000004                       3196 __xinit__promiscuous_address:
      000004 AA                    3197 	.db #0xAA	; 170
      000005 00                    3198 	.db #0x00	; 0
                                   3199 	.area CABS    (ABS,CODE)
